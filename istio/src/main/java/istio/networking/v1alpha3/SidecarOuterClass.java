// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networking/v1alpha3/sidecar.proto

package istio.networking.v1alpha3;

public final class SidecarOuterClass {
  private SidecarOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * `CaptureMode` describes how traffic to a listener is expected to be
   * captured. Applicable only when the listener is bound to an IP.
   * </pre>
   *
   * Protobuf enum {@code istio.networking.v1alpha3.CaptureMode}
   */
  public enum CaptureMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The default capture mode defined by the environment.
     * </pre>
     *
     * <code>DEFAULT = 0;</code>
     */
    DEFAULT(0),
    /**
     * <pre>
     * Capture traffic using IPtables redirection.
     * </pre>
     *
     * <code>IPTABLES = 1;</code>
     */
    IPTABLES(1),
    /**
     * <pre>
     * No traffic capture. When used in an egress listener, the application is
     * expected to explicitly communicate with the listener port or Unix
     * domain socket. When used in an ingress listener, care needs to be taken
     * to ensure that the listener port is not in use by other processes on
     * the host.
     * </pre>
     *
     * <code>NONE = 2;</code>
     */
    NONE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The default capture mode defined by the environment.
     * </pre>
     *
     * <code>DEFAULT = 0;</code>
     */
    public static final int DEFAULT_VALUE = 0;
    /**
     * <pre>
     * Capture traffic using IPtables redirection.
     * </pre>
     *
     * <code>IPTABLES = 1;</code>
     */
    public static final int IPTABLES_VALUE = 1;
    /**
     * <pre>
     * No traffic capture. When used in an egress listener, the application is
     * expected to explicitly communicate with the listener port or Unix
     * domain socket. When used in an ingress listener, care needs to be taken
     * to ensure that the listener port is not in use by other processes on
     * the host.
     * </pre>
     *
     * <code>NONE = 2;</code>
     */
    public static final int NONE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CaptureMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CaptureMode forNumber(int value) {
      switch (value) {
        case 0: return DEFAULT;
        case 1: return IPTABLES;
        case 2: return NONE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CaptureMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CaptureMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CaptureMode>() {
            public CaptureMode findValueByNumber(int number) {
              return CaptureMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return istio.networking.v1alpha3.SidecarOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final CaptureMode[] VALUES = values();

    public static CaptureMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CaptureMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:istio.networking.v1alpha3.CaptureMode)
  }

  public interface SidecarOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.Sidecar)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     * @return Whether the workloadSelector field is set.
     */
    boolean hasWorkloadSelector();
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     * @return The workloadSelector.
     */
    istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector getWorkloadSelector();
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     */
    istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelectorOrBuilder getWorkloadSelectorOrBuilder();

    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener> 
        getIngressList();
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener getIngress(int index);
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    int getIngressCount();
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    java.util.List<? extends istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListenerOrBuilder> 
        getIngressOrBuilderList();
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListenerOrBuilder getIngressOrBuilder(
        int index);

    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener> 
        getEgressList();
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener getEgress(int index);
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    int getEgressCount();
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    java.util.List<? extends istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListenerOrBuilder> 
        getEgressOrBuilderList();
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListenerOrBuilder getEgressOrBuilder(
        int index);

    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     * @return Whether the outboundTrafficPolicy field is set.
     */
    boolean hasOutboundTrafficPolicy();
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     * @return The outboundTrafficPolicy.
     */
    istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy getOutboundTrafficPolicy();
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     */
    istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicyOrBuilder getOutboundTrafficPolicyOrBuilder();
  }
  /**
   * <pre>
   * `Sidecar` describes the configuration of the sidecar proxy that mediates
   * inbound and outbound communication of the workload instance to which it is
   * attached.
   * &lt;!-- crd generation tags
   * +cue-gen:Sidecar:groupName:networking.istio.io
   * +cue-gen:Sidecar:version:v1alpha3
   * +cue-gen:Sidecar:storageVersion
   * +cue-gen:Sidecar:annotations:helm.sh/resource-policy=keep
   * +cue-gen:Sidecar:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
   * +cue-gen:Sidecar:subresource:status
   * +cue-gen:Sidecar:scope:Namespaced
   * +cue-gen:Sidecar:resource:categories=istio-io,networking-istio-io
   * +cue-gen:Sidecar:preserveUnknownFields:false
   * --&gt;
   * &lt;!-- go code generation tags
   * +kubetype-gen
   * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
   * +genclient
   * +k8s:deepcopy-gen=true
   * --&gt;
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.Sidecar}
   */
  public static final class Sidecar extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.Sidecar)
      SidecarOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Sidecar.newBuilder() to construct.
    private Sidecar(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sidecar() {
      ingress_ = java.util.Collections.emptyList();
      egress_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Sidecar();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_Sidecar_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_Sidecar_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.SidecarOuterClass.Sidecar.class, istio.networking.v1alpha3.SidecarOuterClass.Sidecar.Builder.class);
    }

    public static final int WORKLOAD_SELECTOR_FIELD_NUMBER = 1;
    private istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector workloadSelector_;
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     * @return Whether the workloadSelector field is set.
     */
    @java.lang.Override
    public boolean hasWorkloadSelector() {
      return workloadSelector_ != null;
    }
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     * @return The workloadSelector.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector getWorkloadSelector() {
      return workloadSelector_ == null ? istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.getDefaultInstance() : workloadSelector_;
    }
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelectorOrBuilder getWorkloadSelectorOrBuilder() {
      return workloadSelector_ == null ? istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.getDefaultInstance() : workloadSelector_;
    }

    public static final int INGRESS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener> ingress_;
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    @java.lang.Override
    public java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener> getIngressList() {
      return ingress_;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListenerOrBuilder> 
        getIngressOrBuilderList() {
      return ingress_;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    @java.lang.Override
    public int getIngressCount() {
      return ingress_.size();
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener getIngress(int index) {
      return ingress_.get(index);
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListenerOrBuilder getIngressOrBuilder(
        int index) {
      return ingress_.get(index);
    }

    public static final int EGRESS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener> egress_;
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    @java.lang.Override
    public java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener> getEgressList() {
      return egress_;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListenerOrBuilder> 
        getEgressOrBuilderList() {
      return egress_;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    @java.lang.Override
    public int getEgressCount() {
      return egress_.size();
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener getEgress(int index) {
      return egress_.get(index);
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListenerOrBuilder getEgressOrBuilder(
        int index) {
      return egress_.get(index);
    }

    public static final int OUTBOUND_TRAFFIC_POLICY_FIELD_NUMBER = 4;
    private istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy outboundTrafficPolicy_;
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     * @return Whether the outboundTrafficPolicy field is set.
     */
    @java.lang.Override
    public boolean hasOutboundTrafficPolicy() {
      return outboundTrafficPolicy_ != null;
    }
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     * @return The outboundTrafficPolicy.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy getOutboundTrafficPolicy() {
      return outboundTrafficPolicy_ == null ? istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.getDefaultInstance() : outboundTrafficPolicy_;
    }
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicyOrBuilder getOutboundTrafficPolicyOrBuilder() {
      return outboundTrafficPolicy_ == null ? istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.getDefaultInstance() : outboundTrafficPolicy_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (workloadSelector_ != null) {
        output.writeMessage(1, getWorkloadSelector());
      }
      for (int i = 0; i < ingress_.size(); i++) {
        output.writeMessage(2, ingress_.get(i));
      }
      for (int i = 0; i < egress_.size(); i++) {
        output.writeMessage(3, egress_.get(i));
      }
      if (outboundTrafficPolicy_ != null) {
        output.writeMessage(4, getOutboundTrafficPolicy());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (workloadSelector_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getWorkloadSelector());
      }
      for (int i = 0; i < ingress_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, ingress_.get(i));
      }
      for (int i = 0; i < egress_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, egress_.get(i));
      }
      if (outboundTrafficPolicy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getOutboundTrafficPolicy());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.SidecarOuterClass.Sidecar)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.SidecarOuterClass.Sidecar other = (istio.networking.v1alpha3.SidecarOuterClass.Sidecar) obj;

      if (hasWorkloadSelector() != other.hasWorkloadSelector()) return false;
      if (hasWorkloadSelector()) {
        if (!getWorkloadSelector()
            .equals(other.getWorkloadSelector())) return false;
      }
      if (!getIngressList()
          .equals(other.getIngressList())) return false;
      if (!getEgressList()
          .equals(other.getEgressList())) return false;
      if (hasOutboundTrafficPolicy() != other.hasOutboundTrafficPolicy()) return false;
      if (hasOutboundTrafficPolicy()) {
        if (!getOutboundTrafficPolicy()
            .equals(other.getOutboundTrafficPolicy())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasWorkloadSelector()) {
        hash = (37 * hash) + WORKLOAD_SELECTOR_FIELD_NUMBER;
        hash = (53 * hash) + getWorkloadSelector().hashCode();
      }
      if (getIngressCount() > 0) {
        hash = (37 * hash) + INGRESS_FIELD_NUMBER;
        hash = (53 * hash) + getIngressList().hashCode();
      }
      if (getEgressCount() > 0) {
        hash = (37 * hash) + EGRESS_FIELD_NUMBER;
        hash = (53 * hash) + getEgressList().hashCode();
      }
      if (hasOutboundTrafficPolicy()) {
        hash = (37 * hash) + OUTBOUND_TRAFFIC_POLICY_FIELD_NUMBER;
        hash = (53 * hash) + getOutboundTrafficPolicy().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.SidecarOuterClass.Sidecar prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * `Sidecar` describes the configuration of the sidecar proxy that mediates
     * inbound and outbound communication of the workload instance to which it is
     * attached.
     * &lt;!-- crd generation tags
     * +cue-gen:Sidecar:groupName:networking.istio.io
     * +cue-gen:Sidecar:version:v1alpha3
     * +cue-gen:Sidecar:storageVersion
     * +cue-gen:Sidecar:annotations:helm.sh/resource-policy=keep
     * +cue-gen:Sidecar:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
     * +cue-gen:Sidecar:subresource:status
     * +cue-gen:Sidecar:scope:Namespaced
     * +cue-gen:Sidecar:resource:categories=istio-io,networking-istio-io
     * +cue-gen:Sidecar:preserveUnknownFields:false
     * --&gt;
     * &lt;!-- go code generation tags
     * +kubetype-gen
     * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
     * +genclient
     * +k8s:deepcopy-gen=true
     * --&gt;
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.Sidecar}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.Sidecar)
        istio.networking.v1alpha3.SidecarOuterClass.SidecarOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_Sidecar_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_Sidecar_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.SidecarOuterClass.Sidecar.class, istio.networking.v1alpha3.SidecarOuterClass.Sidecar.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.SidecarOuterClass.Sidecar.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        workloadSelector_ = null;
        if (workloadSelectorBuilder_ != null) {
          workloadSelectorBuilder_.dispose();
          workloadSelectorBuilder_ = null;
        }
        if (ingressBuilder_ == null) {
          ingress_ = java.util.Collections.emptyList();
        } else {
          ingress_ = null;
          ingressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (egressBuilder_ == null) {
          egress_ = java.util.Collections.emptyList();
        } else {
          egress_ = null;
          egressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        outboundTrafficPolicy_ = null;
        if (outboundTrafficPolicyBuilder_ != null) {
          outboundTrafficPolicyBuilder_.dispose();
          outboundTrafficPolicyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_Sidecar_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.Sidecar getDefaultInstanceForType() {
        return istio.networking.v1alpha3.SidecarOuterClass.Sidecar.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.Sidecar build() {
        istio.networking.v1alpha3.SidecarOuterClass.Sidecar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.Sidecar buildPartial() {
        istio.networking.v1alpha3.SidecarOuterClass.Sidecar result = new istio.networking.v1alpha3.SidecarOuterClass.Sidecar(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(istio.networking.v1alpha3.SidecarOuterClass.Sidecar result) {
        if (ingressBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            ingress_ = java.util.Collections.unmodifiableList(ingress_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.ingress_ = ingress_;
        } else {
          result.ingress_ = ingressBuilder_.build();
        }
        if (egressBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            egress_ = java.util.Collections.unmodifiableList(egress_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.egress_ = egress_;
        } else {
          result.egress_ = egressBuilder_.build();
        }
      }

      private void buildPartial0(istio.networking.v1alpha3.SidecarOuterClass.Sidecar result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.workloadSelector_ = workloadSelectorBuilder_ == null
              ? workloadSelector_
              : workloadSelectorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.outboundTrafficPolicy_ = outboundTrafficPolicyBuilder_ == null
              ? outboundTrafficPolicy_
              : outboundTrafficPolicyBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.SidecarOuterClass.Sidecar) {
          return mergeFrom((istio.networking.v1alpha3.SidecarOuterClass.Sidecar)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.SidecarOuterClass.Sidecar other) {
        if (other == istio.networking.v1alpha3.SidecarOuterClass.Sidecar.getDefaultInstance()) return this;
        if (other.hasWorkloadSelector()) {
          mergeWorkloadSelector(other.getWorkloadSelector());
        }
        if (ingressBuilder_ == null) {
          if (!other.ingress_.isEmpty()) {
            if (ingress_.isEmpty()) {
              ingress_ = other.ingress_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureIngressIsMutable();
              ingress_.addAll(other.ingress_);
            }
            onChanged();
          }
        } else {
          if (!other.ingress_.isEmpty()) {
            if (ingressBuilder_.isEmpty()) {
              ingressBuilder_.dispose();
              ingressBuilder_ = null;
              ingress_ = other.ingress_;
              bitField0_ = (bitField0_ & ~0x00000002);
              ingressBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIngressFieldBuilder() : null;
            } else {
              ingressBuilder_.addAllMessages(other.ingress_);
            }
          }
        }
        if (egressBuilder_ == null) {
          if (!other.egress_.isEmpty()) {
            if (egress_.isEmpty()) {
              egress_ = other.egress_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureEgressIsMutable();
              egress_.addAll(other.egress_);
            }
            onChanged();
          }
        } else {
          if (!other.egress_.isEmpty()) {
            if (egressBuilder_.isEmpty()) {
              egressBuilder_.dispose();
              egressBuilder_ = null;
              egress_ = other.egress_;
              bitField0_ = (bitField0_ & ~0x00000004);
              egressBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEgressFieldBuilder() : null;
            } else {
              egressBuilder_.addAllMessages(other.egress_);
            }
          }
        }
        if (other.hasOutboundTrafficPolicy()) {
          mergeOutboundTrafficPolicy(other.getOutboundTrafficPolicy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getWorkloadSelectorFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener m =
                    input.readMessage(
                        istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.parser(),
                        extensionRegistry);
                if (ingressBuilder_ == null) {
                  ensureIngressIsMutable();
                  ingress_.add(m);
                } else {
                  ingressBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener m =
                    input.readMessage(
                        istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.parser(),
                        extensionRegistry);
                if (egressBuilder_ == null) {
                  ensureEgressIsMutable();
                  egress_.add(m);
                } else {
                  egressBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getOutboundTrafficPolicyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector workloadSelector_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector, istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.Builder, istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelectorOrBuilder> workloadSelectorBuilder_;
      /**
       * <pre>
       * Criteria used to select the specific set of pods/VMs on which this
       * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
       * configuration will be applied to all workload instances in the same namespace.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
       * @return Whether the workloadSelector field is set.
       */
      public boolean hasWorkloadSelector() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Criteria used to select the specific set of pods/VMs on which this
       * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
       * configuration will be applied to all workload instances in the same namespace.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
       * @return The workloadSelector.
       */
      public istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector getWorkloadSelector() {
        if (workloadSelectorBuilder_ == null) {
          return workloadSelector_ == null ? istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.getDefaultInstance() : workloadSelector_;
        } else {
          return workloadSelectorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Criteria used to select the specific set of pods/VMs on which this
       * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
       * configuration will be applied to all workload instances in the same namespace.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
       */
      public Builder setWorkloadSelector(istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector value) {
        if (workloadSelectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          workloadSelector_ = value;
        } else {
          workloadSelectorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Criteria used to select the specific set of pods/VMs on which this
       * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
       * configuration will be applied to all workload instances in the same namespace.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
       */
      public Builder setWorkloadSelector(
          istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.Builder builderForValue) {
        if (workloadSelectorBuilder_ == null) {
          workloadSelector_ = builderForValue.build();
        } else {
          workloadSelectorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Criteria used to select the specific set of pods/VMs on which this
       * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
       * configuration will be applied to all workload instances in the same namespace.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
       */
      public Builder mergeWorkloadSelector(istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector value) {
        if (workloadSelectorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            workloadSelector_ != null &&
            workloadSelector_ != istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.getDefaultInstance()) {
            getWorkloadSelectorBuilder().mergeFrom(value);
          } else {
            workloadSelector_ = value;
          }
        } else {
          workloadSelectorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Criteria used to select the specific set of pods/VMs on which this
       * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
       * configuration will be applied to all workload instances in the same namespace.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
       */
      public Builder clearWorkloadSelector() {
        bitField0_ = (bitField0_ & ~0x00000001);
        workloadSelector_ = null;
        if (workloadSelectorBuilder_ != null) {
          workloadSelectorBuilder_.dispose();
          workloadSelectorBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Criteria used to select the specific set of pods/VMs on which this
       * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
       * configuration will be applied to all workload instances in the same namespace.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.Builder getWorkloadSelectorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getWorkloadSelectorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Criteria used to select the specific set of pods/VMs on which this
       * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
       * configuration will be applied to all workload instances in the same namespace.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelectorOrBuilder getWorkloadSelectorOrBuilder() {
        if (workloadSelectorBuilder_ != null) {
          return workloadSelectorBuilder_.getMessageOrBuilder();
        } else {
          return workloadSelector_ == null ?
              istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.getDefaultInstance() : workloadSelector_;
        }
      }
      /**
       * <pre>
       * Criteria used to select the specific set of pods/VMs on which this
       * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
       * configuration will be applied to all workload instances in the same namespace.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector, istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.Builder, istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelectorOrBuilder> 
          getWorkloadSelectorFieldBuilder() {
        if (workloadSelectorBuilder_ == null) {
          workloadSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector, istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.Builder, istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelectorOrBuilder>(
                  getWorkloadSelector(),
                  getParentForChildren(),
                  isClean());
          workloadSelector_ = null;
        }
        return workloadSelectorBuilder_;
      }

      private java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener> ingress_ =
        java.util.Collections.emptyList();
      private void ensureIngressIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          ingress_ = new java.util.ArrayList<istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener>(ingress_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListenerOrBuilder> ingressBuilder_;

      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener> getIngressList() {
        if (ingressBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ingress_);
        } else {
          return ingressBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public int getIngressCount() {
        if (ingressBuilder_ == null) {
          return ingress_.size();
        } else {
          return ingressBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener getIngress(int index) {
        if (ingressBuilder_ == null) {
          return ingress_.get(index);
        } else {
          return ingressBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public Builder setIngress(
          int index, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener value) {
        if (ingressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIngressIsMutable();
          ingress_.set(index, value);
          onChanged();
        } else {
          ingressBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public Builder setIngress(
          int index, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder builderForValue) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.set(index, builderForValue.build());
          onChanged();
        } else {
          ingressBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public Builder addIngress(istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener value) {
        if (ingressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIngressIsMutable();
          ingress_.add(value);
          onChanged();
        } else {
          ingressBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public Builder addIngress(
          int index, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener value) {
        if (ingressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIngressIsMutable();
          ingress_.add(index, value);
          onChanged();
        } else {
          ingressBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public Builder addIngress(
          istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder builderForValue) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.add(builderForValue.build());
          onChanged();
        } else {
          ingressBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public Builder addIngress(
          int index, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder builderForValue) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.add(index, builderForValue.build());
          onChanged();
        } else {
          ingressBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public Builder addAllIngress(
          java.lang.Iterable<? extends istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener> values) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ingress_);
          onChanged();
        } else {
          ingressBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public Builder clearIngress() {
        if (ingressBuilder_ == null) {
          ingress_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          ingressBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public Builder removeIngress(int index) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.remove(index);
          onChanged();
        } else {
          ingressBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder getIngressBuilder(
          int index) {
        return getIngressFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListenerOrBuilder getIngressOrBuilder(
          int index) {
        if (ingressBuilder_ == null) {
          return ingress_.get(index);  } else {
          return ingressBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public java.util.List<? extends istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListenerOrBuilder> 
           getIngressOrBuilderList() {
        if (ingressBuilder_ != null) {
          return ingressBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ingress_);
        }
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder addIngressBuilder() {
        return getIngressFieldBuilder().addBuilder(
            istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.getDefaultInstance());
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder addIngressBuilder(
          int index) {
        return getIngressFieldBuilder().addBuilder(
            index, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.getDefaultInstance());
      }
      /**
       * <pre>
       * Ingress specifies the configuration of the sidecar for processing
       * inbound traffic to the attached workload instance. If omitted, Istio will
       * automatically configure the sidecar based on the information about the workload
       * obtained from the orchestration platform (e.g., exposed ports, services,
       * etc.). If specified, inbound ports are configured if and only if the
       * workload instance is associated with a service.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
       */
      public java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder> 
           getIngressBuilderList() {
        return getIngressFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListenerOrBuilder> 
          getIngressFieldBuilder() {
        if (ingressBuilder_ == null) {
          ingressBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListenerOrBuilder>(
                  ingress_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          ingress_ = null;
        }
        return ingressBuilder_;
      }

      private java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener> egress_ =
        java.util.Collections.emptyList();
      private void ensureEgressIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          egress_ = new java.util.ArrayList<istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener>(egress_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListenerOrBuilder> egressBuilder_;

      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener> getEgressList() {
        if (egressBuilder_ == null) {
          return java.util.Collections.unmodifiableList(egress_);
        } else {
          return egressBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public int getEgressCount() {
        if (egressBuilder_ == null) {
          return egress_.size();
        } else {
          return egressBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener getEgress(int index) {
        if (egressBuilder_ == null) {
          return egress_.get(index);
        } else {
          return egressBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public Builder setEgress(
          int index, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener value) {
        if (egressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEgressIsMutable();
          egress_.set(index, value);
          onChanged();
        } else {
          egressBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public Builder setEgress(
          int index, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder builderForValue) {
        if (egressBuilder_ == null) {
          ensureEgressIsMutable();
          egress_.set(index, builderForValue.build());
          onChanged();
        } else {
          egressBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public Builder addEgress(istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener value) {
        if (egressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEgressIsMutable();
          egress_.add(value);
          onChanged();
        } else {
          egressBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public Builder addEgress(
          int index, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener value) {
        if (egressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEgressIsMutable();
          egress_.add(index, value);
          onChanged();
        } else {
          egressBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public Builder addEgress(
          istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder builderForValue) {
        if (egressBuilder_ == null) {
          ensureEgressIsMutable();
          egress_.add(builderForValue.build());
          onChanged();
        } else {
          egressBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public Builder addEgress(
          int index, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder builderForValue) {
        if (egressBuilder_ == null) {
          ensureEgressIsMutable();
          egress_.add(index, builderForValue.build());
          onChanged();
        } else {
          egressBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public Builder addAllEgress(
          java.lang.Iterable<? extends istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener> values) {
        if (egressBuilder_ == null) {
          ensureEgressIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, egress_);
          onChanged();
        } else {
          egressBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public Builder clearEgress() {
        if (egressBuilder_ == null) {
          egress_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          egressBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public Builder removeEgress(int index) {
        if (egressBuilder_ == null) {
          ensureEgressIsMutable();
          egress_.remove(index);
          onChanged();
        } else {
          egressBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder getEgressBuilder(
          int index) {
        return getEgressFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListenerOrBuilder getEgressOrBuilder(
          int index) {
        if (egressBuilder_ == null) {
          return egress_.get(index);  } else {
          return egressBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public java.util.List<? extends istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListenerOrBuilder> 
           getEgressOrBuilderList() {
        if (egressBuilder_ != null) {
          return egressBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(egress_);
        }
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder addEgressBuilder() {
        return getEgressFieldBuilder().addBuilder(
            istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.getDefaultInstance());
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder addEgressBuilder(
          int index) {
        return getEgressFieldBuilder().addBuilder(
            index, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.getDefaultInstance());
      }
      /**
       * <pre>
       * Egress specifies the configuration of the sidecar for processing
       * outbound traffic from the attached workload instance to other
       * services in the mesh. If not specified, inherits the system
       * detected defaults from the namespace-wide or the global default Sidecar.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
       */
      public java.util.List<istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder> 
           getEgressBuilderList() {
        return getEgressFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListenerOrBuilder> 
          getEgressFieldBuilder() {
        if (egressBuilder_ == null) {
          egressBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListenerOrBuilder>(
                  egress_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          egress_ = null;
        }
        return egressBuilder_;
      }

      private istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy outboundTrafficPolicy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy, istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Builder, istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicyOrBuilder> outboundTrafficPolicyBuilder_;
      /**
       * <pre>
       * Configuration for the outbound traffic policy.  If your
       * application uses one or more external services that are not known
       * apriori, setting the policy to `ALLOW_ANY` will cause the
       * sidecars to route any unknown traffic originating from the
       * application to its requested destination. If not specified,
       * inherits the system detected defaults from the namespace-wide or
       * the global default Sidecar.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
       * @return Whether the outboundTrafficPolicy field is set.
       */
      public boolean hasOutboundTrafficPolicy() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Configuration for the outbound traffic policy.  If your
       * application uses one or more external services that are not known
       * apriori, setting the policy to `ALLOW_ANY` will cause the
       * sidecars to route any unknown traffic originating from the
       * application to its requested destination. If not specified,
       * inherits the system detected defaults from the namespace-wide or
       * the global default Sidecar.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
       * @return The outboundTrafficPolicy.
       */
      public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy getOutboundTrafficPolicy() {
        if (outboundTrafficPolicyBuilder_ == null) {
          return outboundTrafficPolicy_ == null ? istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.getDefaultInstance() : outboundTrafficPolicy_;
        } else {
          return outboundTrafficPolicyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Configuration for the outbound traffic policy.  If your
       * application uses one or more external services that are not known
       * apriori, setting the policy to `ALLOW_ANY` will cause the
       * sidecars to route any unknown traffic originating from the
       * application to its requested destination. If not specified,
       * inherits the system detected defaults from the namespace-wide or
       * the global default Sidecar.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
       */
      public Builder setOutboundTrafficPolicy(istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy value) {
        if (outboundTrafficPolicyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outboundTrafficPolicy_ = value;
        } else {
          outboundTrafficPolicyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration for the outbound traffic policy.  If your
       * application uses one or more external services that are not known
       * apriori, setting the policy to `ALLOW_ANY` will cause the
       * sidecars to route any unknown traffic originating from the
       * application to its requested destination. If not specified,
       * inherits the system detected defaults from the namespace-wide or
       * the global default Sidecar.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
       */
      public Builder setOutboundTrafficPolicy(
          istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Builder builderForValue) {
        if (outboundTrafficPolicyBuilder_ == null) {
          outboundTrafficPolicy_ = builderForValue.build();
        } else {
          outboundTrafficPolicyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration for the outbound traffic policy.  If your
       * application uses one or more external services that are not known
       * apriori, setting the policy to `ALLOW_ANY` will cause the
       * sidecars to route any unknown traffic originating from the
       * application to its requested destination. If not specified,
       * inherits the system detected defaults from the namespace-wide or
       * the global default Sidecar.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
       */
      public Builder mergeOutboundTrafficPolicy(istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy value) {
        if (outboundTrafficPolicyBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            outboundTrafficPolicy_ != null &&
            outboundTrafficPolicy_ != istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.getDefaultInstance()) {
            getOutboundTrafficPolicyBuilder().mergeFrom(value);
          } else {
            outboundTrafficPolicy_ = value;
          }
        } else {
          outboundTrafficPolicyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration for the outbound traffic policy.  If your
       * application uses one or more external services that are not known
       * apriori, setting the policy to `ALLOW_ANY` will cause the
       * sidecars to route any unknown traffic originating from the
       * application to its requested destination. If not specified,
       * inherits the system detected defaults from the namespace-wide or
       * the global default Sidecar.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
       */
      public Builder clearOutboundTrafficPolicy() {
        bitField0_ = (bitField0_ & ~0x00000008);
        outboundTrafficPolicy_ = null;
        if (outboundTrafficPolicyBuilder_ != null) {
          outboundTrafficPolicyBuilder_.dispose();
          outboundTrafficPolicyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration for the outbound traffic policy.  If your
       * application uses one or more external services that are not known
       * apriori, setting the policy to `ALLOW_ANY` will cause the
       * sidecars to route any unknown traffic originating from the
       * application to its requested destination. If not specified,
       * inherits the system detected defaults from the namespace-wide or
       * the global default Sidecar.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Builder getOutboundTrafficPolicyBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getOutboundTrafficPolicyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Configuration for the outbound traffic policy.  If your
       * application uses one or more external services that are not known
       * apriori, setting the policy to `ALLOW_ANY` will cause the
       * sidecars to route any unknown traffic originating from the
       * application to its requested destination. If not specified,
       * inherits the system detected defaults from the namespace-wide or
       * the global default Sidecar.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
       */
      public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicyOrBuilder getOutboundTrafficPolicyOrBuilder() {
        if (outboundTrafficPolicyBuilder_ != null) {
          return outboundTrafficPolicyBuilder_.getMessageOrBuilder();
        } else {
          return outboundTrafficPolicy_ == null ?
              istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.getDefaultInstance() : outboundTrafficPolicy_;
        }
      }
      /**
       * <pre>
       * Configuration for the outbound traffic policy.  If your
       * application uses one or more external services that are not known
       * apriori, setting the policy to `ALLOW_ANY` will cause the
       * sidecars to route any unknown traffic originating from the
       * application to its requested destination. If not specified,
       * inherits the system detected defaults from the namespace-wide or
       * the global default Sidecar.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy, istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Builder, istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicyOrBuilder> 
          getOutboundTrafficPolicyFieldBuilder() {
        if (outboundTrafficPolicyBuilder_ == null) {
          outboundTrafficPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy, istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Builder, istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicyOrBuilder>(
                  getOutboundTrafficPolicy(),
                  getParentForChildren(),
                  isClean());
          outboundTrafficPolicy_ = null;
        }
        return outboundTrafficPolicyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.Sidecar)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Sidecar)
    private static final istio.networking.v1alpha3.SidecarOuterClass.Sidecar DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.SidecarOuterClass.Sidecar();
    }

    public static istio.networking.v1alpha3.SidecarOuterClass.Sidecar getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Sidecar>
        PARSER = new com.google.protobuf.AbstractParser<Sidecar>() {
      @java.lang.Override
      public Sidecar parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Sidecar> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sidecar> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.Sidecar getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IstioIngressListenerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.IstioIngressListener)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The port associated with the listener.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the port field is set.
     */
    boolean hasPort();
    /**
     * <pre>
     * The port associated with the listener.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The port.
     */
    istio.networking.v1alpha3.GatewayOuterClass.Port getPort();
    /**
     * <pre>
     * The port associated with the listener.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder getPortOrBuilder();

    /**
     * <pre>
     * The IP to which the listener should be bound. Must be in the
     * format `x.x.x.x`. Unix domain socket addresses are not allowed in
     * the bind field for ingress listeners. If omitted, Istio will
     * automatically configure the defaults based on imported services
     * and the workload instances to which this configuration is applied
     * to.
     * </pre>
     *
     * <code>string bind = 2;</code>
     * @return The bind.
     */
    java.lang.String getBind();
    /**
     * <pre>
     * The IP to which the listener should be bound. Must be in the
     * format `x.x.x.x`. Unix domain socket addresses are not allowed in
     * the bind field for ingress listeners. If omitted, Istio will
     * automatically configure the defaults based on imported services
     * and the workload instances to which this configuration is applied
     * to.
     * </pre>
     *
     * <code>string bind = 2;</code>
     * @return The bytes for bind.
     */
    com.google.protobuf.ByteString
        getBindBytes();

    /**
     * <pre>
     * The captureMode option dictates how traffic to the listener is
     * expected to be captured (or not).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
     * @return The enum numeric value on the wire for captureMode.
     */
    int getCaptureModeValue();
    /**
     * <pre>
     * The captureMode option dictates how traffic to the listener is
     * expected to be captured (or not).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
     * @return The captureMode.
     */
    istio.networking.v1alpha3.SidecarOuterClass.CaptureMode getCaptureMode();

    /**
     * <pre>
     * The IP endpoint or Unix domain socket to which
     * traffic should be forwarded to. This configuration can be used to
     * redirect traffic arriving at the bind `IP:Port` on the sidecar to a `localhost:port`
     * or Unix domain socket where the application workload instance is listening for
     * connections. Arbitrary IPs are not supported. Format should be one of `127.0.0.1:PORT`, `0.0.0.0:PORT`
     * (which will forward to the instance IP), or `unix:///path/to/socket`
     * </pre>
     *
     * <code>string default_endpoint = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The defaultEndpoint.
     */
    java.lang.String getDefaultEndpoint();
    /**
     * <pre>
     * The IP endpoint or Unix domain socket to which
     * traffic should be forwarded to. This configuration can be used to
     * redirect traffic arriving at the bind `IP:Port` on the sidecar to a `localhost:port`
     * or Unix domain socket where the application workload instance is listening for
     * connections. Arbitrary IPs are not supported. Format should be one of `127.0.0.1:PORT`, `0.0.0.0:PORT`
     * (which will forward to the instance IP), or `unix:///path/to/socket`
     * </pre>
     *
     * <code>string default_endpoint = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for defaultEndpoint.
     */
    com.google.protobuf.ByteString
        getDefaultEndpointBytes();
  }
  /**
   * <pre>
   * `IstioIngressListener` specifies the properties of an inbound
   * traffic listener on the sidecar proxy attached to a workload instance.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.IstioIngressListener}
   */
  public static final class IstioIngressListener extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.IstioIngressListener)
      IstioIngressListenerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IstioIngressListener.newBuilder() to construct.
    private IstioIngressListener(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IstioIngressListener() {
      bind_ = "";
      captureMode_ = 0;
      defaultEndpoint_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IstioIngressListener();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_IstioIngressListener_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_IstioIngressListener_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.class, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder.class);
    }

    public static final int PORT_FIELD_NUMBER = 1;
    private istio.networking.v1alpha3.GatewayOuterClass.Port port_;
    /**
     * <pre>
     * The port associated with the listener.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the port field is set.
     */
    @java.lang.Override
    public boolean hasPort() {
      return port_ != null;
    }
    /**
     * <pre>
     * The port associated with the listener.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The port.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.Port getPort() {
      return port_ == null ? istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
    }
    /**
     * <pre>
     * The port associated with the listener.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder getPortOrBuilder() {
      return port_ == null ? istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
    }

    public static final int BIND_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object bind_ = "";
    /**
     * <pre>
     * The IP to which the listener should be bound. Must be in the
     * format `x.x.x.x`. Unix domain socket addresses are not allowed in
     * the bind field for ingress listeners. If omitted, Istio will
     * automatically configure the defaults based on imported services
     * and the workload instances to which this configuration is applied
     * to.
     * </pre>
     *
     * <code>string bind = 2;</code>
     * @return The bind.
     */
    @java.lang.Override
    public java.lang.String getBind() {
      java.lang.Object ref = bind_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bind_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The IP to which the listener should be bound. Must be in the
     * format `x.x.x.x`. Unix domain socket addresses are not allowed in
     * the bind field for ingress listeners. If omitted, Istio will
     * automatically configure the defaults based on imported services
     * and the workload instances to which this configuration is applied
     * to.
     * </pre>
     *
     * <code>string bind = 2;</code>
     * @return The bytes for bind.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBindBytes() {
      java.lang.Object ref = bind_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CAPTURE_MODE_FIELD_NUMBER = 3;
    private int captureMode_ = 0;
    /**
     * <pre>
     * The captureMode option dictates how traffic to the listener is
     * expected to be captured (or not).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
     * @return The enum numeric value on the wire for captureMode.
     */
    @java.lang.Override public int getCaptureModeValue() {
      return captureMode_;
    }
    /**
     * <pre>
     * The captureMode option dictates how traffic to the listener is
     * expected to be captured (or not).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
     * @return The captureMode.
     */
    @java.lang.Override public istio.networking.v1alpha3.SidecarOuterClass.CaptureMode getCaptureMode() {
      istio.networking.v1alpha3.SidecarOuterClass.CaptureMode result = istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.forNumber(captureMode_);
      return result == null ? istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.UNRECOGNIZED : result;
    }

    public static final int DEFAULT_ENDPOINT_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object defaultEndpoint_ = "";
    /**
     * <pre>
     * The IP endpoint or Unix domain socket to which
     * traffic should be forwarded to. This configuration can be used to
     * redirect traffic arriving at the bind `IP:Port` on the sidecar to a `localhost:port`
     * or Unix domain socket where the application workload instance is listening for
     * connections. Arbitrary IPs are not supported. Format should be one of `127.0.0.1:PORT`, `0.0.0.0:PORT`
     * (which will forward to the instance IP), or `unix:///path/to/socket`
     * </pre>
     *
     * <code>string default_endpoint = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The defaultEndpoint.
     */
    @java.lang.Override
    public java.lang.String getDefaultEndpoint() {
      java.lang.Object ref = defaultEndpoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        defaultEndpoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The IP endpoint or Unix domain socket to which
     * traffic should be forwarded to. This configuration can be used to
     * redirect traffic arriving at the bind `IP:Port` on the sidecar to a `localhost:port`
     * or Unix domain socket where the application workload instance is listening for
     * connections. Arbitrary IPs are not supported. Format should be one of `127.0.0.1:PORT`, `0.0.0.0:PORT`
     * (which will forward to the instance IP), or `unix:///path/to/socket`
     * </pre>
     *
     * <code>string default_endpoint = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for defaultEndpoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDefaultEndpointBytes() {
      java.lang.Object ref = defaultEndpoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defaultEndpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (port_ != null) {
        output.writeMessage(1, getPort());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bind_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, bind_);
      }
      if (captureMode_ != istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.DEFAULT.getNumber()) {
        output.writeEnum(3, captureMode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultEndpoint_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, defaultEndpoint_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (port_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPort());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bind_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, bind_);
      }
      if (captureMode_ != istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.DEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, captureMode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultEndpoint_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, defaultEndpoint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener other = (istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener) obj;

      if (hasPort() != other.hasPort()) return false;
      if (hasPort()) {
        if (!getPort()
            .equals(other.getPort())) return false;
      }
      if (!getBind()
          .equals(other.getBind())) return false;
      if (captureMode_ != other.captureMode_) return false;
      if (!getDefaultEndpoint()
          .equals(other.getDefaultEndpoint())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort().hashCode();
      }
      hash = (37 * hash) + BIND_FIELD_NUMBER;
      hash = (53 * hash) + getBind().hashCode();
      hash = (37 * hash) + CAPTURE_MODE_FIELD_NUMBER;
      hash = (53 * hash) + captureMode_;
      hash = (37 * hash) + DEFAULT_ENDPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultEndpoint().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * `IstioIngressListener` specifies the properties of an inbound
     * traffic listener on the sidecar proxy attached to a workload instance.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.IstioIngressListener}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.IstioIngressListener)
        istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListenerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_IstioIngressListener_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_IstioIngressListener_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.class, istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        port_ = null;
        if (portBuilder_ != null) {
          portBuilder_.dispose();
          portBuilder_ = null;
        }
        bind_ = "";
        captureMode_ = 0;
        defaultEndpoint_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_IstioIngressListener_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener getDefaultInstanceForType() {
        return istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener build() {
        istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener buildPartial() {
        istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener result = new istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.port_ = portBuilder_ == null
              ? port_
              : portBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.bind_ = bind_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.captureMode_ = captureMode_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.defaultEndpoint_ = defaultEndpoint_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener) {
          return mergeFrom((istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener other) {
        if (other == istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener.getDefaultInstance()) return this;
        if (other.hasPort()) {
          mergePort(other.getPort());
        }
        if (!other.getBind().isEmpty()) {
          bind_ = other.bind_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.captureMode_ != 0) {
          setCaptureModeValue(other.getCaptureModeValue());
        }
        if (!other.getDefaultEndpoint().isEmpty()) {
          defaultEndpoint_ = other.defaultEndpoint_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPortFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                bind_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                captureMode_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                defaultEndpoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private istio.networking.v1alpha3.GatewayOuterClass.Port port_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.GatewayOuterClass.Port, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder, istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder> portBuilder_;
      /**
       * <pre>
       * The port associated with the listener.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return Whether the port field is set.
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The port associated with the listener.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The port.
       */
      public istio.networking.v1alpha3.GatewayOuterClass.Port getPort() {
        if (portBuilder_ == null) {
          return port_ == null ? istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
        } else {
          return portBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The port associated with the listener.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setPort(istio.networking.v1alpha3.GatewayOuterClass.Port value) {
        if (portBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          port_ = value;
        } else {
          portBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port associated with the listener.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setPort(
          istio.networking.v1alpha3.GatewayOuterClass.Port.Builder builderForValue) {
        if (portBuilder_ == null) {
          port_ = builderForValue.build();
        } else {
          portBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port associated with the listener.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder mergePort(istio.networking.v1alpha3.GatewayOuterClass.Port value) {
        if (portBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            port_ != null &&
            port_ != istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance()) {
            getPortBuilder().mergeFrom(value);
          } else {
            port_ = value;
          }
        } else {
          portBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port associated with the listener.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = null;
        if (portBuilder_ != null) {
          portBuilder_.dispose();
          portBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port associated with the listener.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.Port.Builder getPortBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPortFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The port associated with the listener.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder getPortOrBuilder() {
        if (portBuilder_ != null) {
          return portBuilder_.getMessageOrBuilder();
        } else {
          return port_ == null ?
              istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
        }
      }
      /**
       * <pre>
       * The port associated with the listener.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.GatewayOuterClass.Port, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder, istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder> 
          getPortFieldBuilder() {
        if (portBuilder_ == null) {
          portBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.GatewayOuterClass.Port, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder, istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder>(
                  getPort(),
                  getParentForChildren(),
                  isClean());
          port_ = null;
        }
        return portBuilder_;
      }

      private java.lang.Object bind_ = "";
      /**
       * <pre>
       * The IP to which the listener should be bound. Must be in the
       * format `x.x.x.x`. Unix domain socket addresses are not allowed in
       * the bind field for ingress listeners. If omitted, Istio will
       * automatically configure the defaults based on imported services
       * and the workload instances to which this configuration is applied
       * to.
       * </pre>
       *
       * <code>string bind = 2;</code>
       * @return The bind.
       */
      public java.lang.String getBind() {
        java.lang.Object ref = bind_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bind_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The IP to which the listener should be bound. Must be in the
       * format `x.x.x.x`. Unix domain socket addresses are not allowed in
       * the bind field for ingress listeners. If omitted, Istio will
       * automatically configure the defaults based on imported services
       * and the workload instances to which this configuration is applied
       * to.
       * </pre>
       *
       * <code>string bind = 2;</code>
       * @return The bytes for bind.
       */
      public com.google.protobuf.ByteString
          getBindBytes() {
        java.lang.Object ref = bind_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bind_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The IP to which the listener should be bound. Must be in the
       * format `x.x.x.x`. Unix domain socket addresses are not allowed in
       * the bind field for ingress listeners. If omitted, Istio will
       * automatically configure the defaults based on imported services
       * and the workload instances to which this configuration is applied
       * to.
       * </pre>
       *
       * <code>string bind = 2;</code>
       * @param value The bind to set.
       * @return This builder for chaining.
       */
      public Builder setBind(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        bind_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IP to which the listener should be bound. Must be in the
       * format `x.x.x.x`. Unix domain socket addresses are not allowed in
       * the bind field for ingress listeners. If omitted, Istio will
       * automatically configure the defaults based on imported services
       * and the workload instances to which this configuration is applied
       * to.
       * </pre>
       *
       * <code>string bind = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBind() {
        bind_ = getDefaultInstance().getBind();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IP to which the listener should be bound. Must be in the
       * format `x.x.x.x`. Unix domain socket addresses are not allowed in
       * the bind field for ingress listeners. If omitted, Istio will
       * automatically configure the defaults based on imported services
       * and the workload instances to which this configuration is applied
       * to.
       * </pre>
       *
       * <code>string bind = 2;</code>
       * @param value The bytes for bind to set.
       * @return This builder for chaining.
       */
      public Builder setBindBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        bind_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int captureMode_ = 0;
      /**
       * <pre>
       * The captureMode option dictates how traffic to the listener is
       * expected to be captured (or not).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
       * @return The enum numeric value on the wire for captureMode.
       */
      @java.lang.Override public int getCaptureModeValue() {
        return captureMode_;
      }
      /**
       * <pre>
       * The captureMode option dictates how traffic to the listener is
       * expected to be captured (or not).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
       * @param value The enum numeric value on the wire for captureMode to set.
       * @return This builder for chaining.
       */
      public Builder setCaptureModeValue(int value) {
        captureMode_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The captureMode option dictates how traffic to the listener is
       * expected to be captured (or not).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
       * @return The captureMode.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.CaptureMode getCaptureMode() {
        istio.networking.v1alpha3.SidecarOuterClass.CaptureMode result = istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.forNumber(captureMode_);
        return result == null ? istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The captureMode option dictates how traffic to the listener is
       * expected to be captured (or not).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
       * @param value The captureMode to set.
       * @return This builder for chaining.
       */
      public Builder setCaptureMode(istio.networking.v1alpha3.SidecarOuterClass.CaptureMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        captureMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The captureMode option dictates how traffic to the listener is
       * expected to be captured (or not).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCaptureMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        captureMode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object defaultEndpoint_ = "";
      /**
       * <pre>
       * The IP endpoint or Unix domain socket to which
       * traffic should be forwarded to. This configuration can be used to
       * redirect traffic arriving at the bind `IP:Port` on the sidecar to a `localhost:port`
       * or Unix domain socket where the application workload instance is listening for
       * connections. Arbitrary IPs are not supported. Format should be one of `127.0.0.1:PORT`, `0.0.0.0:PORT`
       * (which will forward to the instance IP), or `unix:///path/to/socket`
       * </pre>
       *
       * <code>string default_endpoint = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The defaultEndpoint.
       */
      public java.lang.String getDefaultEndpoint() {
        java.lang.Object ref = defaultEndpoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          defaultEndpoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The IP endpoint or Unix domain socket to which
       * traffic should be forwarded to. This configuration can be used to
       * redirect traffic arriving at the bind `IP:Port` on the sidecar to a `localhost:port`
       * or Unix domain socket where the application workload instance is listening for
       * connections. Arbitrary IPs are not supported. Format should be one of `127.0.0.1:PORT`, `0.0.0.0:PORT`
       * (which will forward to the instance IP), or `unix:///path/to/socket`
       * </pre>
       *
       * <code>string default_endpoint = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The bytes for defaultEndpoint.
       */
      public com.google.protobuf.ByteString
          getDefaultEndpointBytes() {
        java.lang.Object ref = defaultEndpoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          defaultEndpoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The IP endpoint or Unix domain socket to which
       * traffic should be forwarded to. This configuration can be used to
       * redirect traffic arriving at the bind `IP:Port` on the sidecar to a `localhost:port`
       * or Unix domain socket where the application workload instance is listening for
       * connections. Arbitrary IPs are not supported. Format should be one of `127.0.0.1:PORT`, `0.0.0.0:PORT`
       * (which will forward to the instance IP), or `unix:///path/to/socket`
       * </pre>
       *
       * <code>string default_endpoint = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The defaultEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultEndpoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        defaultEndpoint_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IP endpoint or Unix domain socket to which
       * traffic should be forwarded to. This configuration can be used to
       * redirect traffic arriving at the bind `IP:Port` on the sidecar to a `localhost:port`
       * or Unix domain socket where the application workload instance is listening for
       * connections. Arbitrary IPs are not supported. Format should be one of `127.0.0.1:PORT`, `0.0.0.0:PORT`
       * (which will forward to the instance IP), or `unix:///path/to/socket`
       * </pre>
       *
       * <code>string default_endpoint = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultEndpoint() {
        defaultEndpoint_ = getDefaultInstance().getDefaultEndpoint();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IP endpoint or Unix domain socket to which
       * traffic should be forwarded to. This configuration can be used to
       * redirect traffic arriving at the bind `IP:Port` on the sidecar to a `localhost:port`
       * or Unix domain socket where the application workload instance is listening for
       * connections. Arbitrary IPs are not supported. Format should be one of `127.0.0.1:PORT`, `0.0.0.0:PORT`
       * (which will forward to the instance IP), or `unix:///path/to/socket`
       * </pre>
       *
       * <code>string default_endpoint = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes for defaultEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultEndpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        defaultEndpoint_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.IstioIngressListener)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.IstioIngressListener)
    private static final istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener();
    }

    public static istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IstioIngressListener>
        PARSER = new com.google.protobuf.AbstractParser<IstioIngressListener>() {
      @java.lang.Override
      public IstioIngressListener parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IstioIngressListener> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IstioIngressListener> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.IstioIngressListener getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IstioEgressListenerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.IstioEgressListener)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The port associated with the listener. If using Unix domain socket,
     * use 0 as the port number, with a valid protocol. The port if
     * specified, will be used as the default destination port associated
     * with the imported hosts. If the port is omitted, Istio will infer the
     * listener ports based on the imported hosts. Note that when multiple
     * egress listeners are specified, where one or more listeners have
     * specific ports while others have no port, the hosts exposed on a
     * listener port will be based on the listener with the most specific
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1;</code>
     * @return Whether the port field is set.
     */
    boolean hasPort();
    /**
     * <pre>
     * The port associated with the listener. If using Unix domain socket,
     * use 0 as the port number, with a valid protocol. The port if
     * specified, will be used as the default destination port associated
     * with the imported hosts. If the port is omitted, Istio will infer the
     * listener ports based on the imported hosts. Note that when multiple
     * egress listeners are specified, where one or more listeners have
     * specific ports while others have no port, the hosts exposed on a
     * listener port will be based on the listener with the most specific
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1;</code>
     * @return The port.
     */
    istio.networking.v1alpha3.GatewayOuterClass.Port getPort();
    /**
     * <pre>
     * The port associated with the listener. If using Unix domain socket,
     * use 0 as the port number, with a valid protocol. The port if
     * specified, will be used as the default destination port associated
     * with the imported hosts. If the port is omitted, Istio will infer the
     * listener ports based on the imported hosts. Note that when multiple
     * egress listeners are specified, where one or more listeners have
     * specific ports while others have no port, the hosts exposed on a
     * listener port will be based on the listener with the most specific
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1;</code>
     */
    istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder getPortOrBuilder();

    /**
     * <pre>
     * The IP or the Unix domain socket to which the listener should be bound
     * to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or
     * `unix:///path/to/uds` or `unix://&#64;foobar` (Linux abstract namespace). If
     * omitted, Istio will automatically configure the defaults based on imported
     * services, the workload instances to which this configuration is applied to and
     * the captureMode. If captureMode is `NONE`, bind will default to
     * 127.0.0.1.
     * </pre>
     *
     * <code>string bind = 2;</code>
     * @return The bind.
     */
    java.lang.String getBind();
    /**
     * <pre>
     * The IP or the Unix domain socket to which the listener should be bound
     * to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or
     * `unix:///path/to/uds` or `unix://&#64;foobar` (Linux abstract namespace). If
     * omitted, Istio will automatically configure the defaults based on imported
     * services, the workload instances to which this configuration is applied to and
     * the captureMode. If captureMode is `NONE`, bind will default to
     * 127.0.0.1.
     * </pre>
     *
     * <code>string bind = 2;</code>
     * @return The bytes for bind.
     */
    com.google.protobuf.ByteString
        getBindBytes();

    /**
     * <pre>
     * When the bind address is an IP, the captureMode option dictates
     * how traffic to the listener is expected to be captured (or not).
     * captureMode must be DEFAULT or `NONE` for Unix domain socket binds.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
     * @return The enum numeric value on the wire for captureMode.
     */
    int getCaptureModeValue();
    /**
     * <pre>
     * When the bind address is an IP, the captureMode option dictates
     * how traffic to the listener is expected to be captured (or not).
     * captureMode must be DEFAULT or `NONE` for Unix domain socket binds.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
     * @return The captureMode.
     */
    istio.networking.v1alpha3.SidecarOuterClass.CaptureMode getCaptureMode();

    /**
     * <pre>
     * One or more service hosts exposed by the listener
     * in `namespace/dnsName` format. Services in the specified namespace
     * matching `dnsName` will be exposed.
     * The corresponding service can be a service in the service registry
     * (e.g., a Kubernetes or cloud foundry service) or a service specified
     * using a `ServiceEntry` or `VirtualService` configuration. Any
     * associated `DestinationRule` in the same namespace will also be used.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all services from the specified namespace
     * (e.g., `prod/&#42;`).
     * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
     * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
     * Istio will configure the sidecar to be able to reach every service in the
     * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
     * to completely trim the configuration for sidecars that simply receive traffic
     * and respond, but make no outbound connections of their own.
     * NOTE: Only services and configuration artifacts exported to the sidecar's
     * namespace (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will
     * not be available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * **WARNING:** The list of egress hosts in a `Sidecar` must also include
     * the Mixer control plane services if they are enabled. Envoy will not
     * be able to reach them otherwise. For example, add host
     * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
     * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
     * policy is enabled, or add `istio-system/&#42;` to allow all services in the
     * `istio-system` namespace. This requirement is temporary and will be removed
     * in a future Istio release.
     * </pre>
     *
     * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return A list containing the hosts.
     */
    java.util.List<java.lang.String>
        getHostsList();
    /**
     * <pre>
     * One or more service hosts exposed by the listener
     * in `namespace/dnsName` format. Services in the specified namespace
     * matching `dnsName` will be exposed.
     * The corresponding service can be a service in the service registry
     * (e.g., a Kubernetes or cloud foundry service) or a service specified
     * using a `ServiceEntry` or `VirtualService` configuration. Any
     * associated `DestinationRule` in the same namespace will also be used.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all services from the specified namespace
     * (e.g., `prod/&#42;`).
     * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
     * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
     * Istio will configure the sidecar to be able to reach every service in the
     * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
     * to completely trim the configuration for sidecars that simply receive traffic
     * and respond, but make no outbound connections of their own.
     * NOTE: Only services and configuration artifacts exported to the sidecar's
     * namespace (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will
     * not be available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * **WARNING:** The list of egress hosts in a `Sidecar` must also include
     * the Mixer control plane services if they are enabled. Envoy will not
     * be able to reach them otherwise. For example, add host
     * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
     * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
     * policy is enabled, or add `istio-system/&#42;` to allow all services in the
     * `istio-system` namespace. This requirement is temporary and will be removed
     * in a future Istio release.
     * </pre>
     *
     * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The count of hosts.
     */
    int getHostsCount();
    /**
     * <pre>
     * One or more service hosts exposed by the listener
     * in `namespace/dnsName` format. Services in the specified namespace
     * matching `dnsName` will be exposed.
     * The corresponding service can be a service in the service registry
     * (e.g., a Kubernetes or cloud foundry service) or a service specified
     * using a `ServiceEntry` or `VirtualService` configuration. Any
     * associated `DestinationRule` in the same namespace will also be used.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all services from the specified namespace
     * (e.g., `prod/&#42;`).
     * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
     * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
     * Istio will configure the sidecar to be able to reach every service in the
     * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
     * to completely trim the configuration for sidecars that simply receive traffic
     * and respond, but make no outbound connections of their own.
     * NOTE: Only services and configuration artifacts exported to the sidecar's
     * namespace (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will
     * not be available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * **WARNING:** The list of egress hosts in a `Sidecar` must also include
     * the Mixer control plane services if they are enabled. Envoy will not
     * be able to reach them otherwise. For example, add host
     * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
     * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
     * policy is enabled, or add `istio-system/&#42;` to allow all services in the
     * `istio-system` namespace. This requirement is temporary and will be removed
     * in a future Istio release.
     * </pre>
     *
     * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the element to return.
     * @return The hosts at the given index.
     */
    java.lang.String getHosts(int index);
    /**
     * <pre>
     * One or more service hosts exposed by the listener
     * in `namespace/dnsName` format. Services in the specified namespace
     * matching `dnsName` will be exposed.
     * The corresponding service can be a service in the service registry
     * (e.g., a Kubernetes or cloud foundry service) or a service specified
     * using a `ServiceEntry` or `VirtualService` configuration. Any
     * associated `DestinationRule` in the same namespace will also be used.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all services from the specified namespace
     * (e.g., `prod/&#42;`).
     * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
     * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
     * Istio will configure the sidecar to be able to reach every service in the
     * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
     * to completely trim the configuration for sidecars that simply receive traffic
     * and respond, but make no outbound connections of their own.
     * NOTE: Only services and configuration artifacts exported to the sidecar's
     * namespace (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will
     * not be available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * **WARNING:** The list of egress hosts in a `Sidecar` must also include
     * the Mixer control plane services if they are enabled. Envoy will not
     * be able to reach them otherwise. For example, add host
     * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
     * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
     * policy is enabled, or add `istio-system/&#42;` to allow all services in the
     * `istio-system` namespace. This requirement is temporary and will be removed
     * in a future Istio release.
     * </pre>
     *
     * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the value to return.
     * @return The bytes of the hosts at the given index.
     */
    com.google.protobuf.ByteString
        getHostsBytes(int index);
  }
  /**
   * <pre>
   * `IstioEgressListener` specifies the properties of an outbound traffic
   * listener on the sidecar proxy attached to a workload instance.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.IstioEgressListener}
   */
  public static final class IstioEgressListener extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.IstioEgressListener)
      IstioEgressListenerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IstioEgressListener.newBuilder() to construct.
    private IstioEgressListener(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IstioEgressListener() {
      bind_ = "";
      captureMode_ = 0;
      hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IstioEgressListener();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_IstioEgressListener_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_IstioEgressListener_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.class, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder.class);
    }

    public static final int PORT_FIELD_NUMBER = 1;
    private istio.networking.v1alpha3.GatewayOuterClass.Port port_;
    /**
     * <pre>
     * The port associated with the listener. If using Unix domain socket,
     * use 0 as the port number, with a valid protocol. The port if
     * specified, will be used as the default destination port associated
     * with the imported hosts. If the port is omitted, Istio will infer the
     * listener ports based on the imported hosts. Note that when multiple
     * egress listeners are specified, where one or more listeners have
     * specific ports while others have no port, the hosts exposed on a
     * listener port will be based on the listener with the most specific
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1;</code>
     * @return Whether the port field is set.
     */
    @java.lang.Override
    public boolean hasPort() {
      return port_ != null;
    }
    /**
     * <pre>
     * The port associated with the listener. If using Unix domain socket,
     * use 0 as the port number, with a valid protocol. The port if
     * specified, will be used as the default destination port associated
     * with the imported hosts. If the port is omitted, Istio will infer the
     * listener ports based on the imported hosts. Note that when multiple
     * egress listeners are specified, where one or more listeners have
     * specific ports while others have no port, the hosts exposed on a
     * listener port will be based on the listener with the most specific
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1;</code>
     * @return The port.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.Port getPort() {
      return port_ == null ? istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
    }
    /**
     * <pre>
     * The port associated with the listener. If using Unix domain socket,
     * use 0 as the port number, with a valid protocol. The port if
     * specified, will be used as the default destination port associated
     * with the imported hosts. If the port is omitted, Istio will infer the
     * listener ports based on the imported hosts. Note that when multiple
     * egress listeners are specified, where one or more listeners have
     * specific ports while others have no port, the hosts exposed on a
     * listener port will be based on the listener with the most specific
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder getPortOrBuilder() {
      return port_ == null ? istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
    }

    public static final int BIND_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object bind_ = "";
    /**
     * <pre>
     * The IP or the Unix domain socket to which the listener should be bound
     * to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or
     * `unix:///path/to/uds` or `unix://&#64;foobar` (Linux abstract namespace). If
     * omitted, Istio will automatically configure the defaults based on imported
     * services, the workload instances to which this configuration is applied to and
     * the captureMode. If captureMode is `NONE`, bind will default to
     * 127.0.0.1.
     * </pre>
     *
     * <code>string bind = 2;</code>
     * @return The bind.
     */
    @java.lang.Override
    public java.lang.String getBind() {
      java.lang.Object ref = bind_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bind_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The IP or the Unix domain socket to which the listener should be bound
     * to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or
     * `unix:///path/to/uds` or `unix://&#64;foobar` (Linux abstract namespace). If
     * omitted, Istio will automatically configure the defaults based on imported
     * services, the workload instances to which this configuration is applied to and
     * the captureMode. If captureMode is `NONE`, bind will default to
     * 127.0.0.1.
     * </pre>
     *
     * <code>string bind = 2;</code>
     * @return The bytes for bind.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBindBytes() {
      java.lang.Object ref = bind_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CAPTURE_MODE_FIELD_NUMBER = 3;
    private int captureMode_ = 0;
    /**
     * <pre>
     * When the bind address is an IP, the captureMode option dictates
     * how traffic to the listener is expected to be captured (or not).
     * captureMode must be DEFAULT or `NONE` for Unix domain socket binds.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
     * @return The enum numeric value on the wire for captureMode.
     */
    @java.lang.Override public int getCaptureModeValue() {
      return captureMode_;
    }
    /**
     * <pre>
     * When the bind address is an IP, the captureMode option dictates
     * how traffic to the listener is expected to be captured (or not).
     * captureMode must be DEFAULT or `NONE` for Unix domain socket binds.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
     * @return The captureMode.
     */
    @java.lang.Override public istio.networking.v1alpha3.SidecarOuterClass.CaptureMode getCaptureMode() {
      istio.networking.v1alpha3.SidecarOuterClass.CaptureMode result = istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.forNumber(captureMode_);
      return result == null ? istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.UNRECOGNIZED : result;
    }

    public static final int HOSTS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList hosts_;
    /**
     * <pre>
     * One or more service hosts exposed by the listener
     * in `namespace/dnsName` format. Services in the specified namespace
     * matching `dnsName` will be exposed.
     * The corresponding service can be a service in the service registry
     * (e.g., a Kubernetes or cloud foundry service) or a service specified
     * using a `ServiceEntry` or `VirtualService` configuration. Any
     * associated `DestinationRule` in the same namespace will also be used.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all services from the specified namespace
     * (e.g., `prod/&#42;`).
     * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
     * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
     * Istio will configure the sidecar to be able to reach every service in the
     * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
     * to completely trim the configuration for sidecars that simply receive traffic
     * and respond, but make no outbound connections of their own.
     * NOTE: Only services and configuration artifacts exported to the sidecar's
     * namespace (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will
     * not be available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * **WARNING:** The list of egress hosts in a `Sidecar` must also include
     * the Mixer control plane services if they are enabled. Envoy will not
     * be able to reach them otherwise. For example, add host
     * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
     * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
     * policy is enabled, or add `istio-system/&#42;` to allow all services in the
     * `istio-system` namespace. This requirement is temporary and will be removed
     * in a future Istio release.
     * </pre>
     *
     * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return A list containing the hosts.
     */
    public com.google.protobuf.ProtocolStringList
        getHostsList() {
      return hosts_;
    }
    /**
     * <pre>
     * One or more service hosts exposed by the listener
     * in `namespace/dnsName` format. Services in the specified namespace
     * matching `dnsName` will be exposed.
     * The corresponding service can be a service in the service registry
     * (e.g., a Kubernetes or cloud foundry service) or a service specified
     * using a `ServiceEntry` or `VirtualService` configuration. Any
     * associated `DestinationRule` in the same namespace will also be used.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all services from the specified namespace
     * (e.g., `prod/&#42;`).
     * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
     * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
     * Istio will configure the sidecar to be able to reach every service in the
     * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
     * to completely trim the configuration for sidecars that simply receive traffic
     * and respond, but make no outbound connections of their own.
     * NOTE: Only services and configuration artifacts exported to the sidecar's
     * namespace (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will
     * not be available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * **WARNING:** The list of egress hosts in a `Sidecar` must also include
     * the Mixer control plane services if they are enabled. Envoy will not
     * be able to reach them otherwise. For example, add host
     * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
     * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
     * policy is enabled, or add `istio-system/&#42;` to allow all services in the
     * `istio-system` namespace. This requirement is temporary and will be removed
     * in a future Istio release.
     * </pre>
     *
     * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The count of hosts.
     */
    public int getHostsCount() {
      return hosts_.size();
    }
    /**
     * <pre>
     * One or more service hosts exposed by the listener
     * in `namespace/dnsName` format. Services in the specified namespace
     * matching `dnsName` will be exposed.
     * The corresponding service can be a service in the service registry
     * (e.g., a Kubernetes or cloud foundry service) or a service specified
     * using a `ServiceEntry` or `VirtualService` configuration. Any
     * associated `DestinationRule` in the same namespace will also be used.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all services from the specified namespace
     * (e.g., `prod/&#42;`).
     * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
     * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
     * Istio will configure the sidecar to be able to reach every service in the
     * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
     * to completely trim the configuration for sidecars that simply receive traffic
     * and respond, but make no outbound connections of their own.
     * NOTE: Only services and configuration artifacts exported to the sidecar's
     * namespace (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will
     * not be available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * **WARNING:** The list of egress hosts in a `Sidecar` must also include
     * the Mixer control plane services if they are enabled. Envoy will not
     * be able to reach them otherwise. For example, add host
     * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
     * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
     * policy is enabled, or add `istio-system/&#42;` to allow all services in the
     * `istio-system` namespace. This requirement is temporary and will be removed
     * in a future Istio release.
     * </pre>
     *
     * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the element to return.
     * @return The hosts at the given index.
     */
    public java.lang.String getHosts(int index) {
      return hosts_.get(index);
    }
    /**
     * <pre>
     * One or more service hosts exposed by the listener
     * in `namespace/dnsName` format. Services in the specified namespace
     * matching `dnsName` will be exposed.
     * The corresponding service can be a service in the service registry
     * (e.g., a Kubernetes or cloud foundry service) or a service specified
     * using a `ServiceEntry` or `VirtualService` configuration. Any
     * associated `DestinationRule` in the same namespace will also be used.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all services from the specified namespace
     * (e.g., `prod/&#42;`).
     * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
     * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
     * Istio will configure the sidecar to be able to reach every service in the
     * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
     * to completely trim the configuration for sidecars that simply receive traffic
     * and respond, but make no outbound connections of their own.
     * NOTE: Only services and configuration artifacts exported to the sidecar's
     * namespace (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will
     * not be available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * **WARNING:** The list of egress hosts in a `Sidecar` must also include
     * the Mixer control plane services if they are enabled. Envoy will not
     * be able to reach them otherwise. For example, add host
     * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
     * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
     * policy is enabled, or add `istio-system/&#42;` to allow all services in the
     * `istio-system` namespace. This requirement is temporary and will be removed
     * in a future Istio release.
     * </pre>
     *
     * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the value to return.
     * @return The bytes of the hosts at the given index.
     */
    public com.google.protobuf.ByteString
        getHostsBytes(int index) {
      return hosts_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (port_ != null) {
        output.writeMessage(1, getPort());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bind_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, bind_);
      }
      if (captureMode_ != istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.DEFAULT.getNumber()) {
        output.writeEnum(3, captureMode_);
      }
      for (int i = 0; i < hosts_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, hosts_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (port_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPort());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bind_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, bind_);
      }
      if (captureMode_ != istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.DEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, captureMode_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hosts_.size(); i++) {
          dataSize += computeStringSizeNoTag(hosts_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getHostsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener other = (istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener) obj;

      if (hasPort() != other.hasPort()) return false;
      if (hasPort()) {
        if (!getPort()
            .equals(other.getPort())) return false;
      }
      if (!getBind()
          .equals(other.getBind())) return false;
      if (captureMode_ != other.captureMode_) return false;
      if (!getHostsList()
          .equals(other.getHostsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort().hashCode();
      }
      hash = (37 * hash) + BIND_FIELD_NUMBER;
      hash = (53 * hash) + getBind().hashCode();
      hash = (37 * hash) + CAPTURE_MODE_FIELD_NUMBER;
      hash = (53 * hash) + captureMode_;
      if (getHostsCount() > 0) {
        hash = (37 * hash) + HOSTS_FIELD_NUMBER;
        hash = (53 * hash) + getHostsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * `IstioEgressListener` specifies the properties of an outbound traffic
     * listener on the sidecar proxy attached to a workload instance.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.IstioEgressListener}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.IstioEgressListener)
        istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListenerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_IstioEgressListener_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_IstioEgressListener_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.class, istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        port_ = null;
        if (portBuilder_ != null) {
          portBuilder_.dispose();
          portBuilder_ = null;
        }
        bind_ = "";
        captureMode_ = 0;
        hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_IstioEgressListener_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener getDefaultInstanceForType() {
        return istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener build() {
        istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener buildPartial() {
        istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener result = new istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener result) {
        if (((bitField0_ & 0x00000008) != 0)) {
          hosts_ = hosts_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.hosts_ = hosts_;
      }

      private void buildPartial0(istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.port_ = portBuilder_ == null
              ? port_
              : portBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.bind_ = bind_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.captureMode_ = captureMode_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener) {
          return mergeFrom((istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener other) {
        if (other == istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener.getDefaultInstance()) return this;
        if (other.hasPort()) {
          mergePort(other.getPort());
        }
        if (!other.getBind().isEmpty()) {
          bind_ = other.bind_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.captureMode_ != 0) {
          setCaptureModeValue(other.getCaptureModeValue());
        }
        if (!other.hosts_.isEmpty()) {
          if (hosts_.isEmpty()) {
            hosts_ = other.hosts_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHostsIsMutable();
            hosts_.addAll(other.hosts_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPortFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                bind_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                captureMode_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureHostsIsMutable();
                hosts_.add(s);
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private istio.networking.v1alpha3.GatewayOuterClass.Port port_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.GatewayOuterClass.Port, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder, istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder> portBuilder_;
      /**
       * <pre>
       * The port associated with the listener. If using Unix domain socket,
       * use 0 as the port number, with a valid protocol. The port if
       * specified, will be used as the default destination port associated
       * with the imported hosts. If the port is omitted, Istio will infer the
       * listener ports based on the imported hosts. Note that when multiple
       * egress listeners are specified, where one or more listeners have
       * specific ports while others have no port, the hosts exposed on a
       * listener port will be based on the listener with the most specific
       * port.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1;</code>
       * @return Whether the port field is set.
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The port associated with the listener. If using Unix domain socket,
       * use 0 as the port number, with a valid protocol. The port if
       * specified, will be used as the default destination port associated
       * with the imported hosts. If the port is omitted, Istio will infer the
       * listener ports based on the imported hosts. Note that when multiple
       * egress listeners are specified, where one or more listeners have
       * specific ports while others have no port, the hosts exposed on a
       * listener port will be based on the listener with the most specific
       * port.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1;</code>
       * @return The port.
       */
      public istio.networking.v1alpha3.GatewayOuterClass.Port getPort() {
        if (portBuilder_ == null) {
          return port_ == null ? istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
        } else {
          return portBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The port associated with the listener. If using Unix domain socket,
       * use 0 as the port number, with a valid protocol. The port if
       * specified, will be used as the default destination port associated
       * with the imported hosts. If the port is omitted, Istio will infer the
       * listener ports based on the imported hosts. Note that when multiple
       * egress listeners are specified, where one or more listeners have
       * specific ports while others have no port, the hosts exposed on a
       * listener port will be based on the listener with the most specific
       * port.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1;</code>
       */
      public Builder setPort(istio.networking.v1alpha3.GatewayOuterClass.Port value) {
        if (portBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          port_ = value;
        } else {
          portBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port associated with the listener. If using Unix domain socket,
       * use 0 as the port number, with a valid protocol. The port if
       * specified, will be used as the default destination port associated
       * with the imported hosts. If the port is omitted, Istio will infer the
       * listener ports based on the imported hosts. Note that when multiple
       * egress listeners are specified, where one or more listeners have
       * specific ports while others have no port, the hosts exposed on a
       * listener port will be based on the listener with the most specific
       * port.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1;</code>
       */
      public Builder setPort(
          istio.networking.v1alpha3.GatewayOuterClass.Port.Builder builderForValue) {
        if (portBuilder_ == null) {
          port_ = builderForValue.build();
        } else {
          portBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port associated with the listener. If using Unix domain socket,
       * use 0 as the port number, with a valid protocol. The port if
       * specified, will be used as the default destination port associated
       * with the imported hosts. If the port is omitted, Istio will infer the
       * listener ports based on the imported hosts. Note that when multiple
       * egress listeners are specified, where one or more listeners have
       * specific ports while others have no port, the hosts exposed on a
       * listener port will be based on the listener with the most specific
       * port.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1;</code>
       */
      public Builder mergePort(istio.networking.v1alpha3.GatewayOuterClass.Port value) {
        if (portBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            port_ != null &&
            port_ != istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance()) {
            getPortBuilder().mergeFrom(value);
          } else {
            port_ = value;
          }
        } else {
          portBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port associated with the listener. If using Unix domain socket,
       * use 0 as the port number, with a valid protocol. The port if
       * specified, will be used as the default destination port associated
       * with the imported hosts. If the port is omitted, Istio will infer the
       * listener ports based on the imported hosts. Note that when multiple
       * egress listeners are specified, where one or more listeners have
       * specific ports while others have no port, the hosts exposed on a
       * listener port will be based on the listener with the most specific
       * port.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = null;
        if (portBuilder_ != null) {
          portBuilder_.dispose();
          portBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port associated with the listener. If using Unix domain socket,
       * use 0 as the port number, with a valid protocol. The port if
       * specified, will be used as the default destination port associated
       * with the imported hosts. If the port is omitted, Istio will infer the
       * listener ports based on the imported hosts. Note that when multiple
       * egress listeners are specified, where one or more listeners have
       * specific ports while others have no port, the hosts exposed on a
       * listener port will be based on the listener with the most specific
       * port.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1;</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.Port.Builder getPortBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPortFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The port associated with the listener. If using Unix domain socket,
       * use 0 as the port number, with a valid protocol. The port if
       * specified, will be used as the default destination port associated
       * with the imported hosts. If the port is omitted, Istio will infer the
       * listener ports based on the imported hosts. Note that when multiple
       * egress listeners are specified, where one or more listeners have
       * specific ports while others have no port, the hosts exposed on a
       * listener port will be based on the listener with the most specific
       * port.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1;</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder getPortOrBuilder() {
        if (portBuilder_ != null) {
          return portBuilder_.getMessageOrBuilder();
        } else {
          return port_ == null ?
              istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
        }
      }
      /**
       * <pre>
       * The port associated with the listener. If using Unix domain socket,
       * use 0 as the port number, with a valid protocol. The port if
       * specified, will be used as the default destination port associated
       * with the imported hosts. If the port is omitted, Istio will infer the
       * listener ports based on the imported hosts. Note that when multiple
       * egress listeners are specified, where one or more listeners have
       * specific ports while others have no port, the hosts exposed on a
       * listener port will be based on the listener with the most specific
       * port.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.GatewayOuterClass.Port, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder, istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder> 
          getPortFieldBuilder() {
        if (portBuilder_ == null) {
          portBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.GatewayOuterClass.Port, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder, istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder>(
                  getPort(),
                  getParentForChildren(),
                  isClean());
          port_ = null;
        }
        return portBuilder_;
      }

      private java.lang.Object bind_ = "";
      /**
       * <pre>
       * The IP or the Unix domain socket to which the listener should be bound
       * to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or
       * `unix:///path/to/uds` or `unix://&#64;foobar` (Linux abstract namespace). If
       * omitted, Istio will automatically configure the defaults based on imported
       * services, the workload instances to which this configuration is applied to and
       * the captureMode. If captureMode is `NONE`, bind will default to
       * 127.0.0.1.
       * </pre>
       *
       * <code>string bind = 2;</code>
       * @return The bind.
       */
      public java.lang.String getBind() {
        java.lang.Object ref = bind_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bind_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The IP or the Unix domain socket to which the listener should be bound
       * to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or
       * `unix:///path/to/uds` or `unix://&#64;foobar` (Linux abstract namespace). If
       * omitted, Istio will automatically configure the defaults based on imported
       * services, the workload instances to which this configuration is applied to and
       * the captureMode. If captureMode is `NONE`, bind will default to
       * 127.0.0.1.
       * </pre>
       *
       * <code>string bind = 2;</code>
       * @return The bytes for bind.
       */
      public com.google.protobuf.ByteString
          getBindBytes() {
        java.lang.Object ref = bind_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bind_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The IP or the Unix domain socket to which the listener should be bound
       * to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or
       * `unix:///path/to/uds` or `unix://&#64;foobar` (Linux abstract namespace). If
       * omitted, Istio will automatically configure the defaults based on imported
       * services, the workload instances to which this configuration is applied to and
       * the captureMode. If captureMode is `NONE`, bind will default to
       * 127.0.0.1.
       * </pre>
       *
       * <code>string bind = 2;</code>
       * @param value The bind to set.
       * @return This builder for chaining.
       */
      public Builder setBind(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        bind_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IP or the Unix domain socket to which the listener should be bound
       * to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or
       * `unix:///path/to/uds` or `unix://&#64;foobar` (Linux abstract namespace). If
       * omitted, Istio will automatically configure the defaults based on imported
       * services, the workload instances to which this configuration is applied to and
       * the captureMode. If captureMode is `NONE`, bind will default to
       * 127.0.0.1.
       * </pre>
       *
       * <code>string bind = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBind() {
        bind_ = getDefaultInstance().getBind();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IP or the Unix domain socket to which the listener should be bound
       * to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or
       * `unix:///path/to/uds` or `unix://&#64;foobar` (Linux abstract namespace). If
       * omitted, Istio will automatically configure the defaults based on imported
       * services, the workload instances to which this configuration is applied to and
       * the captureMode. If captureMode is `NONE`, bind will default to
       * 127.0.0.1.
       * </pre>
       *
       * <code>string bind = 2;</code>
       * @param value The bytes for bind to set.
       * @return This builder for chaining.
       */
      public Builder setBindBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        bind_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int captureMode_ = 0;
      /**
       * <pre>
       * When the bind address is an IP, the captureMode option dictates
       * how traffic to the listener is expected to be captured (or not).
       * captureMode must be DEFAULT or `NONE` for Unix domain socket binds.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
       * @return The enum numeric value on the wire for captureMode.
       */
      @java.lang.Override public int getCaptureModeValue() {
        return captureMode_;
      }
      /**
       * <pre>
       * When the bind address is an IP, the captureMode option dictates
       * how traffic to the listener is expected to be captured (or not).
       * captureMode must be DEFAULT or `NONE` for Unix domain socket binds.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
       * @param value The enum numeric value on the wire for captureMode to set.
       * @return This builder for chaining.
       */
      public Builder setCaptureModeValue(int value) {
        captureMode_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * When the bind address is an IP, the captureMode option dictates
       * how traffic to the listener is expected to be captured (or not).
       * captureMode must be DEFAULT or `NONE` for Unix domain socket binds.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
       * @return The captureMode.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.CaptureMode getCaptureMode() {
        istio.networking.v1alpha3.SidecarOuterClass.CaptureMode result = istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.forNumber(captureMode_);
        return result == null ? istio.networking.v1alpha3.SidecarOuterClass.CaptureMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * When the bind address is an IP, the captureMode option dictates
       * how traffic to the listener is expected to be captured (or not).
       * captureMode must be DEFAULT or `NONE` for Unix domain socket binds.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
       * @param value The captureMode to set.
       * @return This builder for chaining.
       */
      public Builder setCaptureMode(istio.networking.v1alpha3.SidecarOuterClass.CaptureMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        captureMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * When the bind address is an IP, the captureMode option dictates
       * how traffic to the listener is expected to be captured (or not).
       * captureMode must be DEFAULT or `NONE` for Unix domain socket binds.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.CaptureMode capture_mode = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCaptureMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        captureMode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureHostsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          hosts_ = new com.google.protobuf.LazyStringArrayList(hosts_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * One or more service hosts exposed by the listener
       * in `namespace/dnsName` format. Services in the specified namespace
       * matching `dnsName` will be exposed.
       * The corresponding service can be a service in the service registry
       * (e.g., a Kubernetes or cloud foundry service) or a service specified
       * using a `ServiceEntry` or `VirtualService` configuration. Any
       * associated `DestinationRule` in the same namespace will also be used.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all services from the specified namespace
       * (e.g., `prod/&#42;`).
       * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
       * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
       * Istio will configure the sidecar to be able to reach every service in the
       * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
       * to completely trim the configuration for sidecars that simply receive traffic
       * and respond, but make no outbound connections of their own.
       * NOTE: Only services and configuration artifacts exported to the sidecar's
       * namespace (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will
       * not be available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * **WARNING:** The list of egress hosts in a `Sidecar` must also include
       * the Mixer control plane services if they are enabled. Envoy will not
       * be able to reach them otherwise. For example, add host
       * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
       * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
       * policy is enabled, or add `istio-system/&#42;` to allow all services in the
       * `istio-system` namespace. This requirement is temporary and will be removed
       * in a future Istio release.
       * </pre>
       *
       * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return A list containing the hosts.
       */
      public com.google.protobuf.ProtocolStringList
          getHostsList() {
        return hosts_.getUnmodifiableView();
      }
      /**
       * <pre>
       * One or more service hosts exposed by the listener
       * in `namespace/dnsName` format. Services in the specified namespace
       * matching `dnsName` will be exposed.
       * The corresponding service can be a service in the service registry
       * (e.g., a Kubernetes or cloud foundry service) or a service specified
       * using a `ServiceEntry` or `VirtualService` configuration. Any
       * associated `DestinationRule` in the same namespace will also be used.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all services from the specified namespace
       * (e.g., `prod/&#42;`).
       * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
       * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
       * Istio will configure the sidecar to be able to reach every service in the
       * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
       * to completely trim the configuration for sidecars that simply receive traffic
       * and respond, but make no outbound connections of their own.
       * NOTE: Only services and configuration artifacts exported to the sidecar's
       * namespace (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will
       * not be available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * **WARNING:** The list of egress hosts in a `Sidecar` must also include
       * the Mixer control plane services if they are enabled. Envoy will not
       * be able to reach them otherwise. For example, add host
       * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
       * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
       * policy is enabled, or add `istio-system/&#42;` to allow all services in the
       * `istio-system` namespace. This requirement is temporary and will be removed
       * in a future Istio release.
       * </pre>
       *
       * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The count of hosts.
       */
      public int getHostsCount() {
        return hosts_.size();
      }
      /**
       * <pre>
       * One or more service hosts exposed by the listener
       * in `namespace/dnsName` format. Services in the specified namespace
       * matching `dnsName` will be exposed.
       * The corresponding service can be a service in the service registry
       * (e.g., a Kubernetes or cloud foundry service) or a service specified
       * using a `ServiceEntry` or `VirtualService` configuration. Any
       * associated `DestinationRule` in the same namespace will also be used.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all services from the specified namespace
       * (e.g., `prod/&#42;`).
       * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
       * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
       * Istio will configure the sidecar to be able to reach every service in the
       * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
       * to completely trim the configuration for sidecars that simply receive traffic
       * and respond, but make no outbound connections of their own.
       * NOTE: Only services and configuration artifacts exported to the sidecar's
       * namespace (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will
       * not be available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * **WARNING:** The list of egress hosts in a `Sidecar` must also include
       * the Mixer control plane services if they are enabled. Envoy will not
       * be able to reach them otherwise. For example, add host
       * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
       * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
       * policy is enabled, or add `istio-system/&#42;` to allow all services in the
       * `istio-system` namespace. This requirement is temporary and will be removed
       * in a future Istio release.
       * </pre>
       *
       * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index of the element to return.
       * @return The hosts at the given index.
       */
      public java.lang.String getHosts(int index) {
        return hosts_.get(index);
      }
      /**
       * <pre>
       * One or more service hosts exposed by the listener
       * in `namespace/dnsName` format. Services in the specified namespace
       * matching `dnsName` will be exposed.
       * The corresponding service can be a service in the service registry
       * (e.g., a Kubernetes or cloud foundry service) or a service specified
       * using a `ServiceEntry` or `VirtualService` configuration. Any
       * associated `DestinationRule` in the same namespace will also be used.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all services from the specified namespace
       * (e.g., `prod/&#42;`).
       * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
       * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
       * Istio will configure the sidecar to be able to reach every service in the
       * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
       * to completely trim the configuration for sidecars that simply receive traffic
       * and respond, but make no outbound connections of their own.
       * NOTE: Only services and configuration artifacts exported to the sidecar's
       * namespace (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will
       * not be available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * **WARNING:** The list of egress hosts in a `Sidecar` must also include
       * the Mixer control plane services if they are enabled. Envoy will not
       * be able to reach them otherwise. For example, add host
       * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
       * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
       * policy is enabled, or add `istio-system/&#42;` to allow all services in the
       * `istio-system` namespace. This requirement is temporary and will be removed
       * in a future Istio release.
       * </pre>
       *
       * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index of the value to return.
       * @return The bytes of the hosts at the given index.
       */
      public com.google.protobuf.ByteString
          getHostsBytes(int index) {
        return hosts_.getByteString(index);
      }
      /**
       * <pre>
       * One or more service hosts exposed by the listener
       * in `namespace/dnsName` format. Services in the specified namespace
       * matching `dnsName` will be exposed.
       * The corresponding service can be a service in the service registry
       * (e.g., a Kubernetes or cloud foundry service) or a service specified
       * using a `ServiceEntry` or `VirtualService` configuration. Any
       * associated `DestinationRule` in the same namespace will also be used.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all services from the specified namespace
       * (e.g., `prod/&#42;`).
       * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
       * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
       * Istio will configure the sidecar to be able to reach every service in the
       * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
       * to completely trim the configuration for sidecars that simply receive traffic
       * and respond, but make no outbound connections of their own.
       * NOTE: Only services and configuration artifacts exported to the sidecar's
       * namespace (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will
       * not be available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * **WARNING:** The list of egress hosts in a `Sidecar` must also include
       * the Mixer control plane services if they are enabled. Envoy will not
       * be able to reach them otherwise. For example, add host
       * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
       * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
       * policy is enabled, or add `istio-system/&#42;` to allow all services in the
       * `istio-system` namespace. This requirement is temporary and will be removed
       * in a future Istio release.
       * </pre>
       *
       * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index to set the value at.
       * @param value The hosts to set.
       * @return This builder for chaining.
       */
      public Builder setHosts(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureHostsIsMutable();
        hosts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more service hosts exposed by the listener
       * in `namespace/dnsName` format. Services in the specified namespace
       * matching `dnsName` will be exposed.
       * The corresponding service can be a service in the service registry
       * (e.g., a Kubernetes or cloud foundry service) or a service specified
       * using a `ServiceEntry` or `VirtualService` configuration. Any
       * associated `DestinationRule` in the same namespace will also be used.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all services from the specified namespace
       * (e.g., `prod/&#42;`).
       * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
       * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
       * Istio will configure the sidecar to be able to reach every service in the
       * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
       * to completely trim the configuration for sidecars that simply receive traffic
       * and respond, but make no outbound connections of their own.
       * NOTE: Only services and configuration artifacts exported to the sidecar's
       * namespace (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will
       * not be available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * **WARNING:** The list of egress hosts in a `Sidecar` must also include
       * the Mixer control plane services if they are enabled. Envoy will not
       * be able to reach them otherwise. For example, add host
       * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
       * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
       * policy is enabled, or add `istio-system/&#42;` to allow all services in the
       * `istio-system` namespace. This requirement is temporary and will be removed
       * in a future Istio release.
       * </pre>
       *
       * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The hosts to add.
       * @return This builder for chaining.
       */
      public Builder addHosts(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureHostsIsMutable();
        hosts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more service hosts exposed by the listener
       * in `namespace/dnsName` format. Services in the specified namespace
       * matching `dnsName` will be exposed.
       * The corresponding service can be a service in the service registry
       * (e.g., a Kubernetes or cloud foundry service) or a service specified
       * using a `ServiceEntry` or `VirtualService` configuration. Any
       * associated `DestinationRule` in the same namespace will also be used.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all services from the specified namespace
       * (e.g., `prod/&#42;`).
       * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
       * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
       * Istio will configure the sidecar to be able to reach every service in the
       * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
       * to completely trim the configuration for sidecars that simply receive traffic
       * and respond, but make no outbound connections of their own.
       * NOTE: Only services and configuration artifacts exported to the sidecar's
       * namespace (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will
       * not be available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * **WARNING:** The list of egress hosts in a `Sidecar` must also include
       * the Mixer control plane services if they are enabled. Envoy will not
       * be able to reach them otherwise. For example, add host
       * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
       * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
       * policy is enabled, or add `istio-system/&#42;` to allow all services in the
       * `istio-system` namespace. This requirement is temporary and will be removed
       * in a future Istio release.
       * </pre>
       *
       * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param values The hosts to add.
       * @return This builder for chaining.
       */
      public Builder addAllHosts(
          java.lang.Iterable<java.lang.String> values) {
        ensureHostsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hosts_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more service hosts exposed by the listener
       * in `namespace/dnsName` format. Services in the specified namespace
       * matching `dnsName` will be exposed.
       * The corresponding service can be a service in the service registry
       * (e.g., a Kubernetes or cloud foundry service) or a service specified
       * using a `ServiceEntry` or `VirtualService` configuration. Any
       * associated `DestinationRule` in the same namespace will also be used.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all services from the specified namespace
       * (e.g., `prod/&#42;`).
       * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
       * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
       * Istio will configure the sidecar to be able to reach every service in the
       * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
       * to completely trim the configuration for sidecars that simply receive traffic
       * and respond, but make no outbound connections of their own.
       * NOTE: Only services and configuration artifacts exported to the sidecar's
       * namespace (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will
       * not be available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * **WARNING:** The list of egress hosts in a `Sidecar` must also include
       * the Mixer control plane services if they are enabled. Envoy will not
       * be able to reach them otherwise. For example, add host
       * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
       * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
       * policy is enabled, or add `istio-system/&#42;` to allow all services in the
       * `istio-system` namespace. This requirement is temporary and will be removed
       * in a future Istio release.
       * </pre>
       *
       * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearHosts() {
        hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more service hosts exposed by the listener
       * in `namespace/dnsName` format. Services in the specified namespace
       * matching `dnsName` will be exposed.
       * The corresponding service can be a service in the service registry
       * (e.g., a Kubernetes or cloud foundry service) or a service specified
       * using a `ServiceEntry` or `VirtualService` configuration. Any
       * associated `DestinationRule` in the same namespace will also be used.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all services from the specified namespace
       * (e.g., `prod/&#42;`).
       * The `namespace` can be set to `*`, `.`, or `~`, representing any, the current,
       * or no namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. If a host is set to `*&#47;&#42;`,
       * Istio will configure the sidecar to be able to reach every service in the
       * mesh that is exported to the sidecar's namespace. The value `~/&#42;` can be used
       * to completely trim the configuration for sidecars that simply receive traffic
       * and respond, but make no outbound connections of their own.
       * NOTE: Only services and configuration artifacts exported to the sidecar's
       * namespace (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will
       * not be available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * **WARNING:** The list of egress hosts in a `Sidecar` must also include
       * the Mixer control plane services if they are enabled. Envoy will not
       * be able to reach them otherwise. For example, add host
       * `istio-system/istio-telemetry.istio-system.svc.cluster.local` if telemetry
       * is enabled, `istio-system/istio-policy.istio-system.svc.cluster.local` if
       * policy is enabled, or add `istio-system/&#42;` to allow all services in the
       * `istio-system` namespace. This requirement is temporary and will be removed
       * in a future Istio release.
       * </pre>
       *
       * <code>repeated string hosts = 4 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes of the hosts to add.
       * @return This builder for chaining.
       */
      public Builder addHostsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureHostsIsMutable();
        hosts_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.IstioEgressListener)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.IstioEgressListener)
    private static final istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener();
    }

    public static istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IstioEgressListener>
        PARSER = new com.google.protobuf.AbstractParser<IstioEgressListener>() {
      @java.lang.Override
      public IstioEgressListener parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IstioEgressListener> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IstioEgressListener> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.IstioEgressListener getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkloadSelectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.WorkloadSelector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which the configuration should be applied. The scope of
     * label search is restricted to the configuration namespace in which the
     * the resource is present.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    int getLabelsCount();
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which the configuration should be applied. The scope of
     * label search is restricted to the configuration namespace in which the
     * the resource is present.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    boolean containsLabels(
        java.lang.String key);
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getLabels();
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which the configuration should be applied. The scope of
     * label search is restricted to the configuration namespace in which the
     * the resource is present.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getLabelsMap();
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which the configuration should be applied. The scope of
     * label search is restricted to the configuration namespace in which the
     * the resource is present.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    /* nullable */
java.lang.String getLabelsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which the configuration should be applied. The scope of
     * label search is restricted to the configuration namespace in which the
     * the resource is present.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    java.lang.String getLabelsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * `WorkloadSelector` specifies the criteria used to determine if the
   * `Gateway`, `Sidecar`, or `EnvoyFilter` or `ServiceEntry`
   * configuration can be applied to a proxy. The matching criteria
   * includes the metadata associated with a proxy, workload instance
   * info such as labels attached to the pod/VM, or any other info that
   * the proxy provides to Istio during the initial handshake. If
   * multiple conditions are specified, all conditions need to match in
   * order for the workload instance to be selected. Currently, only
   * label based selection mechanism is supported.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.WorkloadSelector}
   */
  public static final class WorkloadSelector extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.WorkloadSelector)
      WorkloadSelectorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorkloadSelector.newBuilder() to construct.
    private WorkloadSelector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorkloadSelector() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorkloadSelector();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_WorkloadSelector_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_WorkloadSelector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.class, istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.Builder.class);
    }

    public static final int LABELS_FIELD_NUMBER = 1;
    private static final class LabelsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_WorkloadSelector_LabelsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }
    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which the configuration should be applied. The scope of
     * label search is restricted to the configuration namespace in which the
     * the resource is present.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which the configuration should be applied. The scope of
     * label search is restricted to the configuration namespace in which the
     * the resource is present.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which the configuration should be applied. The scope of
     * label search is restricted to the configuration namespace in which the
     * the resource is present.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getLabelsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which the configuration should be applied. The scope of
     * label search is restricted to the configuration namespace in which the
     * the resource is present.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLabels(),
          LabelsDefaultEntryHolder.defaultEntry,
          1);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetLabels().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, labels__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector other = (istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector) obj;

      if (!internalGetLabels().equals(
          other.internalGetLabels())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetLabels().getMap().isEmpty()) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLabels().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * `WorkloadSelector` specifies the criteria used to determine if the
     * `Gateway`, `Sidecar`, or `EnvoyFilter` or `ServiceEntry`
     * configuration can be applied to a proxy. The matching criteria
     * includes the metadata associated with a proxy, workload instance
     * info such as labels attached to the pod/VM, or any other info that
     * the proxy provides to Istio during the initial handshake. If
     * multiple conditions are specified, all conditions need to match in
     * order for the workload instance to be selected. Currently, only
     * label based selection mechanism is supported.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.WorkloadSelector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.WorkloadSelector)
        istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_WorkloadSelector_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_WorkloadSelector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.class, istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableLabels().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_WorkloadSelector_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector getDefaultInstanceForType() {
        return istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector build() {
        istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector buildPartial() {
        istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector result = new istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.labels_ = internalGetLabels();
          result.labels_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector) {
          return mergeFrom((istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector other) {
        if (other == istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector.getDefaultInstance()) return this;
        internalGetMutableLabels().mergeFrom(
            other.internalGetLabels());
        bitField0_ |= 0x00000001;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                labels__ = input.readMessage(
                    LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableLabels().getMutableMap().put(
                    labels__.getKey(), labels__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> labels_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetLabels() {
        if (labels_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableLabels() {
        if (labels_ == null) {
          labels_ = com.google.protobuf.MapField.newMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        if (!labels_.isMutable()) {
          labels_ = labels_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return labels_;
      }
      public int getLabelsCount() {
        return internalGetLabels().getMap().size();
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which the configuration should be applied. The scope of
       * label search is restricted to the configuration namespace in which the
       * the resource is present.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      @java.lang.Override
      public boolean containsLabels(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetLabels().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getLabels() {
        return getLabelsMap();
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which the configuration should be applied. The scope of
       * label search is restricted to the configuration namespace in which the
       * the resource is present.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
        return internalGetLabels().getMap();
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which the configuration should be applied. The scope of
       * label search is restricted to the configuration namespace in which the
       * the resource is present.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getLabelsOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which the configuration should be applied. The scope of
       * label search is restricted to the configuration namespace in which the
       * the resource is present.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      @java.lang.Override
      public java.lang.String getLabelsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearLabels() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableLabels().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which the configuration should be applied. The scope of
       * label search is restricted to the configuration namespace in which the
       * the resource is present.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder removeLabels(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableLabels().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableLabels() {
        bitField0_ |= 0x00000001;
        return internalGetMutableLabels().getMutableMap();
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which the configuration should be applied. The scope of
       * label search is restricted to the configuration namespace in which the
       * the resource is present.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder putLabels(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableLabels().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which the configuration should be applied. The scope of
       * label search is restricted to the configuration namespace in which the
       * the resource is present.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder putAllLabels(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableLabels().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.WorkloadSelector)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.WorkloadSelector)
    private static final istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector();
    }

    public static istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WorkloadSelector>
        PARSER = new com.google.protobuf.AbstractParser<WorkloadSelector>() {
      @java.lang.Override
      public WorkloadSelector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WorkloadSelector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkloadSelector> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.WorkloadSelector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutboundTrafficPolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.OutboundTrafficPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
     * @return The enum numeric value on the wire for mode.
     */
    int getModeValue();
    /**
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
     * @return The mode.
     */
    istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode getMode();

    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     * @return Whether the egressProxy field is set.
     */
    boolean hasEgressProxy();
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     * @return The egressProxy.
     */
    istio.networking.v1alpha3.VirtualServiceOuterClass.Destination getEgressProxy();
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     */
    istio.networking.v1alpha3.VirtualServiceOuterClass.DestinationOrBuilder getEgressProxyOrBuilder();
  }
  /**
   * <pre>
   * `OutboundTrafficPolicy` sets the default behavior of the sidecar for
   * handling outbound traffic from the application.
   * If your application uses one or more external
   * services that are not known apriori, setting the policy to `ALLOW_ANY`
   * will cause the sidecars to route any unknown traffic originating from
   * the application to its requested destination.  Users are strongly
   * encouraged to use `ServiceEntry` configurations to explicitly declare any external
   * dependencies, instead of using `ALLOW_ANY`, so that traffic to these
   * services can be monitored.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.OutboundTrafficPolicy}
   */
  public static final class OutboundTrafficPolicy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.OutboundTrafficPolicy)
      OutboundTrafficPolicyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutboundTrafficPolicy.newBuilder() to construct.
    private OutboundTrafficPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutboundTrafficPolicy() {
      mode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OutboundTrafficPolicy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.class, istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Builder.class);
    }

    /**
     * Protobuf enum {@code istio.networking.v1alpha3.OutboundTrafficPolicy.Mode}
     */
    public enum Mode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Outbound traffic will be restricted to services defined in the
       * service registry as well as those defined through `ServiceEntry` configurations.
       * </pre>
       *
       * <code>REGISTRY_ONLY = 0;</code>
       */
      REGISTRY_ONLY(0),
      /**
       * <pre>
       * Outbound traffic to unknown destinations will be allowed, in case
       * there are no services or `ServiceEntry` configurations for the destination port.
       * </pre>
       *
       * <code>ALLOW_ANY = 1;</code>
       */
      ALLOW_ANY(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Outbound traffic will be restricted to services defined in the
       * service registry as well as those defined through `ServiceEntry` configurations.
       * </pre>
       *
       * <code>REGISTRY_ONLY = 0;</code>
       */
      public static final int REGISTRY_ONLY_VALUE = 0;
      /**
       * <pre>
       * Outbound traffic to unknown destinations will be allowed, in case
       * there are no services or `ServiceEntry` configurations for the destination port.
       * </pre>
       *
       * <code>ALLOW_ANY = 1;</code>
       */
      public static final int ALLOW_ANY_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Mode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Mode forNumber(int value) {
        switch (value) {
          case 0: return REGISTRY_ONLY;
          case 1: return ALLOW_ANY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Mode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Mode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Mode>() {
              public Mode findValueByNumber(int number) {
                return Mode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.getDescriptor().getEnumTypes().get(0);
      }

      private static final Mode[] VALUES = values();

      public static Mode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Mode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:istio.networking.v1alpha3.OutboundTrafficPolicy.Mode)
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_ = 0;
    /**
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override public int getModeValue() {
      return mode_;
    }
    /**
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
     * @return The mode.
     */
    @java.lang.Override public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode getMode() {
      istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode result = istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode.forNumber(mode_);
      return result == null ? istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode.UNRECOGNIZED : result;
    }

    public static final int EGRESS_PROXY_FIELD_NUMBER = 2;
    private istio.networking.v1alpha3.VirtualServiceOuterClass.Destination egressProxy_;
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     * @return Whether the egressProxy field is set.
     */
    @java.lang.Override
    public boolean hasEgressProxy() {
      return egressProxy_ != null;
    }
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     * @return The egressProxy.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.VirtualServiceOuterClass.Destination getEgressProxy() {
      return egressProxy_ == null ? istio.networking.v1alpha3.VirtualServiceOuterClass.Destination.getDefaultInstance() : egressProxy_;
    }
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.VirtualServiceOuterClass.DestinationOrBuilder getEgressProxyOrBuilder() {
      return egressProxy_ == null ? istio.networking.v1alpha3.VirtualServiceOuterClass.Destination.getDefaultInstance() : egressProxy_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mode_ != istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode.REGISTRY_ONLY.getNumber()) {
        output.writeEnum(1, mode_);
      }
      if (egressProxy_ != null) {
        output.writeMessage(2, getEgressProxy());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mode_ != istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode.REGISTRY_ONLY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      if (egressProxy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEgressProxy());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy other = (istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy) obj;

      if (mode_ != other.mode_) return false;
      if (hasEgressProxy() != other.hasEgressProxy()) return false;
      if (hasEgressProxy()) {
        if (!getEgressProxy()
            .equals(other.getEgressProxy())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
      if (hasEgressProxy()) {
        hash = (37 * hash) + EGRESS_PROXY_FIELD_NUMBER;
        hash = (53 * hash) + getEgressProxy().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * `OutboundTrafficPolicy` sets the default behavior of the sidecar for
     * handling outbound traffic from the application.
     * If your application uses one or more external
     * services that are not known apriori, setting the policy to `ALLOW_ANY`
     * will cause the sidecars to route any unknown traffic originating from
     * the application to its requested destination.  Users are strongly
     * encouraged to use `ServiceEntry` configurations to explicitly declare any external
     * dependencies, instead of using `ALLOW_ANY`, so that traffic to these
     * services can be monitored.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.OutboundTrafficPolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.OutboundTrafficPolicy)
        istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.class, istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        mode_ = 0;
        egressProxy_ = null;
        if (egressProxyBuilder_ != null) {
          egressProxyBuilder_.dispose();
          egressProxyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.SidecarOuterClass.internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy getDefaultInstanceForType() {
        return istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy build() {
        istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy buildPartial() {
        istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy result = new istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.mode_ = mode_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.egressProxy_ = egressProxyBuilder_ == null
              ? egressProxy_
              : egressProxyBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy) {
          return mergeFrom((istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy other) {
        if (other == istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.getDefaultInstance()) return this;
        if (other.mode_ != 0) {
          setModeValue(other.getModeValue());
        }
        if (other.hasEgressProxy()) {
          mergeEgressProxy(other.getEgressProxy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                mode_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getEgressProxyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int mode_ = 0;
      /**
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
       * @return The enum numeric value on the wire for mode.
       */
      @java.lang.Override public int getModeValue() {
        return mode_;
      }
      /**
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
       * @param value The enum numeric value on the wire for mode to set.
       * @return This builder for chaining.
       */
      public Builder setModeValue(int value) {
        mode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
       * @return The mode.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode getMode() {
        istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode result = istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode.forNumber(mode_);
        return result == null ? istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode.UNRECOGNIZED : result;
      }
      /**
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy.Mode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 0;
        onChanged();
        return this;
      }

      private istio.networking.v1alpha3.VirtualServiceOuterClass.Destination egressProxy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.VirtualServiceOuterClass.Destination, istio.networking.v1alpha3.VirtualServiceOuterClass.Destination.Builder, istio.networking.v1alpha3.VirtualServiceOuterClass.DestinationOrBuilder> egressProxyBuilder_;
      /**
       * <pre>
       * Specifies the details of the egress proxy to which unknown
       * traffic should be forwarded to from the sidecar. Valid only if
       * the mode is set to ALLOW_ANY. If not specified when the mode is
       * ALLOW_ANY, the sidecar will send the unknown traffic directly to
       * the IP requested by the application.
       * ** NOTE 1**: The specified egress host must be imported in the
       * egress section for the traffic forwarding to work.
       * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
       * to handle plain text TCP connections forwarded from the sidecar.
       * Envoy's dynamic forward proxy can handle only HTTP and TLS
       * connections.
       * $hide_from_docs
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
       * @return Whether the egressProxy field is set.
       */
      public boolean hasEgressProxy() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Specifies the details of the egress proxy to which unknown
       * traffic should be forwarded to from the sidecar. Valid only if
       * the mode is set to ALLOW_ANY. If not specified when the mode is
       * ALLOW_ANY, the sidecar will send the unknown traffic directly to
       * the IP requested by the application.
       * ** NOTE 1**: The specified egress host must be imported in the
       * egress section for the traffic forwarding to work.
       * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
       * to handle plain text TCP connections forwarded from the sidecar.
       * Envoy's dynamic forward proxy can handle only HTTP and TLS
       * connections.
       * $hide_from_docs
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
       * @return The egressProxy.
       */
      public istio.networking.v1alpha3.VirtualServiceOuterClass.Destination getEgressProxy() {
        if (egressProxyBuilder_ == null) {
          return egressProxy_ == null ? istio.networking.v1alpha3.VirtualServiceOuterClass.Destination.getDefaultInstance() : egressProxy_;
        } else {
          return egressProxyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies the details of the egress proxy to which unknown
       * traffic should be forwarded to from the sidecar. Valid only if
       * the mode is set to ALLOW_ANY. If not specified when the mode is
       * ALLOW_ANY, the sidecar will send the unknown traffic directly to
       * the IP requested by the application.
       * ** NOTE 1**: The specified egress host must be imported in the
       * egress section for the traffic forwarding to work.
       * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
       * to handle plain text TCP connections forwarded from the sidecar.
       * Envoy's dynamic forward proxy can handle only HTTP and TLS
       * connections.
       * $hide_from_docs
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
       */
      public Builder setEgressProxy(istio.networking.v1alpha3.VirtualServiceOuterClass.Destination value) {
        if (egressProxyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          egressProxy_ = value;
        } else {
          egressProxyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the details of the egress proxy to which unknown
       * traffic should be forwarded to from the sidecar. Valid only if
       * the mode is set to ALLOW_ANY. If not specified when the mode is
       * ALLOW_ANY, the sidecar will send the unknown traffic directly to
       * the IP requested by the application.
       * ** NOTE 1**: The specified egress host must be imported in the
       * egress section for the traffic forwarding to work.
       * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
       * to handle plain text TCP connections forwarded from the sidecar.
       * Envoy's dynamic forward proxy can handle only HTTP and TLS
       * connections.
       * $hide_from_docs
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
       */
      public Builder setEgressProxy(
          istio.networking.v1alpha3.VirtualServiceOuterClass.Destination.Builder builderForValue) {
        if (egressProxyBuilder_ == null) {
          egressProxy_ = builderForValue.build();
        } else {
          egressProxyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the details of the egress proxy to which unknown
       * traffic should be forwarded to from the sidecar. Valid only if
       * the mode is set to ALLOW_ANY. If not specified when the mode is
       * ALLOW_ANY, the sidecar will send the unknown traffic directly to
       * the IP requested by the application.
       * ** NOTE 1**: The specified egress host must be imported in the
       * egress section for the traffic forwarding to work.
       * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
       * to handle plain text TCP connections forwarded from the sidecar.
       * Envoy's dynamic forward proxy can handle only HTTP and TLS
       * connections.
       * $hide_from_docs
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
       */
      public Builder mergeEgressProxy(istio.networking.v1alpha3.VirtualServiceOuterClass.Destination value) {
        if (egressProxyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            egressProxy_ != null &&
            egressProxy_ != istio.networking.v1alpha3.VirtualServiceOuterClass.Destination.getDefaultInstance()) {
            getEgressProxyBuilder().mergeFrom(value);
          } else {
            egressProxy_ = value;
          }
        } else {
          egressProxyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the details of the egress proxy to which unknown
       * traffic should be forwarded to from the sidecar. Valid only if
       * the mode is set to ALLOW_ANY. If not specified when the mode is
       * ALLOW_ANY, the sidecar will send the unknown traffic directly to
       * the IP requested by the application.
       * ** NOTE 1**: The specified egress host must be imported in the
       * egress section for the traffic forwarding to work.
       * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
       * to handle plain text TCP connections forwarded from the sidecar.
       * Envoy's dynamic forward proxy can handle only HTTP and TLS
       * connections.
       * $hide_from_docs
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
       */
      public Builder clearEgressProxy() {
        bitField0_ = (bitField0_ & ~0x00000002);
        egressProxy_ = null;
        if (egressProxyBuilder_ != null) {
          egressProxyBuilder_.dispose();
          egressProxyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the details of the egress proxy to which unknown
       * traffic should be forwarded to from the sidecar. Valid only if
       * the mode is set to ALLOW_ANY. If not specified when the mode is
       * ALLOW_ANY, the sidecar will send the unknown traffic directly to
       * the IP requested by the application.
       * ** NOTE 1**: The specified egress host must be imported in the
       * egress section for the traffic forwarding to work.
       * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
       * to handle plain text TCP connections forwarded from the sidecar.
       * Envoy's dynamic forward proxy can handle only HTTP and TLS
       * connections.
       * $hide_from_docs
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
       */
      public istio.networking.v1alpha3.VirtualServiceOuterClass.Destination.Builder getEgressProxyBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEgressProxyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies the details of the egress proxy to which unknown
       * traffic should be forwarded to from the sidecar. Valid only if
       * the mode is set to ALLOW_ANY. If not specified when the mode is
       * ALLOW_ANY, the sidecar will send the unknown traffic directly to
       * the IP requested by the application.
       * ** NOTE 1**: The specified egress host must be imported in the
       * egress section for the traffic forwarding to work.
       * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
       * to handle plain text TCP connections forwarded from the sidecar.
       * Envoy's dynamic forward proxy can handle only HTTP and TLS
       * connections.
       * $hide_from_docs
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
       */
      public istio.networking.v1alpha3.VirtualServiceOuterClass.DestinationOrBuilder getEgressProxyOrBuilder() {
        if (egressProxyBuilder_ != null) {
          return egressProxyBuilder_.getMessageOrBuilder();
        } else {
          return egressProxy_ == null ?
              istio.networking.v1alpha3.VirtualServiceOuterClass.Destination.getDefaultInstance() : egressProxy_;
        }
      }
      /**
       * <pre>
       * Specifies the details of the egress proxy to which unknown
       * traffic should be forwarded to from the sidecar. Valid only if
       * the mode is set to ALLOW_ANY. If not specified when the mode is
       * ALLOW_ANY, the sidecar will send the unknown traffic directly to
       * the IP requested by the application.
       * ** NOTE 1**: The specified egress host must be imported in the
       * egress section for the traffic forwarding to work.
       * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
       * to handle plain text TCP connections forwarded from the sidecar.
       * Envoy's dynamic forward proxy can handle only HTTP and TLS
       * connections.
       * $hide_from_docs
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.VirtualServiceOuterClass.Destination, istio.networking.v1alpha3.VirtualServiceOuterClass.Destination.Builder, istio.networking.v1alpha3.VirtualServiceOuterClass.DestinationOrBuilder> 
          getEgressProxyFieldBuilder() {
        if (egressProxyBuilder_ == null) {
          egressProxyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.VirtualServiceOuterClass.Destination, istio.networking.v1alpha3.VirtualServiceOuterClass.Destination.Builder, istio.networking.v1alpha3.VirtualServiceOuterClass.DestinationOrBuilder>(
                  getEgressProxy(),
                  getParentForChildren(),
                  isClean());
          egressProxy_ = null;
        }
        return egressProxyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.OutboundTrafficPolicy)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.OutboundTrafficPolicy)
    private static final istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy();
    }

    public static istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OutboundTrafficPolicy>
        PARSER = new com.google.protobuf.AbstractParser<OutboundTrafficPolicy>() {
      @java.lang.Override
      public OutboundTrafficPolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OutboundTrafficPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutboundTrafficPolicy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.SidecarOuterClass.OutboundTrafficPolicy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_Sidecar_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_Sidecar_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_IstioIngressListener_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_IstioIngressListener_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_IstioEgressListener_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_IstioEgressListener_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_WorkloadSelector_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_WorkloadSelector_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_WorkloadSelector_LabelsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_WorkloadSelector_LabelsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!networking/v1alpha3/sidecar.proto\022\031ist" +
      "io.networking.v1alpha3\032\037google/api/field" +
      "_behavior.proto\032!networking/v1alpha3/gat" +
      "eway.proto\032)networking/v1alpha3/virtual_" +
      "service.proto\032*networking/v1alpha3/desti" +
      "nation_rule.proto\"\275\002\n\007Sidecar\022F\n\021workloa" +
      "d_selector\030\001 \001(\0132+.istio.networking.v1al" +
      "pha3.WorkloadSelector\022@\n\007ingress\030\002 \003(\0132/" +
      ".istio.networking.v1alpha3.IstioIngressL" +
      "istener\022>\n\006egress\030\003 \003(\0132..istio.networki" +
      "ng.v1alpha3.IstioEgressListener\022Q\n\027outbo" +
      "und_traffic_policy\030\004 \001(\01320.istio.network" +
      "ing.v1alpha3.OutboundTrafficPolicyJ\004\010\005\020\006" +
      "J\004\010\006\020\007R\tlocalhost\"\327\001\n\024IstioIngressListen" +
      "er\0222\n\004port\030\001 \001(\0132\037.istio.networking.v1al" +
      "pha3.PortB\003\340A\002\022\014\n\004bind\030\002 \001(\t\022<\n\014capture_" +
      "mode\030\003 \001(\0162&.istio.networking.v1alpha3.C" +
      "aptureMode\022\035\n\020default_endpoint\030\004 \001(\tB\003\340A" +
      "\002J\004\010\005\020\006J\004\010\006\020\007R\024localhost_client_tls\"\306\001\n\023" +
      "IstioEgressListener\022-\n\004port\030\001 \001(\0132\037.isti" +
      "o.networking.v1alpha3.Port\022\014\n\004bind\030\002 \001(\t" +
      "\022<\n\014capture_mode\030\003 \001(\0162&.istio.networkin" +
      "g.v1alpha3.CaptureMode\022\022\n\005hosts\030\004 \003(\tB\003\340" +
      "A\002J\004\010\005\020\006J\004\010\006\020\007R\024localhost_server_tls\"\217\001\n" +
      "\020WorkloadSelector\022L\n\006labels\030\001 \003(\01327.isti" +
      "o.networking.v1alpha3.WorkloadSelector.L" +
      "abelsEntryB\003\340A\002\032-\n\013LabelsEntry\022\013\n\003key\030\001 " +
      "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\304\001\n\025OutboundTraff" +
      "icPolicy\022C\n\004mode\030\001 \001(\01625.istio.networkin" +
      "g.v1alpha3.OutboundTrafficPolicy.Mode\022<\n" +
      "\014egress_proxy\030\002 \001(\0132&.istio.networking.v" +
      "1alpha3.Destination\"(\n\004Mode\022\021\n\rREGISTRY_" +
      "ONLY\020\000\022\r\n\tALLOW_ANY\020\001*2\n\013CaptureMode\022\013\n\007" +
      "DEFAULT\020\000\022\014\n\010IPTABLES\020\001\022\010\n\004NONE\020\002B\"Z ist" +
      "io.io/api/networking/v1alpha3b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.FieldBehaviorProto.getDescriptor(),
          istio.networking.v1alpha3.GatewayOuterClass.getDescriptor(),
          istio.networking.v1alpha3.VirtualServiceOuterClass.getDescriptor(),
          istio.networking.v1alpha3.DestinationRuleOuterClass.getDescriptor(),
        });
    internal_static_istio_networking_v1alpha3_Sidecar_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_istio_networking_v1alpha3_Sidecar_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_Sidecar_descriptor,
        new java.lang.String[] { "WorkloadSelector", "Ingress", "Egress", "OutboundTrafficPolicy", });
    internal_static_istio_networking_v1alpha3_IstioIngressListener_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_istio_networking_v1alpha3_IstioIngressListener_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_IstioIngressListener_descriptor,
        new java.lang.String[] { "Port", "Bind", "CaptureMode", "DefaultEndpoint", });
    internal_static_istio_networking_v1alpha3_IstioEgressListener_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_istio_networking_v1alpha3_IstioEgressListener_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_IstioEgressListener_descriptor,
        new java.lang.String[] { "Port", "Bind", "CaptureMode", "Hosts", });
    internal_static_istio_networking_v1alpha3_WorkloadSelector_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_istio_networking_v1alpha3_WorkloadSelector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_WorkloadSelector_descriptor,
        new java.lang.String[] { "Labels", });
    internal_static_istio_networking_v1alpha3_WorkloadSelector_LabelsEntry_descriptor =
      internal_static_istio_networking_v1alpha3_WorkloadSelector_descriptor.getNestedTypes().get(0);
    internal_static_istio_networking_v1alpha3_WorkloadSelector_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_WorkloadSelector_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_descriptor,
        new java.lang.String[] { "Mode", "EgressProxy", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.FieldBehaviorProto.fieldBehavior);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.FieldBehaviorProto.getDescriptor();
    istio.networking.v1alpha3.GatewayOuterClass.getDescriptor();
    istio.networking.v1alpha3.VirtualServiceOuterClass.getDescriptor();
    istio.networking.v1alpha3.DestinationRuleOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
