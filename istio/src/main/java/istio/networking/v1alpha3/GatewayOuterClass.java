// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networking/v1alpha3/gateway.proto

package istio.networking.v1alpha3;

public final class GatewayOuterClass {
  private GatewayOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GatewayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.Gateway)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A list of server specifications.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    java.util.List<istio.networking.v1alpha3.GatewayOuterClass.Server> 
        getServersList();
    /**
     * <pre>
     * A list of server specifications.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    istio.networking.v1alpha3.GatewayOuterClass.Server getServers(int index);
    /**
     * <pre>
     * A list of server specifications.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    int getServersCount();
    /**
     * <pre>
     * A list of server specifications.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    java.util.List<? extends istio.networking.v1alpha3.GatewayOuterClass.ServerOrBuilder> 
        getServersOrBuilderList();
    /**
     * <pre>
     * A list of server specifications.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    istio.networking.v1alpha3.GatewayOuterClass.ServerOrBuilder getServersOrBuilder(
        int index);

    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which this gateway configuration should be applied.
     * By default workloads are searched across all namespaces based on label selectors.
     * This implies that a gateway resource in the namespace "foo" can select pods in
     * the namespace "bar" based on labels.
     * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
     * environment variable in istiod. If this variable is set
     * to true, the scope of label search is restricted to the configuration
     * namespace in which the the resource is present. In other words, the Gateway
     * resource must reside in the same namespace as the gateway workload
     * instance.
     * If selector is nil, the Gateway will be applied to all workloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    int getSelectorCount();
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which this gateway configuration should be applied.
     * By default workloads are searched across all namespaces based on label selectors.
     * This implies that a gateway resource in the namespace "foo" can select pods in
     * the namespace "bar" based on labels.
     * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
     * environment variable in istiod. If this variable is set
     * to true, the scope of label search is restricted to the configuration
     * namespace in which the the resource is present. In other words, the Gateway
     * resource must reside in the same namespace as the gateway workload
     * instance.
     * If selector is nil, the Gateway will be applied to all workloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    boolean containsSelector(
        java.lang.String key);
    /**
     * Use {@link #getSelectorMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getSelector();
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which this gateway configuration should be applied.
     * By default workloads are searched across all namespaces based on label selectors.
     * This implies that a gateway resource in the namespace "foo" can select pods in
     * the namespace "bar" based on labels.
     * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
     * environment variable in istiod. If this variable is set
     * to true, the scope of label search is restricted to the configuration
     * namespace in which the the resource is present. In other words, the Gateway
     * resource must reside in the same namespace as the gateway workload
     * instance.
     * If selector is nil, the Gateway will be applied to all workloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getSelectorMap();
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which this gateway configuration should be applied.
     * By default workloads are searched across all namespaces based on label selectors.
     * This implies that a gateway resource in the namespace "foo" can select pods in
     * the namespace "bar" based on labels.
     * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
     * environment variable in istiod. If this variable is set
     * to true, the scope of label search is restricted to the configuration
     * namespace in which the the resource is present. In other words, the Gateway
     * resource must reside in the same namespace as the gateway workload
     * instance.
     * If selector is nil, the Gateway will be applied to all workloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    /* nullable */
java.lang.String getSelectorOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which this gateway configuration should be applied.
     * By default workloads are searched across all namespaces based on label selectors.
     * This implies that a gateway resource in the namespace "foo" can select pods in
     * the namespace "bar" based on labels.
     * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
     * environment variable in istiod. If this variable is set
     * to true, the scope of label search is restricted to the configuration
     * namespace in which the the resource is present. In other words, the Gateway
     * resource must reside in the same namespace as the gateway workload
     * instance.
     * If selector is nil, the Gateway will be applied to all workloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    java.lang.String getSelectorOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Gateway describes a load balancer operating at the edge of the mesh
   * receiving incoming or outgoing HTTP/TCP connections.
   * &lt;!-- crd generation tags
   * +cue-gen:Gateway:groupName:networking.istio.io
   * +cue-gen:Gateway:version:v1alpha3
   * +cue-gen:Gateway:storageVersion
   * +cue-gen:Gateway:annotations:helm.sh/resource-policy=keep
   * +cue-gen:Gateway:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
   * +cue-gen:Gateway:subresource:status
   * +cue-gen:Gateway:scope:Namespaced
   * +cue-gen:Gateway:resource:categories=istio-io,networking-istio-io,shortNames=gw
   * +cue-gen:Gateway:preserveUnknownFields:false
   * --&gt;
   * &lt;!-- go code generation tags
   * +kubetype-gen
   * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
   * +genclient
   * +k8s:deepcopy-gen=true
   * --&gt;
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.Gateway}
   */
  public static final class Gateway extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.Gateway)
      GatewayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Gateway.newBuilder() to construct.
    private Gateway(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Gateway() {
      servers_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Gateway();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Gateway_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetSelector();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Gateway_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.GatewayOuterClass.Gateway.class, istio.networking.v1alpha3.GatewayOuterClass.Gateway.Builder.class);
    }

    public static final int SERVERS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<istio.networking.v1alpha3.GatewayOuterClass.Server> servers_;
    /**
     * <pre>
     * A list of server specifications.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public java.util.List<istio.networking.v1alpha3.GatewayOuterClass.Server> getServersList() {
      return servers_;
    }
    /**
     * <pre>
     * A list of server specifications.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public java.util.List<? extends istio.networking.v1alpha3.GatewayOuterClass.ServerOrBuilder> 
        getServersOrBuilderList() {
      return servers_;
    }
    /**
     * <pre>
     * A list of server specifications.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public int getServersCount() {
      return servers_.size();
    }
    /**
     * <pre>
     * A list of server specifications.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.Server getServers(int index) {
      return servers_.get(index);
    }
    /**
     * <pre>
     * A list of server specifications.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.ServerOrBuilder getServersOrBuilder(
        int index) {
      return servers_.get(index);
    }

    public static final int SELECTOR_FIELD_NUMBER = 2;
    private static final class SelectorDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Gateway_SelectorEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> selector_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetSelector() {
      if (selector_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SelectorDefaultEntryHolder.defaultEntry);
      }
      return selector_;
    }
    public int getSelectorCount() {
      return internalGetSelector().getMap().size();
    }
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which this gateway configuration should be applied.
     * By default workloads are searched across all namespaces based on label selectors.
     * This implies that a gateway resource in the namespace "foo" can select pods in
     * the namespace "bar" based on labels.
     * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
     * environment variable in istiod. If this variable is set
     * to true, the scope of label search is restricted to the configuration
     * namespace in which the the resource is present. In other words, the Gateway
     * resource must reside in the same namespace as the gateway workload
     * instance.
     * If selector is nil, the Gateway will be applied to all workloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public boolean containsSelector(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetSelector().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSelectorMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getSelector() {
      return getSelectorMap();
    }
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which this gateway configuration should be applied.
     * By default workloads are searched across all namespaces based on label selectors.
     * This implies that a gateway resource in the namespace "foo" can select pods in
     * the namespace "bar" based on labels.
     * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
     * environment variable in istiod. If this variable is set
     * to true, the scope of label search is restricted to the configuration
     * namespace in which the the resource is present. In other words, the Gateway
     * resource must reside in the same namespace as the gateway workload
     * instance.
     * If selector is nil, the Gateway will be applied to all workloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getSelectorMap() {
      return internalGetSelector().getMap();
    }
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which this gateway configuration should be applied.
     * By default workloads are searched across all namespaces based on label selectors.
     * This implies that a gateway resource in the namespace "foo" can select pods in
     * the namespace "bar" based on labels.
     * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
     * environment variable in istiod. If this variable is set
     * to true, the scope of label search is restricted to the configuration
     * namespace in which the the resource is present. In other words, the Gateway
     * resource must reside in the same namespace as the gateway workload
     * instance.
     * If selector is nil, the Gateway will be applied to all workloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getSelectorOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetSelector().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * One or more labels that indicate a specific set of pods/VMs
     * on which this gateway configuration should be applied.
     * By default workloads are searched across all namespaces based on label selectors.
     * This implies that a gateway resource in the namespace "foo" can select pods in
     * the namespace "bar" based on labels.
     * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
     * environment variable in istiod. If this variable is set
     * to true, the scope of label search is restricted to the configuration
     * namespace in which the the resource is present. In other words, the Gateway
     * resource must reside in the same namespace as the gateway workload
     * instance.
     * If selector is nil, the Gateway will be applied to all workloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public java.lang.String getSelectorOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetSelector().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < servers_.size(); i++) {
        output.writeMessage(1, servers_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetSelector(),
          SelectorDefaultEntryHolder.defaultEntry,
          2);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < servers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, servers_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetSelector().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        selector__ = SelectorDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, selector__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.GatewayOuterClass.Gateway)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.GatewayOuterClass.Gateway other = (istio.networking.v1alpha3.GatewayOuterClass.Gateway) obj;

      if (!getServersList()
          .equals(other.getServersList())) return false;
      if (!internalGetSelector().equals(
          other.internalGetSelector())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getServersCount() > 0) {
        hash = (37 * hash) + SERVERS_FIELD_NUMBER;
        hash = (53 * hash) + getServersList().hashCode();
      }
      if (!internalGetSelector().getMap().isEmpty()) {
        hash = (37 * hash) + SELECTOR_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSelector().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.GatewayOuterClass.Gateway prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Gateway describes a load balancer operating at the edge of the mesh
     * receiving incoming or outgoing HTTP/TCP connections.
     * &lt;!-- crd generation tags
     * +cue-gen:Gateway:groupName:networking.istio.io
     * +cue-gen:Gateway:version:v1alpha3
     * +cue-gen:Gateway:storageVersion
     * +cue-gen:Gateway:annotations:helm.sh/resource-policy=keep
     * +cue-gen:Gateway:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
     * +cue-gen:Gateway:subresource:status
     * +cue-gen:Gateway:scope:Namespaced
     * +cue-gen:Gateway:resource:categories=istio-io,networking-istio-io,shortNames=gw
     * +cue-gen:Gateway:preserveUnknownFields:false
     * --&gt;
     * &lt;!-- go code generation tags
     * +kubetype-gen
     * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
     * +genclient
     * +k8s:deepcopy-gen=true
     * --&gt;
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.Gateway}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.Gateway)
        istio.networking.v1alpha3.GatewayOuterClass.GatewayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Gateway_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetSelector();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableSelector();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Gateway_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.GatewayOuterClass.Gateway.class, istio.networking.v1alpha3.GatewayOuterClass.Gateway.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.GatewayOuterClass.Gateway.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (serversBuilder_ == null) {
          servers_ = java.util.Collections.emptyList();
        } else {
          servers_ = null;
          serversBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableSelector().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Gateway_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.Gateway getDefaultInstanceForType() {
        return istio.networking.v1alpha3.GatewayOuterClass.Gateway.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.Gateway build() {
        istio.networking.v1alpha3.GatewayOuterClass.Gateway result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.Gateway buildPartial() {
        istio.networking.v1alpha3.GatewayOuterClass.Gateway result = new istio.networking.v1alpha3.GatewayOuterClass.Gateway(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(istio.networking.v1alpha3.GatewayOuterClass.Gateway result) {
        if (serversBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            servers_ = java.util.Collections.unmodifiableList(servers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.servers_ = servers_;
        } else {
          result.servers_ = serversBuilder_.build();
        }
      }

      private void buildPartial0(istio.networking.v1alpha3.GatewayOuterClass.Gateway result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.selector_ = internalGetSelector();
          result.selector_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.GatewayOuterClass.Gateway) {
          return mergeFrom((istio.networking.v1alpha3.GatewayOuterClass.Gateway)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.GatewayOuterClass.Gateway other) {
        if (other == istio.networking.v1alpha3.GatewayOuterClass.Gateway.getDefaultInstance()) return this;
        if (serversBuilder_ == null) {
          if (!other.servers_.isEmpty()) {
            if (servers_.isEmpty()) {
              servers_ = other.servers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureServersIsMutable();
              servers_.addAll(other.servers_);
            }
            onChanged();
          }
        } else {
          if (!other.servers_.isEmpty()) {
            if (serversBuilder_.isEmpty()) {
              serversBuilder_.dispose();
              serversBuilder_ = null;
              servers_ = other.servers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              serversBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getServersFieldBuilder() : null;
            } else {
              serversBuilder_.addAllMessages(other.servers_);
            }
          }
        }
        internalGetMutableSelector().mergeFrom(
            other.internalGetSelector());
        bitField0_ |= 0x00000002;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                istio.networking.v1alpha3.GatewayOuterClass.Server m =
                    input.readMessage(
                        istio.networking.v1alpha3.GatewayOuterClass.Server.parser(),
                        extensionRegistry);
                if (serversBuilder_ == null) {
                  ensureServersIsMutable();
                  servers_.add(m);
                } else {
                  serversBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                selector__ = input.readMessage(
                    SelectorDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableSelector().getMutableMap().put(
                    selector__.getKey(), selector__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<istio.networking.v1alpha3.GatewayOuterClass.Server> servers_ =
        java.util.Collections.emptyList();
      private void ensureServersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          servers_ = new java.util.ArrayList<istio.networking.v1alpha3.GatewayOuterClass.Server>(servers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.GatewayOuterClass.Server, istio.networking.v1alpha3.GatewayOuterClass.Server.Builder, istio.networking.v1alpha3.GatewayOuterClass.ServerOrBuilder> serversBuilder_;

      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public java.util.List<istio.networking.v1alpha3.GatewayOuterClass.Server> getServersList() {
        if (serversBuilder_ == null) {
          return java.util.Collections.unmodifiableList(servers_);
        } else {
          return serversBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public int getServersCount() {
        if (serversBuilder_ == null) {
          return servers_.size();
        } else {
          return serversBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.Server getServers(int index) {
        if (serversBuilder_ == null) {
          return servers_.get(index);
        } else {
          return serversBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setServers(
          int index, istio.networking.v1alpha3.GatewayOuterClass.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.set(index, value);
          onChanged();
        } else {
          serversBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setServers(
          int index, istio.networking.v1alpha3.GatewayOuterClass.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.set(index, builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder addServers(istio.networking.v1alpha3.GatewayOuterClass.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.add(value);
          onChanged();
        } else {
          serversBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder addServers(
          int index, istio.networking.v1alpha3.GatewayOuterClass.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.add(index, value);
          onChanged();
        } else {
          serversBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder addServers(
          istio.networking.v1alpha3.GatewayOuterClass.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.add(builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder addServers(
          int index, istio.networking.v1alpha3.GatewayOuterClass.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.add(index, builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder addAllServers(
          java.lang.Iterable<? extends istio.networking.v1alpha3.GatewayOuterClass.Server> values) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, servers_);
          onChanged();
        } else {
          serversBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearServers() {
        if (serversBuilder_ == null) {
          servers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          serversBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder removeServers(int index) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.remove(index);
          onChanged();
        } else {
          serversBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.Server.Builder getServersBuilder(
          int index) {
        return getServersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.ServerOrBuilder getServersOrBuilder(
          int index) {
        if (serversBuilder_ == null) {
          return servers_.get(index);  } else {
          return serversBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public java.util.List<? extends istio.networking.v1alpha3.GatewayOuterClass.ServerOrBuilder> 
           getServersOrBuilderList() {
        if (serversBuilder_ != null) {
          return serversBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(servers_);
        }
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.Server.Builder addServersBuilder() {
        return getServersFieldBuilder().addBuilder(
            istio.networking.v1alpha3.GatewayOuterClass.Server.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.Server.Builder addServersBuilder(
          int index) {
        return getServersFieldBuilder().addBuilder(
            index, istio.networking.v1alpha3.GatewayOuterClass.Server.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of server specifications.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Server servers = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public java.util.List<istio.networking.v1alpha3.GatewayOuterClass.Server.Builder> 
           getServersBuilderList() {
        return getServersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.GatewayOuterClass.Server, istio.networking.v1alpha3.GatewayOuterClass.Server.Builder, istio.networking.v1alpha3.GatewayOuterClass.ServerOrBuilder> 
          getServersFieldBuilder() {
        if (serversBuilder_ == null) {
          serversBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              istio.networking.v1alpha3.GatewayOuterClass.Server, istio.networking.v1alpha3.GatewayOuterClass.Server.Builder, istio.networking.v1alpha3.GatewayOuterClass.ServerOrBuilder>(
                  servers_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          servers_ = null;
        }
        return serversBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> selector_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetSelector() {
        if (selector_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SelectorDefaultEntryHolder.defaultEntry);
        }
        return selector_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableSelector() {
        if (selector_ == null) {
          selector_ = com.google.protobuf.MapField.newMapField(
              SelectorDefaultEntryHolder.defaultEntry);
        }
        if (!selector_.isMutable()) {
          selector_ = selector_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return selector_;
      }
      public int getSelectorCount() {
        return internalGetSelector().getMap().size();
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which this gateway configuration should be applied.
       * By default workloads are searched across all namespaces based on label selectors.
       * This implies that a gateway resource in the namespace "foo" can select pods in
       * the namespace "bar" based on labels.
       * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
       * environment variable in istiod. If this variable is set
       * to true, the scope of label search is restricted to the configuration
       * namespace in which the the resource is present. In other words, the Gateway
       * resource must reside in the same namespace as the gateway workload
       * instance.
       * If selector is nil, the Gateway will be applied to all workloads.
       * </pre>
       *
       * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      @java.lang.Override
      public boolean containsSelector(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetSelector().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSelectorMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getSelector() {
        return getSelectorMap();
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which this gateway configuration should be applied.
       * By default workloads are searched across all namespaces based on label selectors.
       * This implies that a gateway resource in the namespace "foo" can select pods in
       * the namespace "bar" based on labels.
       * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
       * environment variable in istiod. If this variable is set
       * to true, the scope of label search is restricted to the configuration
       * namespace in which the the resource is present. In other words, the Gateway
       * resource must reside in the same namespace as the gateway workload
       * instance.
       * If selector is nil, the Gateway will be applied to all workloads.
       * </pre>
       *
       * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getSelectorMap() {
        return internalGetSelector().getMap();
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which this gateway configuration should be applied.
       * By default workloads are searched across all namespaces based on label selectors.
       * This implies that a gateway resource in the namespace "foo" can select pods in
       * the namespace "bar" based on labels.
       * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
       * environment variable in istiod. If this variable is set
       * to true, the scope of label search is restricted to the configuration
       * namespace in which the the resource is present. In other words, the Gateway
       * resource must reside in the same namespace as the gateway workload
       * instance.
       * If selector is nil, the Gateway will be applied to all workloads.
       * </pre>
       *
       * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getSelectorOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetSelector().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which this gateway configuration should be applied.
       * By default workloads are searched across all namespaces based on label selectors.
       * This implies that a gateway resource in the namespace "foo" can select pods in
       * the namespace "bar" based on labels.
       * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
       * environment variable in istiod. If this variable is set
       * to true, the scope of label search is restricted to the configuration
       * namespace in which the the resource is present. In other words, the Gateway
       * resource must reside in the same namespace as the gateway workload
       * instance.
       * If selector is nil, the Gateway will be applied to all workloads.
       * </pre>
       *
       * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      @java.lang.Override
      public java.lang.String getSelectorOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetSelector().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearSelector() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableSelector().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which this gateway configuration should be applied.
       * By default workloads are searched across all namespaces based on label selectors.
       * This implies that a gateway resource in the namespace "foo" can select pods in
       * the namespace "bar" based on labels.
       * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
       * environment variable in istiod. If this variable is set
       * to true, the scope of label search is restricted to the configuration
       * namespace in which the the resource is present. In other words, the Gateway
       * resource must reside in the same namespace as the gateway workload
       * instance.
       * If selector is nil, the Gateway will be applied to all workloads.
       * </pre>
       *
       * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder removeSelector(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableSelector().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableSelector() {
        bitField0_ |= 0x00000002;
        return internalGetMutableSelector().getMutableMap();
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which this gateway configuration should be applied.
       * By default workloads are searched across all namespaces based on label selectors.
       * This implies that a gateway resource in the namespace "foo" can select pods in
       * the namespace "bar" based on labels.
       * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
       * environment variable in istiod. If this variable is set
       * to true, the scope of label search is restricted to the configuration
       * namespace in which the the resource is present. In other words, the Gateway
       * resource must reside in the same namespace as the gateway workload
       * instance.
       * If selector is nil, the Gateway will be applied to all workloads.
       * </pre>
       *
       * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder putSelector(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableSelector().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * One or more labels that indicate a specific set of pods/VMs
       * on which this gateway configuration should be applied.
       * By default workloads are searched across all namespaces based on label selectors.
       * This implies that a gateway resource in the namespace "foo" can select pods in
       * the namespace "bar" based on labels.
       * This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE`
       * environment variable in istiod. If this variable is set
       * to true, the scope of label search is restricted to the configuration
       * namespace in which the the resource is present. In other words, the Gateway
       * resource must reside in the same namespace as the gateway workload
       * instance.
       * If selector is nil, the Gateway will be applied to all workloads.
       * </pre>
       *
       * <code>map&lt;string, string&gt; selector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder putAllSelector(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableSelector().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.Gateway)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Gateway)
    private static final istio.networking.v1alpha3.GatewayOuterClass.Gateway DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.GatewayOuterClass.Gateway();
    }

    public static istio.networking.v1alpha3.GatewayOuterClass.Gateway getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Gateway>
        PARSER = new com.google.protobuf.AbstractParser<Gateway>() {
      @java.lang.Override
      public Gateway parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Gateway> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Gateway> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.Gateway getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.Server)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The Port on which the proxy should listen for incoming
     * connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the port field is set.
     */
    boolean hasPort();
    /**
     * <pre>
     * The Port on which the proxy should listen for incoming
     * connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The port.
     */
    istio.networking.v1alpha3.GatewayOuterClass.Port getPort();
    /**
     * <pre>
     * The Port on which the proxy should listen for incoming
     * connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder getPortOrBuilder();

    /**
     * <pre>
     * $hide_from_docs
     * The ip or the Unix domain socket to which the listener should be bound
     * to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://&#64;foobar`
     * (Linux abstract namespace). When using Unix domain sockets, the port
     * number should be 0.
     * </pre>
     *
     * <code>string bind = 4;</code>
     * @return The bind.
     */
    java.lang.String getBind();
    /**
     * <pre>
     * $hide_from_docs
     * The ip or the Unix domain socket to which the listener should be bound
     * to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://&#64;foobar`
     * (Linux abstract namespace). When using Unix domain sockets, the port
     * number should be 0.
     * </pre>
     *
     * <code>string bind = 4;</code>
     * @return The bytes for bind.
     */
    com.google.protobuf.ByteString
        getBindBytes();

    /**
     * <pre>
     * One or more hosts exposed by this gateway.
     * While typically applicable to
     * HTTP services, it can also be used for TCP services using TLS with SNI.
     * A host is specified as a `dnsName` with an optional `namespace/` prefix.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
     * specified namespace (e.g.,`prod/&#42;`).
     * The `namespace` can be set to `*` or `.`, representing any or the current
     * namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. The default, if no `namespace/`
     * is specified, is `*&#47;`, that is, select services from any namespace.
     * Any associated `DestinationRule` in the selected namespace will also be used.
     * A `VirtualService` must be bound to the gateway and must have one or
     * more hosts that match the hosts specified in a server. The match
     * could be an exact match or a suffix match with the server's hosts. For
     * example, if the server's hosts specifies `*.example.com`, a
     * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
     * match. However, a `VirtualService` with host `example.com` or
     * `newexample.com` will not match.
     * NOTE: Only virtual services exported to the gateway's namespace
     * (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will not be
     * available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * </pre>
     *
     * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return A list containing the hosts.
     */
    java.util.List<java.lang.String>
        getHostsList();
    /**
     * <pre>
     * One or more hosts exposed by this gateway.
     * While typically applicable to
     * HTTP services, it can also be used for TCP services using TLS with SNI.
     * A host is specified as a `dnsName` with an optional `namespace/` prefix.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
     * specified namespace (e.g.,`prod/&#42;`).
     * The `namespace` can be set to `*` or `.`, representing any or the current
     * namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. The default, if no `namespace/`
     * is specified, is `*&#47;`, that is, select services from any namespace.
     * Any associated `DestinationRule` in the selected namespace will also be used.
     * A `VirtualService` must be bound to the gateway and must have one or
     * more hosts that match the hosts specified in a server. The match
     * could be an exact match or a suffix match with the server's hosts. For
     * example, if the server's hosts specifies `*.example.com`, a
     * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
     * match. However, a `VirtualService` with host `example.com` or
     * `newexample.com` will not match.
     * NOTE: Only virtual services exported to the gateway's namespace
     * (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will not be
     * available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * </pre>
     *
     * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The count of hosts.
     */
    int getHostsCount();
    /**
     * <pre>
     * One or more hosts exposed by this gateway.
     * While typically applicable to
     * HTTP services, it can also be used for TCP services using TLS with SNI.
     * A host is specified as a `dnsName` with an optional `namespace/` prefix.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
     * specified namespace (e.g.,`prod/&#42;`).
     * The `namespace` can be set to `*` or `.`, representing any or the current
     * namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. The default, if no `namespace/`
     * is specified, is `*&#47;`, that is, select services from any namespace.
     * Any associated `DestinationRule` in the selected namespace will also be used.
     * A `VirtualService` must be bound to the gateway and must have one or
     * more hosts that match the hosts specified in a server. The match
     * could be an exact match or a suffix match with the server's hosts. For
     * example, if the server's hosts specifies `*.example.com`, a
     * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
     * match. However, a `VirtualService` with host `example.com` or
     * `newexample.com` will not match.
     * NOTE: Only virtual services exported to the gateway's namespace
     * (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will not be
     * available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * </pre>
     *
     * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the element to return.
     * @return The hosts at the given index.
     */
    java.lang.String getHosts(int index);
    /**
     * <pre>
     * One or more hosts exposed by this gateway.
     * While typically applicable to
     * HTTP services, it can also be used for TCP services using TLS with SNI.
     * A host is specified as a `dnsName` with an optional `namespace/` prefix.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
     * specified namespace (e.g.,`prod/&#42;`).
     * The `namespace` can be set to `*` or `.`, representing any or the current
     * namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. The default, if no `namespace/`
     * is specified, is `*&#47;`, that is, select services from any namespace.
     * Any associated `DestinationRule` in the selected namespace will also be used.
     * A `VirtualService` must be bound to the gateway and must have one or
     * more hosts that match the hosts specified in a server. The match
     * could be an exact match or a suffix match with the server's hosts. For
     * example, if the server's hosts specifies `*.example.com`, a
     * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
     * match. However, a `VirtualService` with host `example.com` or
     * `newexample.com` will not match.
     * NOTE: Only virtual services exported to the gateway's namespace
     * (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will not be
     * available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * </pre>
     *
     * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the value to return.
     * @return The bytes of the hosts at the given index.
     */
    com.google.protobuf.ByteString
        getHostsBytes(int index);

    /**
     * <pre>
     * Set of TLS related options that govern the server's behavior. Use
     * these options to control if all http requests should be redirected to
     * https, and the TLS modes to use.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
     * @return Whether the tls field is set.
     */
    boolean hasTls();
    /**
     * <pre>
     * Set of TLS related options that govern the server's behavior. Use
     * these options to control if all http requests should be redirected to
     * https, and the TLS modes to use.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
     * @return The tls.
     */
    istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings getTls();
    /**
     * <pre>
     * Set of TLS related options that govern the server's behavior. Use
     * these options to control if all http requests should be redirected to
     * https, and the TLS modes to use.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
     */
    istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettingsOrBuilder getTlsOrBuilder();

    /**
     * <pre>
     * The loopback IP endpoint or Unix domain socket to which traffic should
     * be forwarded to by default. Format should be `127.0.0.1:PORT` or
     * `unix:///path/to/socket` or `unix://&#64;foobar` (Linux abstract namespace).
     * NOT IMPLEMENTED.
     * $hide_from_docs
     * </pre>
     *
     * <code>string default_endpoint = 5;</code>
     * @return The defaultEndpoint.
     */
    java.lang.String getDefaultEndpoint();
    /**
     * <pre>
     * The loopback IP endpoint or Unix domain socket to which traffic should
     * be forwarded to by default. Format should be `127.0.0.1:PORT` or
     * `unix:///path/to/socket` or `unix://&#64;foobar` (Linux abstract namespace).
     * NOT IMPLEMENTED.
     * $hide_from_docs
     * </pre>
     *
     * <code>string default_endpoint = 5;</code>
     * @return The bytes for defaultEndpoint.
     */
    com.google.protobuf.ByteString
        getDefaultEndpointBytes();

    /**
     * <pre>
     * An optional name of the server, when set must be unique across all servers.
     * This will be used for variety of purposes like prefixing stats generated with
     * this name etc.
     * </pre>
     *
     * <code>string name = 6;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * An optional name of the server, when set must be unique across all servers.
     * This will be used for variety of purposes like prefixing stats generated with
     * this name etc.
     * </pre>
     *
     * <code>string name = 6;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * <pre>
   * `Server` describes the properties of the proxy on a given load balancer
   * port. For example,
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: Gateway
   * metadata:
   *   name: my-ingress
   * spec:
   *   selector:
   *     app: my-ingressgateway
   *   servers:
   *   - port:
   *       number: 80
   *       name: http2
   *       protocol: HTTP2
   *     hosts:
   *     - "*"
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: Gateway
   * metadata:
   *   name: my-ingress
   * spec:
   *   selector:
   *     app: my-ingressgateway
   *   servers:
   *   - port:
   *       number: 80
   *       name: http2
   *       protocol: HTTP2
   *     hosts:
   *     - "*"
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * Another example
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: Gateway
   * metadata:
   *   name: my-tcp-ingress
   * spec:
   *   selector:
   *     app: my-tcp-ingressgateway
   *   servers:
   *   - port:
   *       number: 27018
   *       name: mongo
   *       protocol: MONGO
   *     hosts:
   *     - "*"
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: Gateway
   * metadata:
   *   name: my-tcp-ingress
   * spec:
   *   selector:
   *     app: my-tcp-ingressgateway
   *   servers:
   *   - port:
   *       number: 27018
   *       name: mongo
   *       protocol: MONGO
   *     hosts:
   *     - "*"
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * The following is an example of TLS configuration for port 443
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: Gateway
   * metadata:
   *   name: my-tls-ingress
   * spec:
   *   selector:
   *     app: my-tls-ingressgateway
   *   servers:
   *   - port:
   *       number: 443
   *       name: https
   *       protocol: HTTPS
   *     hosts:
   *     - "*"
   *     tls:
   *       mode: SIMPLE
   *       serverCertificate: /etc/certs/server.pem
   *       privateKey: /etc/certs/privatekey.pem
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: Gateway
   * metadata:
   *   name: my-tls-ingress
   * spec:
   *   selector:
   *     app: my-tls-ingressgateway
   *   servers:
   *   - port:
   *       number: 443
   *       name: https
   *       protocol: HTTPS
   *     hosts:
   *     - "*"
   *     tls:
   *       mode: SIMPLE
   *       serverCertificate: /etc/certs/server.pem
   *       privateKey: /etc/certs/privatekey.pem
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.Server}
   */
  public static final class Server extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.Server)
      ServerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Server.newBuilder() to construct.
    private Server(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Server() {
      bind_ = "";
      hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      defaultEndpoint_ = "";
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Server();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Server_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Server_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.GatewayOuterClass.Server.class, istio.networking.v1alpha3.GatewayOuterClass.Server.Builder.class);
    }

    public static final int PORT_FIELD_NUMBER = 1;
    private istio.networking.v1alpha3.GatewayOuterClass.Port port_;
    /**
     * <pre>
     * The Port on which the proxy should listen for incoming
     * connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the port field is set.
     */
    @java.lang.Override
    public boolean hasPort() {
      return port_ != null;
    }
    /**
     * <pre>
     * The Port on which the proxy should listen for incoming
     * connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The port.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.Port getPort() {
      return port_ == null ? istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
    }
    /**
     * <pre>
     * The Port on which the proxy should listen for incoming
     * connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder getPortOrBuilder() {
      return port_ == null ? istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
    }

    public static final int BIND_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object bind_ = "";
    /**
     * <pre>
     * $hide_from_docs
     * The ip or the Unix domain socket to which the listener should be bound
     * to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://&#64;foobar`
     * (Linux abstract namespace). When using Unix domain sockets, the port
     * number should be 0.
     * </pre>
     *
     * <code>string bind = 4;</code>
     * @return The bind.
     */
    @java.lang.Override
    public java.lang.String getBind() {
      java.lang.Object ref = bind_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bind_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * $hide_from_docs
     * The ip or the Unix domain socket to which the listener should be bound
     * to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://&#64;foobar`
     * (Linux abstract namespace). When using Unix domain sockets, the port
     * number should be 0.
     * </pre>
     *
     * <code>string bind = 4;</code>
     * @return The bytes for bind.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBindBytes() {
      java.lang.Object ref = bind_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOSTS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList hosts_;
    /**
     * <pre>
     * One or more hosts exposed by this gateway.
     * While typically applicable to
     * HTTP services, it can also be used for TCP services using TLS with SNI.
     * A host is specified as a `dnsName` with an optional `namespace/` prefix.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
     * specified namespace (e.g.,`prod/&#42;`).
     * The `namespace` can be set to `*` or `.`, representing any or the current
     * namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. The default, if no `namespace/`
     * is specified, is `*&#47;`, that is, select services from any namespace.
     * Any associated `DestinationRule` in the selected namespace will also be used.
     * A `VirtualService` must be bound to the gateway and must have one or
     * more hosts that match the hosts specified in a server. The match
     * could be an exact match or a suffix match with the server's hosts. For
     * example, if the server's hosts specifies `*.example.com`, a
     * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
     * match. However, a `VirtualService` with host `example.com` or
     * `newexample.com` will not match.
     * NOTE: Only virtual services exported to the gateway's namespace
     * (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will not be
     * available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * </pre>
     *
     * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return A list containing the hosts.
     */
    public com.google.protobuf.ProtocolStringList
        getHostsList() {
      return hosts_;
    }
    /**
     * <pre>
     * One or more hosts exposed by this gateway.
     * While typically applicable to
     * HTTP services, it can also be used for TCP services using TLS with SNI.
     * A host is specified as a `dnsName` with an optional `namespace/` prefix.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
     * specified namespace (e.g.,`prod/&#42;`).
     * The `namespace` can be set to `*` or `.`, representing any or the current
     * namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. The default, if no `namespace/`
     * is specified, is `*&#47;`, that is, select services from any namespace.
     * Any associated `DestinationRule` in the selected namespace will also be used.
     * A `VirtualService` must be bound to the gateway and must have one or
     * more hosts that match the hosts specified in a server. The match
     * could be an exact match or a suffix match with the server's hosts. For
     * example, if the server's hosts specifies `*.example.com`, a
     * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
     * match. However, a `VirtualService` with host `example.com` or
     * `newexample.com` will not match.
     * NOTE: Only virtual services exported to the gateway's namespace
     * (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will not be
     * available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * </pre>
     *
     * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The count of hosts.
     */
    public int getHostsCount() {
      return hosts_.size();
    }
    /**
     * <pre>
     * One or more hosts exposed by this gateway.
     * While typically applicable to
     * HTTP services, it can also be used for TCP services using TLS with SNI.
     * A host is specified as a `dnsName` with an optional `namespace/` prefix.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
     * specified namespace (e.g.,`prod/&#42;`).
     * The `namespace` can be set to `*` or `.`, representing any or the current
     * namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. The default, if no `namespace/`
     * is specified, is `*&#47;`, that is, select services from any namespace.
     * Any associated `DestinationRule` in the selected namespace will also be used.
     * A `VirtualService` must be bound to the gateway and must have one or
     * more hosts that match the hosts specified in a server. The match
     * could be an exact match or a suffix match with the server's hosts. For
     * example, if the server's hosts specifies `*.example.com`, a
     * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
     * match. However, a `VirtualService` with host `example.com` or
     * `newexample.com` will not match.
     * NOTE: Only virtual services exported to the gateway's namespace
     * (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will not be
     * available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * </pre>
     *
     * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the element to return.
     * @return The hosts at the given index.
     */
    public java.lang.String getHosts(int index) {
      return hosts_.get(index);
    }
    /**
     * <pre>
     * One or more hosts exposed by this gateway.
     * While typically applicable to
     * HTTP services, it can also be used for TCP services using TLS with SNI.
     * A host is specified as a `dnsName` with an optional `namespace/` prefix.
     * The `dnsName` should be specified using FQDN format, optionally including
     * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
     * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
     * specified namespace (e.g.,`prod/&#42;`).
     * The `namespace` can be set to `*` or `.`, representing any or the current
     * namespace, respectively. For example, `*&#47;foo.example.com` selects the
     * service from any available namespace while `./foo.example.com` only selects
     * the service from the namespace of the sidecar. The default, if no `namespace/`
     * is specified, is `*&#47;`, that is, select services from any namespace.
     * Any associated `DestinationRule` in the selected namespace will also be used.
     * A `VirtualService` must be bound to the gateway and must have one or
     * more hosts that match the hosts specified in a server. The match
     * could be an exact match or a suffix match with the server's hosts. For
     * example, if the server's hosts specifies `*.example.com`, a
     * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
     * match. However, a `VirtualService` with host `example.com` or
     * `newexample.com` will not match.
     * NOTE: Only virtual services exported to the gateway's namespace
     * (e.g., `exportTo` value of `*`) can be referenced.
     * Private configurations (e.g., `exportTo` set to `.`) will not be
     * available. Refer to the `exportTo` setting in `VirtualService`,
     * `DestinationRule`, and `ServiceEntry` configurations for details.
     * </pre>
     *
     * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the value to return.
     * @return The bytes of the hosts at the given index.
     */
    public com.google.protobuf.ByteString
        getHostsBytes(int index) {
      return hosts_.getByteString(index);
    }

    public static final int TLS_FIELD_NUMBER = 3;
    private istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings tls_;
    /**
     * <pre>
     * Set of TLS related options that govern the server's behavior. Use
     * these options to control if all http requests should be redirected to
     * https, and the TLS modes to use.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
     * @return Whether the tls field is set.
     */
    @java.lang.Override
    public boolean hasTls() {
      return tls_ != null;
    }
    /**
     * <pre>
     * Set of TLS related options that govern the server's behavior. Use
     * these options to control if all http requests should be redirected to
     * https, and the TLS modes to use.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
     * @return The tls.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings getTls() {
      return tls_ == null ? istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.getDefaultInstance() : tls_;
    }
    /**
     * <pre>
     * Set of TLS related options that govern the server's behavior. Use
     * these options to control if all http requests should be redirected to
     * https, and the TLS modes to use.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettingsOrBuilder getTlsOrBuilder() {
      return tls_ == null ? istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.getDefaultInstance() : tls_;
    }

    public static final int DEFAULT_ENDPOINT_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object defaultEndpoint_ = "";
    /**
     * <pre>
     * The loopback IP endpoint or Unix domain socket to which traffic should
     * be forwarded to by default. Format should be `127.0.0.1:PORT` or
     * `unix:///path/to/socket` or `unix://&#64;foobar` (Linux abstract namespace).
     * NOT IMPLEMENTED.
     * $hide_from_docs
     * </pre>
     *
     * <code>string default_endpoint = 5;</code>
     * @return The defaultEndpoint.
     */
    @java.lang.Override
    public java.lang.String getDefaultEndpoint() {
      java.lang.Object ref = defaultEndpoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        defaultEndpoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The loopback IP endpoint or Unix domain socket to which traffic should
     * be forwarded to by default. Format should be `127.0.0.1:PORT` or
     * `unix:///path/to/socket` or `unix://&#64;foobar` (Linux abstract namespace).
     * NOT IMPLEMENTED.
     * $hide_from_docs
     * </pre>
     *
     * <code>string default_endpoint = 5;</code>
     * @return The bytes for defaultEndpoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDefaultEndpointBytes() {
      java.lang.Object ref = defaultEndpoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defaultEndpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * An optional name of the server, when set must be unique across all servers.
     * This will be used for variety of purposes like prefixing stats generated with
     * this name etc.
     * </pre>
     *
     * <code>string name = 6;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * An optional name of the server, when set must be unique across all servers.
     * This will be used for variety of purposes like prefixing stats generated with
     * this name etc.
     * </pre>
     *
     * <code>string name = 6;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (port_ != null) {
        output.writeMessage(1, getPort());
      }
      for (int i = 0; i < hosts_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, hosts_.getRaw(i));
      }
      if (tls_ != null) {
        output.writeMessage(3, getTls());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bind_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, bind_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultEndpoint_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, defaultEndpoint_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, name_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (port_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPort());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hosts_.size(); i++) {
          dataSize += computeStringSizeNoTag(hosts_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getHostsList().size();
      }
      if (tls_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTls());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bind_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, bind_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultEndpoint_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, defaultEndpoint_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, name_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.GatewayOuterClass.Server)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.GatewayOuterClass.Server other = (istio.networking.v1alpha3.GatewayOuterClass.Server) obj;

      if (hasPort() != other.hasPort()) return false;
      if (hasPort()) {
        if (!getPort()
            .equals(other.getPort())) return false;
      }
      if (!getBind()
          .equals(other.getBind())) return false;
      if (!getHostsList()
          .equals(other.getHostsList())) return false;
      if (hasTls() != other.hasTls()) return false;
      if (hasTls()) {
        if (!getTls()
            .equals(other.getTls())) return false;
      }
      if (!getDefaultEndpoint()
          .equals(other.getDefaultEndpoint())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort().hashCode();
      }
      hash = (37 * hash) + BIND_FIELD_NUMBER;
      hash = (53 * hash) + getBind().hashCode();
      if (getHostsCount() > 0) {
        hash = (37 * hash) + HOSTS_FIELD_NUMBER;
        hash = (53 * hash) + getHostsList().hashCode();
      }
      if (hasTls()) {
        hash = (37 * hash) + TLS_FIELD_NUMBER;
        hash = (53 * hash) + getTls().hashCode();
      }
      hash = (37 * hash) + DEFAULT_ENDPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultEndpoint().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Server parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.GatewayOuterClass.Server prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * `Server` describes the properties of the proxy on a given load balancer
     * port. For example,
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1alpha3
     * kind: Gateway
     * metadata:
     *   name: my-ingress
     * spec:
     *   selector:
     *     app: my-ingressgateway
     *   servers:
     *   - port:
     *       number: 80
     *       name: http2
     *       protocol: HTTP2
     *     hosts:
     *     - "*"
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1beta1
     * kind: Gateway
     * metadata:
     *   name: my-ingress
     * spec:
     *   selector:
     *     app: my-ingressgateway
     *   servers:
     *   - port:
     *       number: 80
     *       name: http2
     *       protocol: HTTP2
     *     hosts:
     *     - "*"
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * Another example
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1alpha3
     * kind: Gateway
     * metadata:
     *   name: my-tcp-ingress
     * spec:
     *   selector:
     *     app: my-tcp-ingressgateway
     *   servers:
     *   - port:
     *       number: 27018
     *       name: mongo
     *       protocol: MONGO
     *     hosts:
     *     - "*"
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1beta1
     * kind: Gateway
     * metadata:
     *   name: my-tcp-ingress
     * spec:
     *   selector:
     *     app: my-tcp-ingressgateway
     *   servers:
     *   - port:
     *       number: 27018
     *       name: mongo
     *       protocol: MONGO
     *     hosts:
     *     - "*"
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * The following is an example of TLS configuration for port 443
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1alpha3
     * kind: Gateway
     * metadata:
     *   name: my-tls-ingress
     * spec:
     *   selector:
     *     app: my-tls-ingressgateway
     *   servers:
     *   - port:
     *       number: 443
     *       name: https
     *       protocol: HTTPS
     *     hosts:
     *     - "*"
     *     tls:
     *       mode: SIMPLE
     *       serverCertificate: /etc/certs/server.pem
     *       privateKey: /etc/certs/privatekey.pem
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1beta1
     * kind: Gateway
     * metadata:
     *   name: my-tls-ingress
     * spec:
     *   selector:
     *     app: my-tls-ingressgateway
     *   servers:
     *   - port:
     *       number: 443
     *       name: https
     *       protocol: HTTPS
     *     hosts:
     *     - "*"
     *     tls:
     *       mode: SIMPLE
     *       serverCertificate: /etc/certs/server.pem
     *       privateKey: /etc/certs/privatekey.pem
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.Server}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.Server)
        istio.networking.v1alpha3.GatewayOuterClass.ServerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Server_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Server_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.GatewayOuterClass.Server.class, istio.networking.v1alpha3.GatewayOuterClass.Server.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.GatewayOuterClass.Server.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        port_ = null;
        if (portBuilder_ != null) {
          portBuilder_.dispose();
          portBuilder_ = null;
        }
        bind_ = "";
        hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        tls_ = null;
        if (tlsBuilder_ != null) {
          tlsBuilder_.dispose();
          tlsBuilder_ = null;
        }
        defaultEndpoint_ = "";
        name_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Server_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.Server getDefaultInstanceForType() {
        return istio.networking.v1alpha3.GatewayOuterClass.Server.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.Server build() {
        istio.networking.v1alpha3.GatewayOuterClass.Server result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.Server buildPartial() {
        istio.networking.v1alpha3.GatewayOuterClass.Server result = new istio.networking.v1alpha3.GatewayOuterClass.Server(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(istio.networking.v1alpha3.GatewayOuterClass.Server result) {
        if (((bitField0_ & 0x00000004) != 0)) {
          hosts_ = hosts_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.hosts_ = hosts_;
      }

      private void buildPartial0(istio.networking.v1alpha3.GatewayOuterClass.Server result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.port_ = portBuilder_ == null
              ? port_
              : portBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.bind_ = bind_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.tls_ = tlsBuilder_ == null
              ? tls_
              : tlsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.defaultEndpoint_ = defaultEndpoint_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.name_ = name_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.GatewayOuterClass.Server) {
          return mergeFrom((istio.networking.v1alpha3.GatewayOuterClass.Server)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.GatewayOuterClass.Server other) {
        if (other == istio.networking.v1alpha3.GatewayOuterClass.Server.getDefaultInstance()) return this;
        if (other.hasPort()) {
          mergePort(other.getPort());
        }
        if (!other.getBind().isEmpty()) {
          bind_ = other.bind_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.hosts_.isEmpty()) {
          if (hosts_.isEmpty()) {
            hosts_ = other.hosts_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureHostsIsMutable();
            hosts_.addAll(other.hosts_);
          }
          onChanged();
        }
        if (other.hasTls()) {
          mergeTls(other.getTls());
        }
        if (!other.getDefaultEndpoint().isEmpty()) {
          defaultEndpoint_ = other.defaultEndpoint_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPortFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureHostsIsMutable();
                hosts_.add(s);
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getTlsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 26
              case 34: {
                bind_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 34
              case 42: {
                defaultEndpoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private istio.networking.v1alpha3.GatewayOuterClass.Port port_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.GatewayOuterClass.Port, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder, istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder> portBuilder_;
      /**
       * <pre>
       * The Port on which the proxy should listen for incoming
       * connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return Whether the port field is set.
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The Port on which the proxy should listen for incoming
       * connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The port.
       */
      public istio.networking.v1alpha3.GatewayOuterClass.Port getPort() {
        if (portBuilder_ == null) {
          return port_ == null ? istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
        } else {
          return portBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The Port on which the proxy should listen for incoming
       * connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setPort(istio.networking.v1alpha3.GatewayOuterClass.Port value) {
        if (portBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          port_ = value;
        } else {
          portBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Port on which the proxy should listen for incoming
       * connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setPort(
          istio.networking.v1alpha3.GatewayOuterClass.Port.Builder builderForValue) {
        if (portBuilder_ == null) {
          port_ = builderForValue.build();
        } else {
          portBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Port on which the proxy should listen for incoming
       * connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder mergePort(istio.networking.v1alpha3.GatewayOuterClass.Port value) {
        if (portBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            port_ != null &&
            port_ != istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance()) {
            getPortBuilder().mergeFrom(value);
          } else {
            port_ = value;
          }
        } else {
          portBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Port on which the proxy should listen for incoming
       * connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = null;
        if (portBuilder_ != null) {
          portBuilder_.dispose();
          portBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Port on which the proxy should listen for incoming
       * connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.Port.Builder getPortBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPortFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The Port on which the proxy should listen for incoming
       * connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder getPortOrBuilder() {
        if (portBuilder_ != null) {
          return portBuilder_.getMessageOrBuilder();
        } else {
          return port_ == null ?
              istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance() : port_;
        }
      }
      /**
       * <pre>
       * The Port on which the proxy should listen for incoming
       * connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.Port port = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.GatewayOuterClass.Port, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder, istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder> 
          getPortFieldBuilder() {
        if (portBuilder_ == null) {
          portBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.GatewayOuterClass.Port, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder, istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder>(
                  getPort(),
                  getParentForChildren(),
                  isClean());
          port_ = null;
        }
        return portBuilder_;
      }

      private java.lang.Object bind_ = "";
      /**
       * <pre>
       * $hide_from_docs
       * The ip or the Unix domain socket to which the listener should be bound
       * to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://&#64;foobar`
       * (Linux abstract namespace). When using Unix domain sockets, the port
       * number should be 0.
       * </pre>
       *
       * <code>string bind = 4;</code>
       * @return The bind.
       */
      public java.lang.String getBind() {
        java.lang.Object ref = bind_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bind_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * $hide_from_docs
       * The ip or the Unix domain socket to which the listener should be bound
       * to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://&#64;foobar`
       * (Linux abstract namespace). When using Unix domain sockets, the port
       * number should be 0.
       * </pre>
       *
       * <code>string bind = 4;</code>
       * @return The bytes for bind.
       */
      public com.google.protobuf.ByteString
          getBindBytes() {
        java.lang.Object ref = bind_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bind_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * $hide_from_docs
       * The ip or the Unix domain socket to which the listener should be bound
       * to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://&#64;foobar`
       * (Linux abstract namespace). When using Unix domain sockets, the port
       * number should be 0.
       * </pre>
       *
       * <code>string bind = 4;</code>
       * @param value The bind to set.
       * @return This builder for chaining.
       */
      public Builder setBind(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        bind_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * $hide_from_docs
       * The ip or the Unix domain socket to which the listener should be bound
       * to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://&#64;foobar`
       * (Linux abstract namespace). When using Unix domain sockets, the port
       * number should be 0.
       * </pre>
       *
       * <code>string bind = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBind() {
        bind_ = getDefaultInstance().getBind();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * $hide_from_docs
       * The ip or the Unix domain socket to which the listener should be bound
       * to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://&#64;foobar`
       * (Linux abstract namespace). When using Unix domain sockets, the port
       * number should be 0.
       * </pre>
       *
       * <code>string bind = 4;</code>
       * @param value The bytes for bind to set.
       * @return This builder for chaining.
       */
      public Builder setBindBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        bind_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureHostsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          hosts_ = new com.google.protobuf.LazyStringArrayList(hosts_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * One or more hosts exposed by this gateway.
       * While typically applicable to
       * HTTP services, it can also be used for TCP services using TLS with SNI.
       * A host is specified as a `dnsName` with an optional `namespace/` prefix.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
       * specified namespace (e.g.,`prod/&#42;`).
       * The `namespace` can be set to `*` or `.`, representing any or the current
       * namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. The default, if no `namespace/`
       * is specified, is `*&#47;`, that is, select services from any namespace.
       * Any associated `DestinationRule` in the selected namespace will also be used.
       * A `VirtualService` must be bound to the gateway and must have one or
       * more hosts that match the hosts specified in a server. The match
       * could be an exact match or a suffix match with the server's hosts. For
       * example, if the server's hosts specifies `*.example.com`, a
       * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
       * match. However, a `VirtualService` with host `example.com` or
       * `newexample.com` will not match.
       * NOTE: Only virtual services exported to the gateway's namespace
       * (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will not be
       * available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * </pre>
       *
       * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return A list containing the hosts.
       */
      public com.google.protobuf.ProtocolStringList
          getHostsList() {
        return hosts_.getUnmodifiableView();
      }
      /**
       * <pre>
       * One or more hosts exposed by this gateway.
       * While typically applicable to
       * HTTP services, it can also be used for TCP services using TLS with SNI.
       * A host is specified as a `dnsName` with an optional `namespace/` prefix.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
       * specified namespace (e.g.,`prod/&#42;`).
       * The `namespace` can be set to `*` or `.`, representing any or the current
       * namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. The default, if no `namespace/`
       * is specified, is `*&#47;`, that is, select services from any namespace.
       * Any associated `DestinationRule` in the selected namespace will also be used.
       * A `VirtualService` must be bound to the gateway and must have one or
       * more hosts that match the hosts specified in a server. The match
       * could be an exact match or a suffix match with the server's hosts. For
       * example, if the server's hosts specifies `*.example.com`, a
       * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
       * match. However, a `VirtualService` with host `example.com` or
       * `newexample.com` will not match.
       * NOTE: Only virtual services exported to the gateway's namespace
       * (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will not be
       * available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * </pre>
       *
       * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The count of hosts.
       */
      public int getHostsCount() {
        return hosts_.size();
      }
      /**
       * <pre>
       * One or more hosts exposed by this gateway.
       * While typically applicable to
       * HTTP services, it can also be used for TCP services using TLS with SNI.
       * A host is specified as a `dnsName` with an optional `namespace/` prefix.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
       * specified namespace (e.g.,`prod/&#42;`).
       * The `namespace` can be set to `*` or `.`, representing any or the current
       * namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. The default, if no `namespace/`
       * is specified, is `*&#47;`, that is, select services from any namespace.
       * Any associated `DestinationRule` in the selected namespace will also be used.
       * A `VirtualService` must be bound to the gateway and must have one or
       * more hosts that match the hosts specified in a server. The match
       * could be an exact match or a suffix match with the server's hosts. For
       * example, if the server's hosts specifies `*.example.com`, a
       * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
       * match. However, a `VirtualService` with host `example.com` or
       * `newexample.com` will not match.
       * NOTE: Only virtual services exported to the gateway's namespace
       * (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will not be
       * available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * </pre>
       *
       * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index of the element to return.
       * @return The hosts at the given index.
       */
      public java.lang.String getHosts(int index) {
        return hosts_.get(index);
      }
      /**
       * <pre>
       * One or more hosts exposed by this gateway.
       * While typically applicable to
       * HTTP services, it can also be used for TCP services using TLS with SNI.
       * A host is specified as a `dnsName` with an optional `namespace/` prefix.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
       * specified namespace (e.g.,`prod/&#42;`).
       * The `namespace` can be set to `*` or `.`, representing any or the current
       * namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. The default, if no `namespace/`
       * is specified, is `*&#47;`, that is, select services from any namespace.
       * Any associated `DestinationRule` in the selected namespace will also be used.
       * A `VirtualService` must be bound to the gateway and must have one or
       * more hosts that match the hosts specified in a server. The match
       * could be an exact match or a suffix match with the server's hosts. For
       * example, if the server's hosts specifies `*.example.com`, a
       * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
       * match. However, a `VirtualService` with host `example.com` or
       * `newexample.com` will not match.
       * NOTE: Only virtual services exported to the gateway's namespace
       * (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will not be
       * available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * </pre>
       *
       * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index of the value to return.
       * @return The bytes of the hosts at the given index.
       */
      public com.google.protobuf.ByteString
          getHostsBytes(int index) {
        return hosts_.getByteString(index);
      }
      /**
       * <pre>
       * One or more hosts exposed by this gateway.
       * While typically applicable to
       * HTTP services, it can also be used for TCP services using TLS with SNI.
       * A host is specified as a `dnsName` with an optional `namespace/` prefix.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
       * specified namespace (e.g.,`prod/&#42;`).
       * The `namespace` can be set to `*` or `.`, representing any or the current
       * namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. The default, if no `namespace/`
       * is specified, is `*&#47;`, that is, select services from any namespace.
       * Any associated `DestinationRule` in the selected namespace will also be used.
       * A `VirtualService` must be bound to the gateway and must have one or
       * more hosts that match the hosts specified in a server. The match
       * could be an exact match or a suffix match with the server's hosts. For
       * example, if the server's hosts specifies `*.example.com`, a
       * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
       * match. However, a `VirtualService` with host `example.com` or
       * `newexample.com` will not match.
       * NOTE: Only virtual services exported to the gateway's namespace
       * (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will not be
       * available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * </pre>
       *
       * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index to set the value at.
       * @param value The hosts to set.
       * @return This builder for chaining.
       */
      public Builder setHosts(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureHostsIsMutable();
        hosts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more hosts exposed by this gateway.
       * While typically applicable to
       * HTTP services, it can also be used for TCP services using TLS with SNI.
       * A host is specified as a `dnsName` with an optional `namespace/` prefix.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
       * specified namespace (e.g.,`prod/&#42;`).
       * The `namespace` can be set to `*` or `.`, representing any or the current
       * namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. The default, if no `namespace/`
       * is specified, is `*&#47;`, that is, select services from any namespace.
       * Any associated `DestinationRule` in the selected namespace will also be used.
       * A `VirtualService` must be bound to the gateway and must have one or
       * more hosts that match the hosts specified in a server. The match
       * could be an exact match or a suffix match with the server's hosts. For
       * example, if the server's hosts specifies `*.example.com`, a
       * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
       * match. However, a `VirtualService` with host `example.com` or
       * `newexample.com` will not match.
       * NOTE: Only virtual services exported to the gateway's namespace
       * (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will not be
       * available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * </pre>
       *
       * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The hosts to add.
       * @return This builder for chaining.
       */
      public Builder addHosts(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureHostsIsMutable();
        hosts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more hosts exposed by this gateway.
       * While typically applicable to
       * HTTP services, it can also be used for TCP services using TLS with SNI.
       * A host is specified as a `dnsName` with an optional `namespace/` prefix.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
       * specified namespace (e.g.,`prod/&#42;`).
       * The `namespace` can be set to `*` or `.`, representing any or the current
       * namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. The default, if no `namespace/`
       * is specified, is `*&#47;`, that is, select services from any namespace.
       * Any associated `DestinationRule` in the selected namespace will also be used.
       * A `VirtualService` must be bound to the gateway and must have one or
       * more hosts that match the hosts specified in a server. The match
       * could be an exact match or a suffix match with the server's hosts. For
       * example, if the server's hosts specifies `*.example.com`, a
       * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
       * match. However, a `VirtualService` with host `example.com` or
       * `newexample.com` will not match.
       * NOTE: Only virtual services exported to the gateway's namespace
       * (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will not be
       * available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * </pre>
       *
       * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param values The hosts to add.
       * @return This builder for chaining.
       */
      public Builder addAllHosts(
          java.lang.Iterable<java.lang.String> values) {
        ensureHostsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hosts_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more hosts exposed by this gateway.
       * While typically applicable to
       * HTTP services, it can also be used for TCP services using TLS with SNI.
       * A host is specified as a `dnsName` with an optional `namespace/` prefix.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
       * specified namespace (e.g.,`prod/&#42;`).
       * The `namespace` can be set to `*` or `.`, representing any or the current
       * namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. The default, if no `namespace/`
       * is specified, is `*&#47;`, that is, select services from any namespace.
       * Any associated `DestinationRule` in the selected namespace will also be used.
       * A `VirtualService` must be bound to the gateway and must have one or
       * more hosts that match the hosts specified in a server. The match
       * could be an exact match or a suffix match with the server's hosts. For
       * example, if the server's hosts specifies `*.example.com`, a
       * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
       * match. However, a `VirtualService` with host `example.com` or
       * `newexample.com` will not match.
       * NOTE: Only virtual services exported to the gateway's namespace
       * (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will not be
       * available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * </pre>
       *
       * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearHosts() {
        hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more hosts exposed by this gateway.
       * While typically applicable to
       * HTTP services, it can also be used for TCP services using TLS with SNI.
       * A host is specified as a `dnsName` with an optional `namespace/` prefix.
       * The `dnsName` should be specified using FQDN format, optionally including
       * a wildcard character in the left-most component (e.g., `prod/&#42;.example.com`).
       * Set the `dnsName` to `*` to select all `VirtualService` hosts from the
       * specified namespace (e.g.,`prod/&#42;`).
       * The `namespace` can be set to `*` or `.`, representing any or the current
       * namespace, respectively. For example, `*&#47;foo.example.com` selects the
       * service from any available namespace while `./foo.example.com` only selects
       * the service from the namespace of the sidecar. The default, if no `namespace/`
       * is specified, is `*&#47;`, that is, select services from any namespace.
       * Any associated `DestinationRule` in the selected namespace will also be used.
       * A `VirtualService` must be bound to the gateway and must have one or
       * more hosts that match the hosts specified in a server. The match
       * could be an exact match or a suffix match with the server's hosts. For
       * example, if the server's hosts specifies `*.example.com`, a
       * `VirtualService` with hosts `dev.example.com` or `prod.example.com` will
       * match. However, a `VirtualService` with host `example.com` or
       * `newexample.com` will not match.
       * NOTE: Only virtual services exported to the gateway's namespace
       * (e.g., `exportTo` value of `*`) can be referenced.
       * Private configurations (e.g., `exportTo` set to `.`) will not be
       * available. Refer to the `exportTo` setting in `VirtualService`,
       * `DestinationRule`, and `ServiceEntry` configurations for details.
       * </pre>
       *
       * <code>repeated string hosts = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes of the hosts to add.
       * @return This builder for chaining.
       */
      public Builder addHostsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureHostsIsMutable();
        hosts_.add(value);
        onChanged();
        return this;
      }

      private istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings tls_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings, istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.Builder, istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettingsOrBuilder> tlsBuilder_;
      /**
       * <pre>
       * Set of TLS related options that govern the server's behavior. Use
       * these options to control if all http requests should be redirected to
       * https, and the TLS modes to use.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
       * @return Whether the tls field is set.
       */
      public boolean hasTls() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Set of TLS related options that govern the server's behavior. Use
       * these options to control if all http requests should be redirected to
       * https, and the TLS modes to use.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
       * @return The tls.
       */
      public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings getTls() {
        if (tlsBuilder_ == null) {
          return tls_ == null ? istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.getDefaultInstance() : tls_;
        } else {
          return tlsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Set of TLS related options that govern the server's behavior. Use
       * these options to control if all http requests should be redirected to
       * https, and the TLS modes to use.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
       */
      public Builder setTls(istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings value) {
        if (tlsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tls_ = value;
        } else {
          tlsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set of TLS related options that govern the server's behavior. Use
       * these options to control if all http requests should be redirected to
       * https, and the TLS modes to use.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
       */
      public Builder setTls(
          istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.Builder builderForValue) {
        if (tlsBuilder_ == null) {
          tls_ = builderForValue.build();
        } else {
          tlsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set of TLS related options that govern the server's behavior. Use
       * these options to control if all http requests should be redirected to
       * https, and the TLS modes to use.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
       */
      public Builder mergeTls(istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings value) {
        if (tlsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            tls_ != null &&
            tls_ != istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.getDefaultInstance()) {
            getTlsBuilder().mergeFrom(value);
          } else {
            tls_ = value;
          }
        } else {
          tlsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set of TLS related options that govern the server's behavior. Use
       * these options to control if all http requests should be redirected to
       * https, and the TLS modes to use.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
       */
      public Builder clearTls() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tls_ = null;
        if (tlsBuilder_ != null) {
          tlsBuilder_.dispose();
          tlsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set of TLS related options that govern the server's behavior. Use
       * these options to control if all http requests should be redirected to
       * https, and the TLS modes to use.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.Builder getTlsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTlsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Set of TLS related options that govern the server's behavior. Use
       * these options to control if all http requests should be redirected to
       * https, and the TLS modes to use.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
       */
      public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettingsOrBuilder getTlsOrBuilder() {
        if (tlsBuilder_ != null) {
          return tlsBuilder_.getMessageOrBuilder();
        } else {
          return tls_ == null ?
              istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.getDefaultInstance() : tls_;
        }
      }
      /**
       * <pre>
       * Set of TLS related options that govern the server's behavior. Use
       * these options to control if all http requests should be redirected to
       * https, and the TLS modes to use.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings tls = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings, istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.Builder, istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettingsOrBuilder> 
          getTlsFieldBuilder() {
        if (tlsBuilder_ == null) {
          tlsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings, istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.Builder, istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettingsOrBuilder>(
                  getTls(),
                  getParentForChildren(),
                  isClean());
          tls_ = null;
        }
        return tlsBuilder_;
      }

      private java.lang.Object defaultEndpoint_ = "";
      /**
       * <pre>
       * The loopback IP endpoint or Unix domain socket to which traffic should
       * be forwarded to by default. Format should be `127.0.0.1:PORT` or
       * `unix:///path/to/socket` or `unix://&#64;foobar` (Linux abstract namespace).
       * NOT IMPLEMENTED.
       * $hide_from_docs
       * </pre>
       *
       * <code>string default_endpoint = 5;</code>
       * @return The defaultEndpoint.
       */
      public java.lang.String getDefaultEndpoint() {
        java.lang.Object ref = defaultEndpoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          defaultEndpoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The loopback IP endpoint or Unix domain socket to which traffic should
       * be forwarded to by default. Format should be `127.0.0.1:PORT` or
       * `unix:///path/to/socket` or `unix://&#64;foobar` (Linux abstract namespace).
       * NOT IMPLEMENTED.
       * $hide_from_docs
       * </pre>
       *
       * <code>string default_endpoint = 5;</code>
       * @return The bytes for defaultEndpoint.
       */
      public com.google.protobuf.ByteString
          getDefaultEndpointBytes() {
        java.lang.Object ref = defaultEndpoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          defaultEndpoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The loopback IP endpoint or Unix domain socket to which traffic should
       * be forwarded to by default. Format should be `127.0.0.1:PORT` or
       * `unix:///path/to/socket` or `unix://&#64;foobar` (Linux abstract namespace).
       * NOT IMPLEMENTED.
       * $hide_from_docs
       * </pre>
       *
       * <code>string default_endpoint = 5;</code>
       * @param value The defaultEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultEndpoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        defaultEndpoint_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The loopback IP endpoint or Unix domain socket to which traffic should
       * be forwarded to by default. Format should be `127.0.0.1:PORT` or
       * `unix:///path/to/socket` or `unix://&#64;foobar` (Linux abstract namespace).
       * NOT IMPLEMENTED.
       * $hide_from_docs
       * </pre>
       *
       * <code>string default_endpoint = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultEndpoint() {
        defaultEndpoint_ = getDefaultInstance().getDefaultEndpoint();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The loopback IP endpoint or Unix domain socket to which traffic should
       * be forwarded to by default. Format should be `127.0.0.1:PORT` or
       * `unix:///path/to/socket` or `unix://&#64;foobar` (Linux abstract namespace).
       * NOT IMPLEMENTED.
       * $hide_from_docs
       * </pre>
       *
       * <code>string default_endpoint = 5;</code>
       * @param value The bytes for defaultEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultEndpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        defaultEndpoint_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * An optional name of the server, when set must be unique across all servers.
       * This will be used for variety of purposes like prefixing stats generated with
       * this name etc.
       * </pre>
       *
       * <code>string name = 6;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An optional name of the server, when set must be unique across all servers.
       * This will be used for variety of purposes like prefixing stats generated with
       * this name etc.
       * </pre>
       *
       * <code>string name = 6;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An optional name of the server, when set must be unique across all servers.
       * This will be used for variety of purposes like prefixing stats generated with
       * this name etc.
       * </pre>
       *
       * <code>string name = 6;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional name of the server, when set must be unique across all servers.
       * This will be used for variety of purposes like prefixing stats generated with
       * this name etc.
       * </pre>
       *
       * <code>string name = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional name of the server, when set must be unique across all servers.
       * This will be used for variety of purposes like prefixing stats generated with
       * this name etc.
       * </pre>
       *
       * <code>string name = 6;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.Server)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Server)
    private static final istio.networking.v1alpha3.GatewayOuterClass.Server DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.GatewayOuterClass.Server();
    }

    public static istio.networking.v1alpha3.GatewayOuterClass.Server getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Server>
        PARSER = new com.google.protobuf.AbstractParser<Server>() {
      @java.lang.Override
      public Server parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Server> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Server> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.Server getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PortOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.Port)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A valid non-negative integer port number.
     * </pre>
     *
     * <code>uint32 number = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The number.
     */
    int getNumber();

    /**
     * <pre>
     * The protocol exposed on the port.
     * MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
     * TLS implies the connection will be routed based on the SNI header to
     * the destination without terminating the TLS connection.
     * </pre>
     *
     * <code>string protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The protocol.
     */
    java.lang.String getProtocol();
    /**
     * <pre>
     * The protocol exposed on the port.
     * MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
     * TLS implies the connection will be routed based on the SNI header to
     * the destination without terminating the TLS connection.
     * </pre>
     *
     * <code>string protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for protocol.
     */
    com.google.protobuf.ByteString
        getProtocolBytes();

    /**
     * <pre>
     * Label assigned to the port.
     * </pre>
     *
     * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Label assigned to the port.
     * </pre>
     *
     * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The port number on the endpoint where the traffic will be
     * received. Applicable only when used with ServiceEntries.
     * </pre>
     *
     * <code>uint32 target_port = 4;</code>
     * @return The targetPort.
     */
    int getTargetPort();
  }
  /**
   * <pre>
   * Port describes the properties of a specific port of a service.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.Port}
   */
  public static final class Port extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.Port)
      PortOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Port.newBuilder() to construct.
    private Port(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Port() {
      protocol_ = "";
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Port();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Port_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Port_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.GatewayOuterClass.Port.class, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder.class);
    }

    public static final int NUMBER_FIELD_NUMBER = 1;
    private int number_ = 0;
    /**
     * <pre>
     * A valid non-negative integer port number.
     * </pre>
     *
     * <code>uint32 number = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The number.
     */
    @java.lang.Override
    public int getNumber() {
      return number_;
    }

    public static final int PROTOCOL_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object protocol_ = "";
    /**
     * <pre>
     * The protocol exposed on the port.
     * MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
     * TLS implies the connection will be routed based on the SNI header to
     * the destination without terminating the TLS connection.
     * </pre>
     *
     * <code>string protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The protocol.
     */
    @java.lang.Override
    public java.lang.String getProtocol() {
      java.lang.Object ref = protocol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        protocol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The protocol exposed on the port.
     * MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
     * TLS implies the connection will be routed based on the SNI header to
     * the destination without terminating the TLS connection.
     * </pre>
     *
     * <code>string protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for protocol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProtocolBytes() {
      java.lang.Object ref = protocol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        protocol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * Label assigned to the port.
     * </pre>
     *
     * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Label assigned to the port.
     * </pre>
     *
     * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGET_PORT_FIELD_NUMBER = 4;
    private int targetPort_ = 0;
    /**
     * <pre>
     * The port number on the endpoint where the traffic will be
     * received. Applicable only when used with ServiceEntries.
     * </pre>
     *
     * <code>uint32 target_port = 4;</code>
     * @return The targetPort.
     */
    @java.lang.Override
    public int getTargetPort() {
      return targetPort_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (number_ != 0) {
        output.writeUInt32(1, number_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(protocol_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, protocol_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (targetPort_ != 0) {
        output.writeUInt32(4, targetPort_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (number_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, number_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(protocol_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, protocol_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (targetPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, targetPort_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.GatewayOuterClass.Port)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.GatewayOuterClass.Port other = (istio.networking.v1alpha3.GatewayOuterClass.Port) obj;

      if (getNumber()
          != other.getNumber()) return false;
      if (!getProtocol()
          .equals(other.getProtocol())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (getTargetPort()
          != other.getTargetPort()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getNumber();
      hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
      hash = (53 * hash) + getProtocol().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TARGET_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getTargetPort();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.Port parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.GatewayOuterClass.Port prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Port describes the properties of a specific port of a service.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.Port}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.Port)
        istio.networking.v1alpha3.GatewayOuterClass.PortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Port_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Port_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.GatewayOuterClass.Port.class, istio.networking.v1alpha3.GatewayOuterClass.Port.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.GatewayOuterClass.Port.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        number_ = 0;
        protocol_ = "";
        name_ = "";
        targetPort_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_Port_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.Port getDefaultInstanceForType() {
        return istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.Port build() {
        istio.networking.v1alpha3.GatewayOuterClass.Port result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.Port buildPartial() {
        istio.networking.v1alpha3.GatewayOuterClass.Port result = new istio.networking.v1alpha3.GatewayOuterClass.Port(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(istio.networking.v1alpha3.GatewayOuterClass.Port result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.number_ = number_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.protocol_ = protocol_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.targetPort_ = targetPort_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.GatewayOuterClass.Port) {
          return mergeFrom((istio.networking.v1alpha3.GatewayOuterClass.Port)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.GatewayOuterClass.Port other) {
        if (other == istio.networking.v1alpha3.GatewayOuterClass.Port.getDefaultInstance()) return this;
        if (other.getNumber() != 0) {
          setNumber(other.getNumber());
        }
        if (!other.getProtocol().isEmpty()) {
          protocol_ = other.protocol_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getTargetPort() != 0) {
          setTargetPort(other.getTargetPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                number_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                protocol_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                targetPort_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int number_ ;
      /**
       * <pre>
       * A valid non-negative integer port number.
       * </pre>
       *
       * <code>uint32 number = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The number.
       */
      @java.lang.Override
      public int getNumber() {
        return number_;
      }
      /**
       * <pre>
       * A valid non-negative integer port number.
       * </pre>
       *
       * <code>uint32 number = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The number to set.
       * @return This builder for chaining.
       */
      public Builder setNumber(int value) {
        
        number_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A valid non-negative integer port number.
       * </pre>
       *
       * <code>uint32 number = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        number_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object protocol_ = "";
      /**
       * <pre>
       * The protocol exposed on the port.
       * MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
       * TLS implies the connection will be routed based on the SNI header to
       * the destination without terminating the TLS connection.
       * </pre>
       *
       * <code>string protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The protocol.
       */
      public java.lang.String getProtocol() {
        java.lang.Object ref = protocol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          protocol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The protocol exposed on the port.
       * MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
       * TLS implies the connection will be routed based on the SNI header to
       * the destination without terminating the TLS connection.
       * </pre>
       *
       * <code>string protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The bytes for protocol.
       */
      public com.google.protobuf.ByteString
          getProtocolBytes() {
        java.lang.Object ref = protocol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          protocol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The protocol exposed on the port.
       * MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
       * TLS implies the connection will be routed based on the SNI header to
       * the destination without terminating the TLS connection.
       * </pre>
       *
       * <code>string protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The protocol to set.
       * @return This builder for chaining.
       */
      public Builder setProtocol(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        protocol_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The protocol exposed on the port.
       * MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
       * TLS implies the connection will be routed based on the SNI header to
       * the destination without terminating the TLS connection.
       * </pre>
       *
       * <code>string protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearProtocol() {
        protocol_ = getDefaultInstance().getProtocol();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The protocol exposed on the port.
       * MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
       * TLS implies the connection will be routed based on the SNI header to
       * the destination without terminating the TLS connection.
       * </pre>
       *
       * <code>string protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes for protocol to set.
       * @return This builder for chaining.
       */
      public Builder setProtocolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        protocol_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Label assigned to the port.
       * </pre>
       *
       * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Label assigned to the port.
       * </pre>
       *
       * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Label assigned to the port.
       * </pre>
       *
       * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Label assigned to the port.
       * </pre>
       *
       * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Label assigned to the port.
       * </pre>
       *
       * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private int targetPort_ ;
      /**
       * <pre>
       * The port number on the endpoint where the traffic will be
       * received. Applicable only when used with ServiceEntries.
       * </pre>
       *
       * <code>uint32 target_port = 4;</code>
       * @return The targetPort.
       */
      @java.lang.Override
      public int getTargetPort() {
        return targetPort_;
      }
      /**
       * <pre>
       * The port number on the endpoint where the traffic will be
       * received. Applicable only when used with ServiceEntries.
       * </pre>
       *
       * <code>uint32 target_port = 4;</code>
       * @param value The targetPort to set.
       * @return This builder for chaining.
       */
      public Builder setTargetPort(int value) {
        
        targetPort_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port number on the endpoint where the traffic will be
       * received. Applicable only when used with ServiceEntries.
       * </pre>
       *
       * <code>uint32 target_port = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        targetPort_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.Port)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Port)
    private static final istio.networking.v1alpha3.GatewayOuterClass.Port DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.GatewayOuterClass.Port();
    }

    public static istio.networking.v1alpha3.GatewayOuterClass.Port getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Port>
        PARSER = new com.google.protobuf.AbstractParser<Port>() {
      @java.lang.Override
      public Port parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Port> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Port> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.Port getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServerTLSSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.ServerTLSSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * If set to true, the load balancer will send a 301 redirect for
     * all http connections, asking the clients to use HTTPS.
     * </pre>
     *
     * <code>bool https_redirect = 1;</code>
     * @return The httpsRedirect.
     */
    boolean getHttpsRedirect();

    /**
     * <pre>
     * Optional: Indicates whether connections to this port should be
     * secured using TLS. The value of this field determines how TLS is
     * enforced.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSmode mode = 2;</code>
     * @return The enum numeric value on the wire for mode.
     */
    int getModeValue();
    /**
     * <pre>
     * Optional: Indicates whether connections to this port should be
     * secured using TLS. The value of this field determines how TLS is
     * enforced.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSmode mode = 2;</code>
     * @return The mode.
     */
    istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode getMode();

    /**
     * <pre>
     * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
     * holding the server-side TLS certificate to use.
     * </pre>
     *
     * <code>string server_certificate = 3;</code>
     * @return The serverCertificate.
     */
    java.lang.String getServerCertificate();
    /**
     * <pre>
     * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
     * holding the server-side TLS certificate to use.
     * </pre>
     *
     * <code>string server_certificate = 3;</code>
     * @return The bytes for serverCertificate.
     */
    com.google.protobuf.ByteString
        getServerCertificateBytes();

    /**
     * <pre>
     * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
     * holding the server's private key.
     * </pre>
     *
     * <code>string private_key = 4;</code>
     * @return The privateKey.
     */
    java.lang.String getPrivateKey();
    /**
     * <pre>
     * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
     * holding the server's private key.
     * </pre>
     *
     * <code>string private_key = 4;</code>
     * @return The bytes for privateKey.
     */
    com.google.protobuf.ByteString
        getPrivateKeyBytes();

    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to a file containing
     * certificate authority certificates to use in verifying a presented
     * client side certificate.
     * </pre>
     *
     * <code>string ca_certificates = 5;</code>
     * @return The caCertificates.
     */
    java.lang.String getCaCertificates();
    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to a file containing
     * certificate authority certificates to use in verifying a presented
     * client side certificate.
     * </pre>
     *
     * <code>string ca_certificates = 5;</code>
     * @return The bytes for caCertificates.
     */
    com.google.protobuf.ByteString
        getCaCertificatesBytes();

    /**
     * <pre>
     * For gateways running on Kubernetes, the name of the secret that
     * holds the TLS certs including the CA certificates. Applicable
     * only on Kubernetes. The secret (of type `generic`) should
     * contain the following keys and values: `key:
     * &lt;privateKey&gt;` and `cert: &lt;serverCert&gt;`. For mutual TLS, 
     * `cacert: &lt;CACertificate&gt;` can be provided in the same secret or 
     * a separate secret named `&lt;secret&gt;-cacert`.
     * Secret of type tls for server certificates along with
     * ca.crt key for CA certificates is also supported.
     * Only one of server certificates and CA certificate
     * or credentialName can be specified.
     * </pre>
     *
     * <code>string credential_name = 10;</code>
     * @return The credentialName.
     */
    java.lang.String getCredentialName();
    /**
     * <pre>
     * For gateways running on Kubernetes, the name of the secret that
     * holds the TLS certs including the CA certificates. Applicable
     * only on Kubernetes. The secret (of type `generic`) should
     * contain the following keys and values: `key:
     * &lt;privateKey&gt;` and `cert: &lt;serverCert&gt;`. For mutual TLS, 
     * `cacert: &lt;CACertificate&gt;` can be provided in the same secret or 
     * a separate secret named `&lt;secret&gt;-cacert`.
     * Secret of type tls for server certificates along with
     * ca.crt key for CA certificates is also supported.
     * Only one of server certificates and CA certificate
     * or credentialName can be specified.
     * </pre>
     *
     * <code>string credential_name = 10;</code>
     * @return The bytes for credentialName.
     */
    com.google.protobuf.ByteString
        getCredentialNameBytes();

    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate presented by the client.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 6;</code>
     * @return A list containing the subjectAltNames.
     */
    java.util.List<java.lang.String>
        getSubjectAltNamesList();
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate presented by the client.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 6;</code>
     * @return The count of subjectAltNames.
     */
    int getSubjectAltNamesCount();
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate presented by the client.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 6;</code>
     * @param index The index of the element to return.
     * @return The subjectAltNames at the given index.
     */
    java.lang.String getSubjectAltNames(int index);
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate presented by the client.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 6;</code>
     * @param index The index of the value to return.
     * @return The bytes of the subjectAltNames at the given index.
     */
    com.google.protobuf.ByteString
        getSubjectAltNamesBytes(int index);

    /**
     * <pre>
     * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
     * authorized client certificates.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_spki = 11;</code>
     * @return A list containing the verifyCertificateSpki.
     */
    java.util.List<java.lang.String>
        getVerifyCertificateSpkiList();
    /**
     * <pre>
     * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
     * authorized client certificates.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_spki = 11;</code>
     * @return The count of verifyCertificateSpki.
     */
    int getVerifyCertificateSpkiCount();
    /**
     * <pre>
     * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
     * authorized client certificates.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_spki = 11;</code>
     * @param index The index of the element to return.
     * @return The verifyCertificateSpki at the given index.
     */
    java.lang.String getVerifyCertificateSpki(int index);
    /**
     * <pre>
     * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
     * authorized client certificates.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_spki = 11;</code>
     * @param index The index of the value to return.
     * @return The bytes of the verifyCertificateSpki at the given index.
     */
    com.google.protobuf.ByteString
        getVerifyCertificateSpkiBytes(int index);

    /**
     * <pre>
     * An optional list of hex-encoded SHA-256 hashes of the
     * authorized client certificates. Both simple and colon separated
     * formats are acceptable.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_hash = 12;</code>
     * @return A list containing the verifyCertificateHash.
     */
    java.util.List<java.lang.String>
        getVerifyCertificateHashList();
    /**
     * <pre>
     * An optional list of hex-encoded SHA-256 hashes of the
     * authorized client certificates. Both simple and colon separated
     * formats are acceptable.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_hash = 12;</code>
     * @return The count of verifyCertificateHash.
     */
    int getVerifyCertificateHashCount();
    /**
     * <pre>
     * An optional list of hex-encoded SHA-256 hashes of the
     * authorized client certificates. Both simple and colon separated
     * formats are acceptable.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_hash = 12;</code>
     * @param index The index of the element to return.
     * @return The verifyCertificateHash at the given index.
     */
    java.lang.String getVerifyCertificateHash(int index);
    /**
     * <pre>
     * An optional list of hex-encoded SHA-256 hashes of the
     * authorized client certificates. Both simple and colon separated
     * formats are acceptable.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_hash = 12;</code>
     * @param index The index of the value to return.
     * @return The bytes of the verifyCertificateHash at the given index.
     */
    com.google.protobuf.ByteString
        getVerifyCertificateHashBytes(int index);

    /**
     * <pre>
     * Optional: Minimum TLS protocol version.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol min_protocol_version = 7;</code>
     * @return The enum numeric value on the wire for minProtocolVersion.
     */
    int getMinProtocolVersionValue();
    /**
     * <pre>
     * Optional: Minimum TLS protocol version.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol min_protocol_version = 7;</code>
     * @return The minProtocolVersion.
     */
    istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol getMinProtocolVersion();

    /**
     * <pre>
     * Optional: Maximum TLS protocol version.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol max_protocol_version = 8;</code>
     * @return The enum numeric value on the wire for maxProtocolVersion.
     */
    int getMaxProtocolVersionValue();
    /**
     * <pre>
     * Optional: Maximum TLS protocol version.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol max_protocol_version = 8;</code>
     * @return The maxProtocolVersion.
     */
    istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol getMaxProtocolVersion();

    /**
     * <pre>
     * Optional: If specified, only support the specified cipher list.
     * Otherwise default to the default cipher list supported by Envoy.
     * </pre>
     *
     * <code>repeated string cipher_suites = 9;</code>
     * @return A list containing the cipherSuites.
     */
    java.util.List<java.lang.String>
        getCipherSuitesList();
    /**
     * <pre>
     * Optional: If specified, only support the specified cipher list.
     * Otherwise default to the default cipher list supported by Envoy.
     * </pre>
     *
     * <code>repeated string cipher_suites = 9;</code>
     * @return The count of cipherSuites.
     */
    int getCipherSuitesCount();
    /**
     * <pre>
     * Optional: If specified, only support the specified cipher list.
     * Otherwise default to the default cipher list supported by Envoy.
     * </pre>
     *
     * <code>repeated string cipher_suites = 9;</code>
     * @param index The index of the element to return.
     * @return The cipherSuites at the given index.
     */
    java.lang.String getCipherSuites(int index);
    /**
     * <pre>
     * Optional: If specified, only support the specified cipher list.
     * Otherwise default to the default cipher list supported by Envoy.
     * </pre>
     *
     * <code>repeated string cipher_suites = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the cipherSuites at the given index.
     */
    com.google.protobuf.ByteString
        getCipherSuitesBytes(int index);
  }
  /**
   * Protobuf type {@code istio.networking.v1alpha3.ServerTLSSettings}
   */
  public static final class ServerTLSSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.ServerTLSSettings)
      ServerTLSSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServerTLSSettings.newBuilder() to construct.
    private ServerTLSSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServerTLSSettings() {
      mode_ = 0;
      serverCertificate_ = "";
      privateKey_ = "";
      caCertificates_ = "";
      credentialName_ = "";
      subjectAltNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      verifyCertificateSpki_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      verifyCertificateHash_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      minProtocolVersion_ = 0;
      maxProtocolVersion_ = 0;
      cipherSuites_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ServerTLSSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_ServerTLSSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_ServerTLSSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.class, istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.Builder.class);
    }

    /**
     * <pre>
     * TLS modes enforced by the proxy
     * </pre>
     *
     * Protobuf enum {@code istio.networking.v1alpha3.ServerTLSSettings.TLSmode}
     */
    public enum TLSmode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * The SNI string presented by the client will be used as the
       * match criterion in a VirtualService TLS route to determine
       * the destination service from the service registry.
       * </pre>
       *
       * <code>PASSTHROUGH = 0;</code>
       */
      PASSTHROUGH(0),
      /**
       * <pre>
       * Secure connections with standard TLS semantics.
       * </pre>
       *
       * <code>SIMPLE = 1;</code>
       */
      SIMPLE(1),
      /**
       * <pre>
       * Secure connections to the downstream using mutual TLS by
       * presenting server certificates for authentication.
       * </pre>
       *
       * <code>MUTUAL = 2;</code>
       */
      MUTUAL(2),
      /**
       * <pre>
       * Similar to the passthrough mode, except servers with this TLS
       * mode do not require an associated VirtualService to map from
       * the SNI value to service in the registry. The destination
       * details such as the service/subset/port are encoded in the
       * SNI value. The proxy will forward to the upstream (Envoy)
       * cluster (a group of endpoints) specified by the SNI
       * value. This server is typically used to provide connectivity
       * between services in disparate L3 networks that otherwise do
       * not have direct connectivity between their respective
       * endpoints. Use of this mode assumes that both the source and
       * the destination are using Istio mTLS to secure traffic.
       * </pre>
       *
       * <code>AUTO_PASSTHROUGH = 3;</code>
       */
      AUTO_PASSTHROUGH(3),
      /**
       * <pre>
       * Secure connections from the downstream using mutual TLS by
       * presenting server certificates for authentication.  Compared
       * to Mutual mode, this mode uses certificates, representing
       * gateway workload identity, generated automatically by Istio
       * for mTLS authentication. When this mode is used, all other
       * fields in `TLSOptions` should be empty.
       * </pre>
       *
       * <code>ISTIO_MUTUAL = 4;</code>
       */
      ISTIO_MUTUAL(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * The SNI string presented by the client will be used as the
       * match criterion in a VirtualService TLS route to determine
       * the destination service from the service registry.
       * </pre>
       *
       * <code>PASSTHROUGH = 0;</code>
       */
      public static final int PASSTHROUGH_VALUE = 0;
      /**
       * <pre>
       * Secure connections with standard TLS semantics.
       * </pre>
       *
       * <code>SIMPLE = 1;</code>
       */
      public static final int SIMPLE_VALUE = 1;
      /**
       * <pre>
       * Secure connections to the downstream using mutual TLS by
       * presenting server certificates for authentication.
       * </pre>
       *
       * <code>MUTUAL = 2;</code>
       */
      public static final int MUTUAL_VALUE = 2;
      /**
       * <pre>
       * Similar to the passthrough mode, except servers with this TLS
       * mode do not require an associated VirtualService to map from
       * the SNI value to service in the registry. The destination
       * details such as the service/subset/port are encoded in the
       * SNI value. The proxy will forward to the upstream (Envoy)
       * cluster (a group of endpoints) specified by the SNI
       * value. This server is typically used to provide connectivity
       * between services in disparate L3 networks that otherwise do
       * not have direct connectivity between their respective
       * endpoints. Use of this mode assumes that both the source and
       * the destination are using Istio mTLS to secure traffic.
       * </pre>
       *
       * <code>AUTO_PASSTHROUGH = 3;</code>
       */
      public static final int AUTO_PASSTHROUGH_VALUE = 3;
      /**
       * <pre>
       * Secure connections from the downstream using mutual TLS by
       * presenting server certificates for authentication.  Compared
       * to Mutual mode, this mode uses certificates, representing
       * gateway workload identity, generated automatically by Istio
       * for mTLS authentication. When this mode is used, all other
       * fields in `TLSOptions` should be empty.
       * </pre>
       *
       * <code>ISTIO_MUTUAL = 4;</code>
       */
      public static final int ISTIO_MUTUAL_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TLSmode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TLSmode forNumber(int value) {
        switch (value) {
          case 0: return PASSTHROUGH;
          case 1: return SIMPLE;
          case 2: return MUTUAL;
          case 3: return AUTO_PASSTHROUGH;
          case 4: return ISTIO_MUTUAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TLSmode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TLSmode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TLSmode>() {
              public TLSmode findValueByNumber(int number) {
                return TLSmode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.getDescriptor().getEnumTypes().get(0);
      }

      private static final TLSmode[] VALUES = values();

      public static TLSmode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TLSmode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:istio.networking.v1alpha3.ServerTLSSettings.TLSmode)
    }

    /**
     * <pre>
     * TLS protocol versions.
     * </pre>
     *
     * Protobuf enum {@code istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol}
     */
    public enum TLSProtocol
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Automatically choose the optimal TLS version.
       * </pre>
       *
       * <code>TLS_AUTO = 0;</code>
       */
      TLS_AUTO(0),
      /**
       * <pre>
       * TLS version 1.0
       * </pre>
       *
       * <code>TLSV1_0 = 1;</code>
       */
      TLSV1_0(1),
      /**
       * <pre>
       * TLS version 1.1
       * </pre>
       *
       * <code>TLSV1_1 = 2;</code>
       */
      TLSV1_1(2),
      /**
       * <pre>
       * TLS version 1.2
       * </pre>
       *
       * <code>TLSV1_2 = 3;</code>
       */
      TLSV1_2(3),
      /**
       * <pre>
       * TLS version 1.3
       * </pre>
       *
       * <code>TLSV1_3 = 4;</code>
       */
      TLSV1_3(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Automatically choose the optimal TLS version.
       * </pre>
       *
       * <code>TLS_AUTO = 0;</code>
       */
      public static final int TLS_AUTO_VALUE = 0;
      /**
       * <pre>
       * TLS version 1.0
       * </pre>
       *
       * <code>TLSV1_0 = 1;</code>
       */
      public static final int TLSV1_0_VALUE = 1;
      /**
       * <pre>
       * TLS version 1.1
       * </pre>
       *
       * <code>TLSV1_1 = 2;</code>
       */
      public static final int TLSV1_1_VALUE = 2;
      /**
       * <pre>
       * TLS version 1.2
       * </pre>
       *
       * <code>TLSV1_2 = 3;</code>
       */
      public static final int TLSV1_2_VALUE = 3;
      /**
       * <pre>
       * TLS version 1.3
       * </pre>
       *
       * <code>TLSV1_3 = 4;</code>
       */
      public static final int TLSV1_3_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TLSProtocol valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TLSProtocol forNumber(int value) {
        switch (value) {
          case 0: return TLS_AUTO;
          case 1: return TLSV1_0;
          case 2: return TLSV1_1;
          case 3: return TLSV1_2;
          case 4: return TLSV1_3;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TLSProtocol>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TLSProtocol> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TLSProtocol>() {
              public TLSProtocol findValueByNumber(int number) {
                return TLSProtocol.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.getDescriptor().getEnumTypes().get(1);
      }

      private static final TLSProtocol[] VALUES = values();

      public static TLSProtocol valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TLSProtocol(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol)
    }

    public static final int HTTPS_REDIRECT_FIELD_NUMBER = 1;
    private boolean httpsRedirect_ = false;
    /**
     * <pre>
     * If set to true, the load balancer will send a 301 redirect for
     * all http connections, asking the clients to use HTTPS.
     * </pre>
     *
     * <code>bool https_redirect = 1;</code>
     * @return The httpsRedirect.
     */
    @java.lang.Override
    public boolean getHttpsRedirect() {
      return httpsRedirect_;
    }

    public static final int MODE_FIELD_NUMBER = 2;
    private int mode_ = 0;
    /**
     * <pre>
     * Optional: Indicates whether connections to this port should be
     * secured using TLS. The value of this field determines how TLS is
     * enforced.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSmode mode = 2;</code>
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override public int getModeValue() {
      return mode_;
    }
    /**
     * <pre>
     * Optional: Indicates whether connections to this port should be
     * secured using TLS. The value of this field determines how TLS is
     * enforced.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSmode mode = 2;</code>
     * @return The mode.
     */
    @java.lang.Override public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode getMode() {
      istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode result = istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode.forNumber(mode_);
      return result == null ? istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode.UNRECOGNIZED : result;
    }

    public static final int SERVER_CERTIFICATE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object serverCertificate_ = "";
    /**
     * <pre>
     * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
     * holding the server-side TLS certificate to use.
     * </pre>
     *
     * <code>string server_certificate = 3;</code>
     * @return The serverCertificate.
     */
    @java.lang.Override
    public java.lang.String getServerCertificate() {
      java.lang.Object ref = serverCertificate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serverCertificate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
     * holding the server-side TLS certificate to use.
     * </pre>
     *
     * <code>string server_certificate = 3;</code>
     * @return The bytes for serverCertificate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServerCertificateBytes() {
      java.lang.Object ref = serverCertificate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serverCertificate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object privateKey_ = "";
    /**
     * <pre>
     * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
     * holding the server's private key.
     * </pre>
     *
     * <code>string private_key = 4;</code>
     * @return The privateKey.
     */
    @java.lang.Override
    public java.lang.String getPrivateKey() {
      java.lang.Object ref = privateKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        privateKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
     * holding the server's private key.
     * </pre>
     *
     * <code>string private_key = 4;</code>
     * @return The bytes for privateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrivateKeyBytes() {
      java.lang.Object ref = privateKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        privateKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CA_CERTIFICATES_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object caCertificates_ = "";
    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to a file containing
     * certificate authority certificates to use in verifying a presented
     * client side certificate.
     * </pre>
     *
     * <code>string ca_certificates = 5;</code>
     * @return The caCertificates.
     */
    @java.lang.Override
    public java.lang.String getCaCertificates() {
      java.lang.Object ref = caCertificates_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        caCertificates_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to a file containing
     * certificate authority certificates to use in verifying a presented
     * client side certificate.
     * </pre>
     *
     * <code>string ca_certificates = 5;</code>
     * @return The bytes for caCertificates.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCaCertificatesBytes() {
      java.lang.Object ref = caCertificates_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        caCertificates_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREDENTIAL_NAME_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private volatile java.lang.Object credentialName_ = "";
    /**
     * <pre>
     * For gateways running on Kubernetes, the name of the secret that
     * holds the TLS certs including the CA certificates. Applicable
     * only on Kubernetes. The secret (of type `generic`) should
     * contain the following keys and values: `key:
     * &lt;privateKey&gt;` and `cert: &lt;serverCert&gt;`. For mutual TLS, 
     * `cacert: &lt;CACertificate&gt;` can be provided in the same secret or 
     * a separate secret named `&lt;secret&gt;-cacert`.
     * Secret of type tls for server certificates along with
     * ca.crt key for CA certificates is also supported.
     * Only one of server certificates and CA certificate
     * or credentialName can be specified.
     * </pre>
     *
     * <code>string credential_name = 10;</code>
     * @return The credentialName.
     */
    @java.lang.Override
    public java.lang.String getCredentialName() {
      java.lang.Object ref = credentialName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        credentialName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * For gateways running on Kubernetes, the name of the secret that
     * holds the TLS certs including the CA certificates. Applicable
     * only on Kubernetes. The secret (of type `generic`) should
     * contain the following keys and values: `key:
     * &lt;privateKey&gt;` and `cert: &lt;serverCert&gt;`. For mutual TLS, 
     * `cacert: &lt;CACertificate&gt;` can be provided in the same secret or 
     * a separate secret named `&lt;secret&gt;-cacert`.
     * Secret of type tls for server certificates along with
     * ca.crt key for CA certificates is also supported.
     * Only one of server certificates and CA certificate
     * or credentialName can be specified.
     * </pre>
     *
     * <code>string credential_name = 10;</code>
     * @return The bytes for credentialName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCredentialNameBytes() {
      java.lang.Object ref = credentialName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        credentialName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBJECT_ALT_NAMES_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList subjectAltNames_;
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate presented by the client.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 6;</code>
     * @return A list containing the subjectAltNames.
     */
    public com.google.protobuf.ProtocolStringList
        getSubjectAltNamesList() {
      return subjectAltNames_;
    }
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate presented by the client.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 6;</code>
     * @return The count of subjectAltNames.
     */
    public int getSubjectAltNamesCount() {
      return subjectAltNames_.size();
    }
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate presented by the client.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 6;</code>
     * @param index The index of the element to return.
     * @return The subjectAltNames at the given index.
     */
    public java.lang.String getSubjectAltNames(int index) {
      return subjectAltNames_.get(index);
    }
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate presented by the client.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 6;</code>
     * @param index The index of the value to return.
     * @return The bytes of the subjectAltNames at the given index.
     */
    public com.google.protobuf.ByteString
        getSubjectAltNamesBytes(int index) {
      return subjectAltNames_.getByteString(index);
    }

    public static final int VERIFY_CERTIFICATE_SPKI_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList verifyCertificateSpki_;
    /**
     * <pre>
     * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
     * authorized client certificates.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_spki = 11;</code>
     * @return A list containing the verifyCertificateSpki.
     */
    public com.google.protobuf.ProtocolStringList
        getVerifyCertificateSpkiList() {
      return verifyCertificateSpki_;
    }
    /**
     * <pre>
     * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
     * authorized client certificates.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_spki = 11;</code>
     * @return The count of verifyCertificateSpki.
     */
    public int getVerifyCertificateSpkiCount() {
      return verifyCertificateSpki_.size();
    }
    /**
     * <pre>
     * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
     * authorized client certificates.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_spki = 11;</code>
     * @param index The index of the element to return.
     * @return The verifyCertificateSpki at the given index.
     */
    public java.lang.String getVerifyCertificateSpki(int index) {
      return verifyCertificateSpki_.get(index);
    }
    /**
     * <pre>
     * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
     * authorized client certificates.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_spki = 11;</code>
     * @param index The index of the value to return.
     * @return The bytes of the verifyCertificateSpki at the given index.
     */
    public com.google.protobuf.ByteString
        getVerifyCertificateSpkiBytes(int index) {
      return verifyCertificateSpki_.getByteString(index);
    }

    public static final int VERIFY_CERTIFICATE_HASH_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList verifyCertificateHash_;
    /**
     * <pre>
     * An optional list of hex-encoded SHA-256 hashes of the
     * authorized client certificates. Both simple and colon separated
     * formats are acceptable.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_hash = 12;</code>
     * @return A list containing the verifyCertificateHash.
     */
    public com.google.protobuf.ProtocolStringList
        getVerifyCertificateHashList() {
      return verifyCertificateHash_;
    }
    /**
     * <pre>
     * An optional list of hex-encoded SHA-256 hashes of the
     * authorized client certificates. Both simple and colon separated
     * formats are acceptable.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_hash = 12;</code>
     * @return The count of verifyCertificateHash.
     */
    public int getVerifyCertificateHashCount() {
      return verifyCertificateHash_.size();
    }
    /**
     * <pre>
     * An optional list of hex-encoded SHA-256 hashes of the
     * authorized client certificates. Both simple and colon separated
     * formats are acceptable.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_hash = 12;</code>
     * @param index The index of the element to return.
     * @return The verifyCertificateHash at the given index.
     */
    public java.lang.String getVerifyCertificateHash(int index) {
      return verifyCertificateHash_.get(index);
    }
    /**
     * <pre>
     * An optional list of hex-encoded SHA-256 hashes of the
     * authorized client certificates. Both simple and colon separated
     * formats are acceptable.
     * Note: When both verify_certificate_hash and verify_certificate_spki
     * are specified, a hash matching either value will result in the
     * certificate being accepted.
     * </pre>
     *
     * <code>repeated string verify_certificate_hash = 12;</code>
     * @param index The index of the value to return.
     * @return The bytes of the verifyCertificateHash at the given index.
     */
    public com.google.protobuf.ByteString
        getVerifyCertificateHashBytes(int index) {
      return verifyCertificateHash_.getByteString(index);
    }

    public static final int MIN_PROTOCOL_VERSION_FIELD_NUMBER = 7;
    private int minProtocolVersion_ = 0;
    /**
     * <pre>
     * Optional: Minimum TLS protocol version.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol min_protocol_version = 7;</code>
     * @return The enum numeric value on the wire for minProtocolVersion.
     */
    @java.lang.Override public int getMinProtocolVersionValue() {
      return minProtocolVersion_;
    }
    /**
     * <pre>
     * Optional: Minimum TLS protocol version.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol min_protocol_version = 7;</code>
     * @return The minProtocolVersion.
     */
    @java.lang.Override public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol getMinProtocolVersion() {
      istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol result = istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.forNumber(minProtocolVersion_);
      return result == null ? istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.UNRECOGNIZED : result;
    }

    public static final int MAX_PROTOCOL_VERSION_FIELD_NUMBER = 8;
    private int maxProtocolVersion_ = 0;
    /**
     * <pre>
     * Optional: Maximum TLS protocol version.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol max_protocol_version = 8;</code>
     * @return The enum numeric value on the wire for maxProtocolVersion.
     */
    @java.lang.Override public int getMaxProtocolVersionValue() {
      return maxProtocolVersion_;
    }
    /**
     * <pre>
     * Optional: Maximum TLS protocol version.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol max_protocol_version = 8;</code>
     * @return The maxProtocolVersion.
     */
    @java.lang.Override public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol getMaxProtocolVersion() {
      istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol result = istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.forNumber(maxProtocolVersion_);
      return result == null ? istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.UNRECOGNIZED : result;
    }

    public static final int CIPHER_SUITES_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList cipherSuites_;
    /**
     * <pre>
     * Optional: If specified, only support the specified cipher list.
     * Otherwise default to the default cipher list supported by Envoy.
     * </pre>
     *
     * <code>repeated string cipher_suites = 9;</code>
     * @return A list containing the cipherSuites.
     */
    public com.google.protobuf.ProtocolStringList
        getCipherSuitesList() {
      return cipherSuites_;
    }
    /**
     * <pre>
     * Optional: If specified, only support the specified cipher list.
     * Otherwise default to the default cipher list supported by Envoy.
     * </pre>
     *
     * <code>repeated string cipher_suites = 9;</code>
     * @return The count of cipherSuites.
     */
    public int getCipherSuitesCount() {
      return cipherSuites_.size();
    }
    /**
     * <pre>
     * Optional: If specified, only support the specified cipher list.
     * Otherwise default to the default cipher list supported by Envoy.
     * </pre>
     *
     * <code>repeated string cipher_suites = 9;</code>
     * @param index The index of the element to return.
     * @return The cipherSuites at the given index.
     */
    public java.lang.String getCipherSuites(int index) {
      return cipherSuites_.get(index);
    }
    /**
     * <pre>
     * Optional: If specified, only support the specified cipher list.
     * Otherwise default to the default cipher list supported by Envoy.
     * </pre>
     *
     * <code>repeated string cipher_suites = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the cipherSuites at the given index.
     */
    public com.google.protobuf.ByteString
        getCipherSuitesBytes(int index) {
      return cipherSuites_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (httpsRedirect_ != false) {
        output.writeBool(1, httpsRedirect_);
      }
      if (mode_ != istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode.PASSTHROUGH.getNumber()) {
        output.writeEnum(2, mode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverCertificate_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, serverCertificate_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(privateKey_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, privateKey_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(caCertificates_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, caCertificates_);
      }
      for (int i = 0; i < subjectAltNames_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, subjectAltNames_.getRaw(i));
      }
      if (minProtocolVersion_ != istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.TLS_AUTO.getNumber()) {
        output.writeEnum(7, minProtocolVersion_);
      }
      if (maxProtocolVersion_ != istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.TLS_AUTO.getNumber()) {
        output.writeEnum(8, maxProtocolVersion_);
      }
      for (int i = 0; i < cipherSuites_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, cipherSuites_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(credentialName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, credentialName_);
      }
      for (int i = 0; i < verifyCertificateSpki_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, verifyCertificateSpki_.getRaw(i));
      }
      for (int i = 0; i < verifyCertificateHash_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, verifyCertificateHash_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (httpsRedirect_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, httpsRedirect_);
      }
      if (mode_ != istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode.PASSTHROUGH.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverCertificate_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, serverCertificate_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(privateKey_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, privateKey_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(caCertificates_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, caCertificates_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < subjectAltNames_.size(); i++) {
          dataSize += computeStringSizeNoTag(subjectAltNames_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSubjectAltNamesList().size();
      }
      if (minProtocolVersion_ != istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.TLS_AUTO.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, minProtocolVersion_);
      }
      if (maxProtocolVersion_ != istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.TLS_AUTO.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, maxProtocolVersion_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cipherSuites_.size(); i++) {
          dataSize += computeStringSizeNoTag(cipherSuites_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCipherSuitesList().size();
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(credentialName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, credentialName_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < verifyCertificateSpki_.size(); i++) {
          dataSize += computeStringSizeNoTag(verifyCertificateSpki_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getVerifyCertificateSpkiList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < verifyCertificateHash_.size(); i++) {
          dataSize += computeStringSizeNoTag(verifyCertificateHash_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getVerifyCertificateHashList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings other = (istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings) obj;

      if (getHttpsRedirect()
          != other.getHttpsRedirect()) return false;
      if (mode_ != other.mode_) return false;
      if (!getServerCertificate()
          .equals(other.getServerCertificate())) return false;
      if (!getPrivateKey()
          .equals(other.getPrivateKey())) return false;
      if (!getCaCertificates()
          .equals(other.getCaCertificates())) return false;
      if (!getCredentialName()
          .equals(other.getCredentialName())) return false;
      if (!getSubjectAltNamesList()
          .equals(other.getSubjectAltNamesList())) return false;
      if (!getVerifyCertificateSpkiList()
          .equals(other.getVerifyCertificateSpkiList())) return false;
      if (!getVerifyCertificateHashList()
          .equals(other.getVerifyCertificateHashList())) return false;
      if (minProtocolVersion_ != other.minProtocolVersion_) return false;
      if (maxProtocolVersion_ != other.maxProtocolVersion_) return false;
      if (!getCipherSuitesList()
          .equals(other.getCipherSuitesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HTTPS_REDIRECT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHttpsRedirect());
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
      hash = (37 * hash) + SERVER_CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getServerCertificate().hashCode();
      hash = (37 * hash) + PRIVATE_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPrivateKey().hashCode();
      hash = (37 * hash) + CA_CERTIFICATES_FIELD_NUMBER;
      hash = (53 * hash) + getCaCertificates().hashCode();
      hash = (37 * hash) + CREDENTIAL_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getCredentialName().hashCode();
      if (getSubjectAltNamesCount() > 0) {
        hash = (37 * hash) + SUBJECT_ALT_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getSubjectAltNamesList().hashCode();
      }
      if (getVerifyCertificateSpkiCount() > 0) {
        hash = (37 * hash) + VERIFY_CERTIFICATE_SPKI_FIELD_NUMBER;
        hash = (53 * hash) + getVerifyCertificateSpkiList().hashCode();
      }
      if (getVerifyCertificateHashCount() > 0) {
        hash = (37 * hash) + VERIFY_CERTIFICATE_HASH_FIELD_NUMBER;
        hash = (53 * hash) + getVerifyCertificateHashList().hashCode();
      }
      hash = (37 * hash) + MIN_PROTOCOL_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + minProtocolVersion_;
      hash = (37 * hash) + MAX_PROTOCOL_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + maxProtocolVersion_;
      if (getCipherSuitesCount() > 0) {
        hash = (37 * hash) + CIPHER_SUITES_FIELD_NUMBER;
        hash = (53 * hash) + getCipherSuitesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code istio.networking.v1alpha3.ServerTLSSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.ServerTLSSettings)
        istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_ServerTLSSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_ServerTLSSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.class, istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        httpsRedirect_ = false;
        mode_ = 0;
        serverCertificate_ = "";
        privateKey_ = "";
        caCertificates_ = "";
        credentialName_ = "";
        subjectAltNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        verifyCertificateSpki_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        verifyCertificateHash_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        minProtocolVersion_ = 0;
        maxProtocolVersion_ = 0;
        cipherSuites_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.GatewayOuterClass.internal_static_istio_networking_v1alpha3_ServerTLSSettings_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings getDefaultInstanceForType() {
        return istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings build() {
        istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings buildPartial() {
        istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings result = new istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings result) {
        if (((bitField0_ & 0x00000040) != 0)) {
          subjectAltNames_ = subjectAltNames_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.subjectAltNames_ = subjectAltNames_;
        if (((bitField0_ & 0x00000080) != 0)) {
          verifyCertificateSpki_ = verifyCertificateSpki_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.verifyCertificateSpki_ = verifyCertificateSpki_;
        if (((bitField0_ & 0x00000100) != 0)) {
          verifyCertificateHash_ = verifyCertificateHash_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.verifyCertificateHash_ = verifyCertificateHash_;
        if (((bitField0_ & 0x00000800) != 0)) {
          cipherSuites_ = cipherSuites_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.cipherSuites_ = cipherSuites_;
      }

      private void buildPartial0(istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.httpsRedirect_ = httpsRedirect_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.mode_ = mode_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.serverCertificate_ = serverCertificate_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.privateKey_ = privateKey_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.caCertificates_ = caCertificates_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.credentialName_ = credentialName_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.minProtocolVersion_ = minProtocolVersion_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.maxProtocolVersion_ = maxProtocolVersion_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings) {
          return mergeFrom((istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings other) {
        if (other == istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.getDefaultInstance()) return this;
        if (other.getHttpsRedirect() != false) {
          setHttpsRedirect(other.getHttpsRedirect());
        }
        if (other.mode_ != 0) {
          setModeValue(other.getModeValue());
        }
        if (!other.getServerCertificate().isEmpty()) {
          serverCertificate_ = other.serverCertificate_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getPrivateKey().isEmpty()) {
          privateKey_ = other.privateKey_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getCaCertificates().isEmpty()) {
          caCertificates_ = other.caCertificates_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (!other.getCredentialName().isEmpty()) {
          credentialName_ = other.credentialName_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        if (!other.subjectAltNames_.isEmpty()) {
          if (subjectAltNames_.isEmpty()) {
            subjectAltNames_ = other.subjectAltNames_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSubjectAltNamesIsMutable();
            subjectAltNames_.addAll(other.subjectAltNames_);
          }
          onChanged();
        }
        if (!other.verifyCertificateSpki_.isEmpty()) {
          if (verifyCertificateSpki_.isEmpty()) {
            verifyCertificateSpki_ = other.verifyCertificateSpki_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureVerifyCertificateSpkiIsMutable();
            verifyCertificateSpki_.addAll(other.verifyCertificateSpki_);
          }
          onChanged();
        }
        if (!other.verifyCertificateHash_.isEmpty()) {
          if (verifyCertificateHash_.isEmpty()) {
            verifyCertificateHash_ = other.verifyCertificateHash_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureVerifyCertificateHashIsMutable();
            verifyCertificateHash_.addAll(other.verifyCertificateHash_);
          }
          onChanged();
        }
        if (other.minProtocolVersion_ != 0) {
          setMinProtocolVersionValue(other.getMinProtocolVersionValue());
        }
        if (other.maxProtocolVersion_ != 0) {
          setMaxProtocolVersionValue(other.getMaxProtocolVersionValue());
        }
        if (!other.cipherSuites_.isEmpty()) {
          if (cipherSuites_.isEmpty()) {
            cipherSuites_ = other.cipherSuites_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureCipherSuitesIsMutable();
            cipherSuites_.addAll(other.cipherSuites_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                httpsRedirect_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                mode_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                serverCertificate_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                privateKey_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                caCertificates_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureSubjectAltNamesIsMutable();
                subjectAltNames_.add(s);
                break;
              } // case 50
              case 56: {
                minProtocolVersion_ = input.readEnum();
                bitField0_ |= 0x00000200;
                break;
              } // case 56
              case 64: {
                maxProtocolVersion_ = input.readEnum();
                bitField0_ |= 0x00000400;
                break;
              } // case 64
              case 74: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureCipherSuitesIsMutable();
                cipherSuites_.add(s);
                break;
              } // case 74
              case 82: {
                credentialName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 82
              case 90: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureVerifyCertificateSpkiIsMutable();
                verifyCertificateSpki_.add(s);
                break;
              } // case 90
              case 98: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureVerifyCertificateHashIsMutable();
                verifyCertificateHash_.add(s);
                break;
              } // case 98
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean httpsRedirect_ ;
      /**
       * <pre>
       * If set to true, the load balancer will send a 301 redirect for
       * all http connections, asking the clients to use HTTPS.
       * </pre>
       *
       * <code>bool https_redirect = 1;</code>
       * @return The httpsRedirect.
       */
      @java.lang.Override
      public boolean getHttpsRedirect() {
        return httpsRedirect_;
      }
      /**
       * <pre>
       * If set to true, the load balancer will send a 301 redirect for
       * all http connections, asking the clients to use HTTPS.
       * </pre>
       *
       * <code>bool https_redirect = 1;</code>
       * @param value The httpsRedirect to set.
       * @return This builder for chaining.
       */
      public Builder setHttpsRedirect(boolean value) {
        
        httpsRedirect_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set to true, the load balancer will send a 301 redirect for
       * all http connections, asking the clients to use HTTPS.
       * </pre>
       *
       * <code>bool https_redirect = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHttpsRedirect() {
        bitField0_ = (bitField0_ & ~0x00000001);
        httpsRedirect_ = false;
        onChanged();
        return this;
      }

      private int mode_ = 0;
      /**
       * <pre>
       * Optional: Indicates whether connections to this port should be
       * secured using TLS. The value of this field determines how TLS is
       * enforced.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSmode mode = 2;</code>
       * @return The enum numeric value on the wire for mode.
       */
      @java.lang.Override public int getModeValue() {
        return mode_;
      }
      /**
       * <pre>
       * Optional: Indicates whether connections to this port should be
       * secured using TLS. The value of this field determines how TLS is
       * enforced.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSmode mode = 2;</code>
       * @param value The enum numeric value on the wire for mode to set.
       * @return This builder for chaining.
       */
      public Builder setModeValue(int value) {
        mode_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: Indicates whether connections to this port should be
       * secured using TLS. The value of this field determines how TLS is
       * enforced.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSmode mode = 2;</code>
       * @return The mode.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode getMode() {
        istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode result = istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode.forNumber(mode_);
        return result == null ? istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Optional: Indicates whether connections to this port should be
       * secured using TLS. The value of this field determines how TLS is
       * enforced.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSmode mode = 2;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSmode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: Indicates whether connections to this port should be
       * secured using TLS. The value of this field determines how TLS is
       * enforced.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSmode mode = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object serverCertificate_ = "";
      /**
       * <pre>
       * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
       * holding the server-side TLS certificate to use.
       * </pre>
       *
       * <code>string server_certificate = 3;</code>
       * @return The serverCertificate.
       */
      public java.lang.String getServerCertificate() {
        java.lang.Object ref = serverCertificate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serverCertificate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
       * holding the server-side TLS certificate to use.
       * </pre>
       *
       * <code>string server_certificate = 3;</code>
       * @return The bytes for serverCertificate.
       */
      public com.google.protobuf.ByteString
          getServerCertificateBytes() {
        java.lang.Object ref = serverCertificate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serverCertificate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
       * holding the server-side TLS certificate to use.
       * </pre>
       *
       * <code>string server_certificate = 3;</code>
       * @param value The serverCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setServerCertificate(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        serverCertificate_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
       * holding the server-side TLS certificate to use.
       * </pre>
       *
       * <code>string server_certificate = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearServerCertificate() {
        serverCertificate_ = getDefaultInstance().getServerCertificate();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
       * holding the server-side TLS certificate to use.
       * </pre>
       *
       * <code>string server_certificate = 3;</code>
       * @param value The bytes for serverCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setServerCertificateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        serverCertificate_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object privateKey_ = "";
      /**
       * <pre>
       * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
       * holding the server's private key.
       * </pre>
       *
       * <code>string private_key = 4;</code>
       * @return The privateKey.
       */
      public java.lang.String getPrivateKey() {
        java.lang.Object ref = privateKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          privateKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
       * holding the server's private key.
       * </pre>
       *
       * <code>string private_key = 4;</code>
       * @return The bytes for privateKey.
       */
      public com.google.protobuf.ByteString
          getPrivateKeyBytes() {
        java.lang.Object ref = privateKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          privateKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
       * holding the server's private key.
       * </pre>
       *
       * <code>string private_key = 4;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        privateKey_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
       * holding the server's private key.
       * </pre>
       *
       * <code>string private_key = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        privateKey_ = getDefaultInstance().getPrivateKey();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file
       * holding the server's private key.
       * </pre>
       *
       * <code>string private_key = 4;</code>
       * @param value The bytes for privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        privateKey_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object caCertificates_ = "";
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to a file containing
       * certificate authority certificates to use in verifying a presented
       * client side certificate.
       * </pre>
       *
       * <code>string ca_certificates = 5;</code>
       * @return The caCertificates.
       */
      public java.lang.String getCaCertificates() {
        java.lang.Object ref = caCertificates_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          caCertificates_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to a file containing
       * certificate authority certificates to use in verifying a presented
       * client side certificate.
       * </pre>
       *
       * <code>string ca_certificates = 5;</code>
       * @return The bytes for caCertificates.
       */
      public com.google.protobuf.ByteString
          getCaCertificatesBytes() {
        java.lang.Object ref = caCertificates_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          caCertificates_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to a file containing
       * certificate authority certificates to use in verifying a presented
       * client side certificate.
       * </pre>
       *
       * <code>string ca_certificates = 5;</code>
       * @param value The caCertificates to set.
       * @return This builder for chaining.
       */
      public Builder setCaCertificates(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        caCertificates_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to a file containing
       * certificate authority certificates to use in verifying a presented
       * client side certificate.
       * </pre>
       *
       * <code>string ca_certificates = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCaCertificates() {
        caCertificates_ = getDefaultInstance().getCaCertificates();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to a file containing
       * certificate authority certificates to use in verifying a presented
       * client side certificate.
       * </pre>
       *
       * <code>string ca_certificates = 5;</code>
       * @param value The bytes for caCertificates to set.
       * @return This builder for chaining.
       */
      public Builder setCaCertificatesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        caCertificates_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private java.lang.Object credentialName_ = "";
      /**
       * <pre>
       * For gateways running on Kubernetes, the name of the secret that
       * holds the TLS certs including the CA certificates. Applicable
       * only on Kubernetes. The secret (of type `generic`) should
       * contain the following keys and values: `key:
       * &lt;privateKey&gt;` and `cert: &lt;serverCert&gt;`. For mutual TLS, 
       * `cacert: &lt;CACertificate&gt;` can be provided in the same secret or 
       * a separate secret named `&lt;secret&gt;-cacert`.
       * Secret of type tls for server certificates along with
       * ca.crt key for CA certificates is also supported.
       * Only one of server certificates and CA certificate
       * or credentialName can be specified.
       * </pre>
       *
       * <code>string credential_name = 10;</code>
       * @return The credentialName.
       */
      public java.lang.String getCredentialName() {
        java.lang.Object ref = credentialName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          credentialName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * For gateways running on Kubernetes, the name of the secret that
       * holds the TLS certs including the CA certificates. Applicable
       * only on Kubernetes. The secret (of type `generic`) should
       * contain the following keys and values: `key:
       * &lt;privateKey&gt;` and `cert: &lt;serverCert&gt;`. For mutual TLS, 
       * `cacert: &lt;CACertificate&gt;` can be provided in the same secret or 
       * a separate secret named `&lt;secret&gt;-cacert`.
       * Secret of type tls for server certificates along with
       * ca.crt key for CA certificates is also supported.
       * Only one of server certificates and CA certificate
       * or credentialName can be specified.
       * </pre>
       *
       * <code>string credential_name = 10;</code>
       * @return The bytes for credentialName.
       */
      public com.google.protobuf.ByteString
          getCredentialNameBytes() {
        java.lang.Object ref = credentialName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          credentialName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * For gateways running on Kubernetes, the name of the secret that
       * holds the TLS certs including the CA certificates. Applicable
       * only on Kubernetes. The secret (of type `generic`) should
       * contain the following keys and values: `key:
       * &lt;privateKey&gt;` and `cert: &lt;serverCert&gt;`. For mutual TLS, 
       * `cacert: &lt;CACertificate&gt;` can be provided in the same secret or 
       * a separate secret named `&lt;secret&gt;-cacert`.
       * Secret of type tls for server certificates along with
       * ca.crt key for CA certificates is also supported.
       * Only one of server certificates and CA certificate
       * or credentialName can be specified.
       * </pre>
       *
       * <code>string credential_name = 10;</code>
       * @param value The credentialName to set.
       * @return This builder for chaining.
       */
      public Builder setCredentialName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        credentialName_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For gateways running on Kubernetes, the name of the secret that
       * holds the TLS certs including the CA certificates. Applicable
       * only on Kubernetes. The secret (of type `generic`) should
       * contain the following keys and values: `key:
       * &lt;privateKey&gt;` and `cert: &lt;serverCert&gt;`. For mutual TLS, 
       * `cacert: &lt;CACertificate&gt;` can be provided in the same secret or 
       * a separate secret named `&lt;secret&gt;-cacert`.
       * Secret of type tls for server certificates along with
       * ca.crt key for CA certificates is also supported.
       * Only one of server certificates and CA certificate
       * or credentialName can be specified.
       * </pre>
       *
       * <code>string credential_name = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCredentialName() {
        credentialName_ = getDefaultInstance().getCredentialName();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For gateways running on Kubernetes, the name of the secret that
       * holds the TLS certs including the CA certificates. Applicable
       * only on Kubernetes. The secret (of type `generic`) should
       * contain the following keys and values: `key:
       * &lt;privateKey&gt;` and `cert: &lt;serverCert&gt;`. For mutual TLS, 
       * `cacert: &lt;CACertificate&gt;` can be provided in the same secret or 
       * a separate secret named `&lt;secret&gt;-cacert`.
       * Secret of type tls for server certificates along with
       * ca.crt key for CA certificates is also supported.
       * Only one of server certificates and CA certificate
       * or credentialName can be specified.
       * </pre>
       *
       * <code>string credential_name = 10;</code>
       * @param value The bytes for credentialName to set.
       * @return This builder for chaining.
       */
      public Builder setCredentialNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        credentialName_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList subjectAltNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSubjectAltNamesIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          subjectAltNames_ = new com.google.protobuf.LazyStringArrayList(subjectAltNames_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate presented by the client.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 6;</code>
       * @return A list containing the subjectAltNames.
       */
      public com.google.protobuf.ProtocolStringList
          getSubjectAltNamesList() {
        return subjectAltNames_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate presented by the client.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 6;</code>
       * @return The count of subjectAltNames.
       */
      public int getSubjectAltNamesCount() {
        return subjectAltNames_.size();
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate presented by the client.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 6;</code>
       * @param index The index of the element to return.
       * @return The subjectAltNames at the given index.
       */
      public java.lang.String getSubjectAltNames(int index) {
        return subjectAltNames_.get(index);
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate presented by the client.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 6;</code>
       * @param index The index of the value to return.
       * @return The bytes of the subjectAltNames at the given index.
       */
      public com.google.protobuf.ByteString
          getSubjectAltNamesBytes(int index) {
        return subjectAltNames_.getByteString(index);
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate presented by the client.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 6;</code>
       * @param index The index to set the value at.
       * @param value The subjectAltNames to set.
       * @return This builder for chaining.
       */
      public Builder setSubjectAltNames(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSubjectAltNamesIsMutable();
        subjectAltNames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate presented by the client.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 6;</code>
       * @param value The subjectAltNames to add.
       * @return This builder for chaining.
       */
      public Builder addSubjectAltNames(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSubjectAltNamesIsMutable();
        subjectAltNames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate presented by the client.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 6;</code>
       * @param values The subjectAltNames to add.
       * @return This builder for chaining.
       */
      public Builder addAllSubjectAltNames(
          java.lang.Iterable<java.lang.String> values) {
        ensureSubjectAltNamesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, subjectAltNames_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate presented by the client.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubjectAltNames() {
        subjectAltNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate presented by the client.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 6;</code>
       * @param value The bytes of the subjectAltNames to add.
       * @return This builder for chaining.
       */
      public Builder addSubjectAltNamesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureSubjectAltNamesIsMutable();
        subjectAltNames_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList verifyCertificateSpki_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureVerifyCertificateSpkiIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          verifyCertificateSpki_ = new com.google.protobuf.LazyStringArrayList(verifyCertificateSpki_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <pre>
       * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
       * authorized client certificates.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_spki = 11;</code>
       * @return A list containing the verifyCertificateSpki.
       */
      public com.google.protobuf.ProtocolStringList
          getVerifyCertificateSpkiList() {
        return verifyCertificateSpki_.getUnmodifiableView();
      }
      /**
       * <pre>
       * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
       * authorized client certificates.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_spki = 11;</code>
       * @return The count of verifyCertificateSpki.
       */
      public int getVerifyCertificateSpkiCount() {
        return verifyCertificateSpki_.size();
      }
      /**
       * <pre>
       * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
       * authorized client certificates.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_spki = 11;</code>
       * @param index The index of the element to return.
       * @return The verifyCertificateSpki at the given index.
       */
      public java.lang.String getVerifyCertificateSpki(int index) {
        return verifyCertificateSpki_.get(index);
      }
      /**
       * <pre>
       * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
       * authorized client certificates.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_spki = 11;</code>
       * @param index The index of the value to return.
       * @return The bytes of the verifyCertificateSpki at the given index.
       */
      public com.google.protobuf.ByteString
          getVerifyCertificateSpkiBytes(int index) {
        return verifyCertificateSpki_.getByteString(index);
      }
      /**
       * <pre>
       * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
       * authorized client certificates.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_spki = 11;</code>
       * @param index The index to set the value at.
       * @param value The verifyCertificateSpki to set.
       * @return This builder for chaining.
       */
      public Builder setVerifyCertificateSpki(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureVerifyCertificateSpkiIsMutable();
        verifyCertificateSpki_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
       * authorized client certificates.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_spki = 11;</code>
       * @param value The verifyCertificateSpki to add.
       * @return This builder for chaining.
       */
      public Builder addVerifyCertificateSpki(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureVerifyCertificateSpkiIsMutable();
        verifyCertificateSpki_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
       * authorized client certificates.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_spki = 11;</code>
       * @param values The verifyCertificateSpki to add.
       * @return This builder for chaining.
       */
      public Builder addAllVerifyCertificateSpki(
          java.lang.Iterable<java.lang.String> values) {
        ensureVerifyCertificateSpkiIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, verifyCertificateSpki_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
       * authorized client certificates.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_spki = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearVerifyCertificateSpki() {
        verifyCertificateSpki_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional list of base64-encoded SHA-256 hashes of the SKPIs of
       * authorized client certificates.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_spki = 11;</code>
       * @param value The bytes of the verifyCertificateSpki to add.
       * @return This builder for chaining.
       */
      public Builder addVerifyCertificateSpkiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureVerifyCertificateSpkiIsMutable();
        verifyCertificateSpki_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList verifyCertificateHash_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureVerifyCertificateHashIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          verifyCertificateHash_ = new com.google.protobuf.LazyStringArrayList(verifyCertificateHash_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <pre>
       * An optional list of hex-encoded SHA-256 hashes of the
       * authorized client certificates. Both simple and colon separated
       * formats are acceptable.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_hash = 12;</code>
       * @return A list containing the verifyCertificateHash.
       */
      public com.google.protobuf.ProtocolStringList
          getVerifyCertificateHashList() {
        return verifyCertificateHash_.getUnmodifiableView();
      }
      /**
       * <pre>
       * An optional list of hex-encoded SHA-256 hashes of the
       * authorized client certificates. Both simple and colon separated
       * formats are acceptable.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_hash = 12;</code>
       * @return The count of verifyCertificateHash.
       */
      public int getVerifyCertificateHashCount() {
        return verifyCertificateHash_.size();
      }
      /**
       * <pre>
       * An optional list of hex-encoded SHA-256 hashes of the
       * authorized client certificates. Both simple and colon separated
       * formats are acceptable.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_hash = 12;</code>
       * @param index The index of the element to return.
       * @return The verifyCertificateHash at the given index.
       */
      public java.lang.String getVerifyCertificateHash(int index) {
        return verifyCertificateHash_.get(index);
      }
      /**
       * <pre>
       * An optional list of hex-encoded SHA-256 hashes of the
       * authorized client certificates. Both simple and colon separated
       * formats are acceptable.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_hash = 12;</code>
       * @param index The index of the value to return.
       * @return The bytes of the verifyCertificateHash at the given index.
       */
      public com.google.protobuf.ByteString
          getVerifyCertificateHashBytes(int index) {
        return verifyCertificateHash_.getByteString(index);
      }
      /**
       * <pre>
       * An optional list of hex-encoded SHA-256 hashes of the
       * authorized client certificates. Both simple and colon separated
       * formats are acceptable.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_hash = 12;</code>
       * @param index The index to set the value at.
       * @param value The verifyCertificateHash to set.
       * @return This builder for chaining.
       */
      public Builder setVerifyCertificateHash(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureVerifyCertificateHashIsMutable();
        verifyCertificateHash_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional list of hex-encoded SHA-256 hashes of the
       * authorized client certificates. Both simple and colon separated
       * formats are acceptable.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_hash = 12;</code>
       * @param value The verifyCertificateHash to add.
       * @return This builder for chaining.
       */
      public Builder addVerifyCertificateHash(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureVerifyCertificateHashIsMutable();
        verifyCertificateHash_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional list of hex-encoded SHA-256 hashes of the
       * authorized client certificates. Both simple and colon separated
       * formats are acceptable.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_hash = 12;</code>
       * @param values The verifyCertificateHash to add.
       * @return This builder for chaining.
       */
      public Builder addAllVerifyCertificateHash(
          java.lang.Iterable<java.lang.String> values) {
        ensureVerifyCertificateHashIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, verifyCertificateHash_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional list of hex-encoded SHA-256 hashes of the
       * authorized client certificates. Both simple and colon separated
       * formats are acceptable.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_hash = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearVerifyCertificateHash() {
        verifyCertificateHash_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional list of hex-encoded SHA-256 hashes of the
       * authorized client certificates. Both simple and colon separated
       * formats are acceptable.
       * Note: When both verify_certificate_hash and verify_certificate_spki
       * are specified, a hash matching either value will result in the
       * certificate being accepted.
       * </pre>
       *
       * <code>repeated string verify_certificate_hash = 12;</code>
       * @param value The bytes of the verifyCertificateHash to add.
       * @return This builder for chaining.
       */
      public Builder addVerifyCertificateHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureVerifyCertificateHashIsMutable();
        verifyCertificateHash_.add(value);
        onChanged();
        return this;
      }

      private int minProtocolVersion_ = 0;
      /**
       * <pre>
       * Optional: Minimum TLS protocol version.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol min_protocol_version = 7;</code>
       * @return The enum numeric value on the wire for minProtocolVersion.
       */
      @java.lang.Override public int getMinProtocolVersionValue() {
        return minProtocolVersion_;
      }
      /**
       * <pre>
       * Optional: Minimum TLS protocol version.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol min_protocol_version = 7;</code>
       * @param value The enum numeric value on the wire for minProtocolVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMinProtocolVersionValue(int value) {
        minProtocolVersion_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: Minimum TLS protocol version.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol min_protocol_version = 7;</code>
       * @return The minProtocolVersion.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol getMinProtocolVersion() {
        istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol result = istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.forNumber(minProtocolVersion_);
        return result == null ? istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Optional: Minimum TLS protocol version.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol min_protocol_version = 7;</code>
       * @param value The minProtocolVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMinProtocolVersion(istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        minProtocolVersion_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: Minimum TLS protocol version.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol min_protocol_version = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinProtocolVersion() {
        bitField0_ = (bitField0_ & ~0x00000200);
        minProtocolVersion_ = 0;
        onChanged();
        return this;
      }

      private int maxProtocolVersion_ = 0;
      /**
       * <pre>
       * Optional: Maximum TLS protocol version.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol max_protocol_version = 8;</code>
       * @return The enum numeric value on the wire for maxProtocolVersion.
       */
      @java.lang.Override public int getMaxProtocolVersionValue() {
        return maxProtocolVersion_;
      }
      /**
       * <pre>
       * Optional: Maximum TLS protocol version.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol max_protocol_version = 8;</code>
       * @param value The enum numeric value on the wire for maxProtocolVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMaxProtocolVersionValue(int value) {
        maxProtocolVersion_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: Maximum TLS protocol version.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol max_protocol_version = 8;</code>
       * @return The maxProtocolVersion.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol getMaxProtocolVersion() {
        istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol result = istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.forNumber(maxProtocolVersion_);
        return result == null ? istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Optional: Maximum TLS protocol version.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol max_protocol_version = 8;</code>
       * @param value The maxProtocolVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMaxProtocolVersion(istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings.TLSProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        maxProtocolVersion_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: Maximum TLS protocol version.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ServerTLSSettings.TLSProtocol max_protocol_version = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxProtocolVersion() {
        bitField0_ = (bitField0_ & ~0x00000400);
        maxProtocolVersion_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList cipherSuites_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCipherSuitesIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          cipherSuites_ = new com.google.protobuf.LazyStringArrayList(cipherSuites_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <pre>
       * Optional: If specified, only support the specified cipher list.
       * Otherwise default to the default cipher list supported by Envoy.
       * </pre>
       *
       * <code>repeated string cipher_suites = 9;</code>
       * @return A list containing the cipherSuites.
       */
      public com.google.protobuf.ProtocolStringList
          getCipherSuitesList() {
        return cipherSuites_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Optional: If specified, only support the specified cipher list.
       * Otherwise default to the default cipher list supported by Envoy.
       * </pre>
       *
       * <code>repeated string cipher_suites = 9;</code>
       * @return The count of cipherSuites.
       */
      public int getCipherSuitesCount() {
        return cipherSuites_.size();
      }
      /**
       * <pre>
       * Optional: If specified, only support the specified cipher list.
       * Otherwise default to the default cipher list supported by Envoy.
       * </pre>
       *
       * <code>repeated string cipher_suites = 9;</code>
       * @param index The index of the element to return.
       * @return The cipherSuites at the given index.
       */
      public java.lang.String getCipherSuites(int index) {
        return cipherSuites_.get(index);
      }
      /**
       * <pre>
       * Optional: If specified, only support the specified cipher list.
       * Otherwise default to the default cipher list supported by Envoy.
       * </pre>
       *
       * <code>repeated string cipher_suites = 9;</code>
       * @param index The index of the value to return.
       * @return The bytes of the cipherSuites at the given index.
       */
      public com.google.protobuf.ByteString
          getCipherSuitesBytes(int index) {
        return cipherSuites_.getByteString(index);
      }
      /**
       * <pre>
       * Optional: If specified, only support the specified cipher list.
       * Otherwise default to the default cipher list supported by Envoy.
       * </pre>
       *
       * <code>repeated string cipher_suites = 9;</code>
       * @param index The index to set the value at.
       * @param value The cipherSuites to set.
       * @return This builder for chaining.
       */
      public Builder setCipherSuites(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCipherSuitesIsMutable();
        cipherSuites_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: If specified, only support the specified cipher list.
       * Otherwise default to the default cipher list supported by Envoy.
       * </pre>
       *
       * <code>repeated string cipher_suites = 9;</code>
       * @param value The cipherSuites to add.
       * @return This builder for chaining.
       */
      public Builder addCipherSuites(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCipherSuitesIsMutable();
        cipherSuites_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: If specified, only support the specified cipher list.
       * Otherwise default to the default cipher list supported by Envoy.
       * </pre>
       *
       * <code>repeated string cipher_suites = 9;</code>
       * @param values The cipherSuites to add.
       * @return This builder for chaining.
       */
      public Builder addAllCipherSuites(
          java.lang.Iterable<java.lang.String> values) {
        ensureCipherSuitesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cipherSuites_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: If specified, only support the specified cipher list.
       * Otherwise default to the default cipher list supported by Envoy.
       * </pre>
       *
       * <code>repeated string cipher_suites = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCipherSuites() {
        cipherSuites_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: If specified, only support the specified cipher list.
       * Otherwise default to the default cipher list supported by Envoy.
       * </pre>
       *
       * <code>repeated string cipher_suites = 9;</code>
       * @param value The bytes of the cipherSuites to add.
       * @return This builder for chaining.
       */
      public Builder addCipherSuitesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureCipherSuitesIsMutable();
        cipherSuites_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.ServerTLSSettings)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.ServerTLSSettings)
    private static final istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings();
    }

    public static istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServerTLSSettings>
        PARSER = new com.google.protobuf.AbstractParser<ServerTLSSettings>() {
      @java.lang.Override
      public ServerTLSSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ServerTLSSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServerTLSSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.GatewayOuterClass.ServerTLSSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_Gateway_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_Gateway_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_Gateway_SelectorEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_Gateway_SelectorEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_Server_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_Server_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_Port_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_Port_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_ServerTLSSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_ServerTLSSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!networking/v1alpha3/gateway.proto\022\031ist" +
      "io.networking.v1alpha3\032\037google/api/field" +
      "_behavior.proto\"\274\001\n\007Gateway\0227\n\007servers\030\001" +
      " \003(\0132!.istio.networking.v1alpha3.ServerB" +
      "\003\340A\002\022G\n\010selector\030\002 \003(\01320.istio.networkin" +
      "g.v1alpha3.Gateway.SelectorEntryB\003\340A\002\032/\n" +
      "\rSelectorEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001" +
      "(\t:\0028\001\"\301\001\n\006Server\0222\n\004port\030\001 \001(\0132\037.istio." +
      "networking.v1alpha3.PortB\003\340A\002\022\014\n\004bind\030\004 " +
      "\001(\t\022\022\n\005hosts\030\002 \003(\tB\003\340A\002\0229\n\003tls\030\003 \001(\0132,.i" +
      "stio.networking.v1alpha3.ServerTLSSettin" +
      "gs\022\030\n\020default_endpoint\030\005 \001(\t\022\014\n\004name\030\006 \001" +
      "(\t\"Z\n\004Port\022\023\n\006number\030\001 \001(\rB\003\340A\002\022\025\n\010proto" +
      "col\030\002 \001(\tB\003\340A\002\022\021\n\004name\030\003 \001(\tB\003\340A\002\022\023\n\013tar" +
      "get_port\030\004 \001(\r\"\243\005\n\021ServerTLSSettings\022\026\n\016" +
      "https_redirect\030\001 \001(\010\022B\n\004mode\030\002 \001(\01624.ist" +
      "io.networking.v1alpha3.ServerTLSSettings" +
      ".TLSmode\022\032\n\022server_certificate\030\003 \001(\t\022\023\n\013" +
      "private_key\030\004 \001(\t\022\027\n\017ca_certificates\030\005 \001" +
      "(\t\022\027\n\017credential_name\030\n \001(\t\022\031\n\021subject_a" +
      "lt_names\030\006 \003(\t\022\037\n\027verify_certificate_spk" +
      "i\030\013 \003(\t\022\037\n\027verify_certificate_hash\030\014 \003(\t" +
      "\022V\n\024min_protocol_version\030\007 \001(\01628.istio.n" +
      "etworking.v1alpha3.ServerTLSSettings.TLS" +
      "Protocol\022V\n\024max_protocol_version\030\010 \001(\01628" +
      ".istio.networking.v1alpha3.ServerTLSSett" +
      "ings.TLSProtocol\022\025\n\rcipher_suites\030\t \003(\t\"" +
      "Z\n\007TLSmode\022\017\n\013PASSTHROUGH\020\000\022\n\n\006SIMPLE\020\001\022" +
      "\n\n\006MUTUAL\020\002\022\024\n\020AUTO_PASSTHROUGH\020\003\022\020\n\014IST" +
      "IO_MUTUAL\020\004\"O\n\013TLSProtocol\022\014\n\010TLS_AUTO\020\000" +
      "\022\013\n\007TLSV1_0\020\001\022\013\n\007TLSV1_1\020\002\022\013\n\007TLSV1_2\020\003\022" +
      "\013\n\007TLSV1_3\020\004B\"Z istio.io/api/networking/" +
      "v1alpha3b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.FieldBehaviorProto.getDescriptor(),
        });
    internal_static_istio_networking_v1alpha3_Gateway_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_istio_networking_v1alpha3_Gateway_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_Gateway_descriptor,
        new java.lang.String[] { "Servers", "Selector", });
    internal_static_istio_networking_v1alpha3_Gateway_SelectorEntry_descriptor =
      internal_static_istio_networking_v1alpha3_Gateway_descriptor.getNestedTypes().get(0);
    internal_static_istio_networking_v1alpha3_Gateway_SelectorEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_Gateway_SelectorEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_istio_networking_v1alpha3_Server_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_istio_networking_v1alpha3_Server_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_Server_descriptor,
        new java.lang.String[] { "Port", "Bind", "Hosts", "Tls", "DefaultEndpoint", "Name", });
    internal_static_istio_networking_v1alpha3_Port_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_istio_networking_v1alpha3_Port_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_Port_descriptor,
        new java.lang.String[] { "Number", "Protocol", "Name", "TargetPort", });
    internal_static_istio_networking_v1alpha3_ServerTLSSettings_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_istio_networking_v1alpha3_ServerTLSSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_ServerTLSSettings_descriptor,
        new java.lang.String[] { "HttpsRedirect", "Mode", "ServerCertificate", "PrivateKey", "CaCertificates", "CredentialName", "SubjectAltNames", "VerifyCertificateSpki", "VerifyCertificateHash", "MinProtocolVersion", "MaxProtocolVersion", "CipherSuites", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.FieldBehaviorProto.fieldBehavior);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.FieldBehaviorProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
