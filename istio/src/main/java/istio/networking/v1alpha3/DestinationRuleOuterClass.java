// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networking/v1alpha3/destination_rule.proto

package istio.networking.v1alpha3;

public final class DestinationRuleOuterClass {
  private DestinationRuleOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DestinationRuleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.DestinationRule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
     * services that do not exist in the service registry will be ignored.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews" will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. _To avoid
     * potential misconfigurations, it is recommended to always use fully
     * qualified domain names over short names._
     * Note that the host field applies to both HTTP and TCP services.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The host.
     */
    java.lang.String getHost();
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
     * services that do not exist in the service registry will be ignored.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews" will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. _To avoid
     * potential misconfigurations, it is recommended to always use fully
     * qualified domain names over short names._
     * Note that the host field applies to both HTTP and TCP services.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for host.
     */
    com.google.protobuf.ByteString
        getHostBytes();

    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     * @return Whether the trafficPolicy field is set.
     */
    boolean hasTrafficPolicy();
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     * @return The trafficPolicy.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy getTrafficPolicy();
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder getTrafficPolicyOrBuilder();

    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.Subset> 
        getSubsetsList();
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.Subset getSubsets(int index);
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    int getSubsetsCount();
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.SubsetOrBuilder> 
        getSubsetsOrBuilderList();
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.SubsetOrBuilder getSubsetsOrBuilder(
        int index);

    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @return A list containing the exportTo.
     */
    java.util.List<java.lang.String>
        getExportToList();
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @return The count of exportTo.
     */
    int getExportToCount();
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @param index The index of the element to return.
     * @return The exportTo at the given index.
     */
    java.lang.String getExportTo(int index);
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the exportTo at the given index.
     */
    com.google.protobuf.ByteString
        getExportToBytes(int index);
  }
  /**
   * <pre>
   * DestinationRule defines policies that apply to traffic intended for a service
   * after routing has occurred.
   * &lt;!-- crd generation tags
   * +cue-gen:DestinationRule:groupName:networking.istio.io
   * +cue-gen:DestinationRule:version:v1alpha3
   * +cue-gen:DestinationRule:storageVersion
   * +cue-gen:DestinationRule:annotations:helm.sh/resource-policy=keep
   * +cue-gen:DestinationRule:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
   * +cue-gen:DestinationRule:subresource:status
   * +cue-gen:DestinationRule:scope:Namespaced
   * +cue-gen:DestinationRule:resource:categories=istio-io,networking-istio-io,shortNames=dr
   * +cue-gen:DestinationRule:printerColumn:name=Host,type=string,JSONPath=.spec.host,description="The name of a service from the service registry"
   * +cue-gen:DestinationRule:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp 
   * representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. 
   * Clients may not set this value. It is represented in RFC3339 form and is in UTC.
   * Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
   * +cue-gen:DestinationRule:preserveUnknownFields:false
   * --&gt;
   * &lt;!-- go code generation tags
   * +kubetype-gen
   * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
   * +genclient
   * +k8s:deepcopy-gen=true
   * --&gt;
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.DestinationRule}
   */
  public static final class DestinationRule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.DestinationRule)
      DestinationRuleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DestinationRule.newBuilder() to construct.
    private DestinationRule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DestinationRule() {
      host_ = "";
      subsets_ = java.util.Collections.emptyList();
      exportTo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DestinationRule();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_DestinationRule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_DestinationRule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule.class, istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule.Builder.class);
    }

    public static final int HOST_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object host_ = "";
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
     * services that do not exist in the service registry will be ignored.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews" will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. _To avoid
     * potential misconfigurations, it is recommended to always use fully
     * qualified domain names over short names._
     * Note that the host field applies to both HTTP and TCP services.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The host.
     */
    @java.lang.Override
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        host_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
     * services that do not exist in the service registry will be ignored.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews" will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. _To avoid
     * potential misconfigurations, it is recommended to always use fully
     * qualified domain names over short names._
     * Note that the host field applies to both HTTP and TCP services.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for host.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRAFFIC_POLICY_FIELD_NUMBER = 2;
    private istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy trafficPolicy_;
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     * @return Whether the trafficPolicy field is set.
     */
    @java.lang.Override
    public boolean hasTrafficPolicy() {
      return trafficPolicy_ != null;
    }
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     * @return The trafficPolicy.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy getTrafficPolicy() {
      return trafficPolicy_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
    }
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder getTrafficPolicyOrBuilder() {
      return trafficPolicy_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
    }

    public static final int SUBSETS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.Subset> subsets_;
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    @java.lang.Override
    public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.Subset> getSubsetsList() {
      return subsets_;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.SubsetOrBuilder> 
        getSubsetsOrBuilderList() {
      return subsets_;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    @java.lang.Override
    public int getSubsetsCount() {
      return subsets_.size();
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.Subset getSubsets(int index) {
      return subsets_.get(index);
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.SubsetOrBuilder getSubsetsOrBuilder(
        int index) {
      return subsets_.get(index);
    }

    public static final int EXPORT_TO_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList exportTo_;
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @return A list containing the exportTo.
     */
    public com.google.protobuf.ProtocolStringList
        getExportToList() {
      return exportTo_;
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @return The count of exportTo.
     */
    public int getExportToCount() {
      return exportTo_.size();
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @param index The index of the element to return.
     * @return The exportTo at the given index.
     */
    public java.lang.String getExportTo(int index) {
      return exportTo_.get(index);
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the exportTo at the given index.
     */
    public com.google.protobuf.ByteString
        getExportToBytes(int index) {
      return exportTo_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(host_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, host_);
      }
      if (trafficPolicy_ != null) {
        output.writeMessage(2, getTrafficPolicy());
      }
      for (int i = 0; i < subsets_.size(); i++) {
        output.writeMessage(3, subsets_.get(i));
      }
      for (int i = 0; i < exportTo_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, exportTo_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(host_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, host_);
      }
      if (trafficPolicy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTrafficPolicy());
      }
      for (int i = 0; i < subsets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, subsets_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < exportTo_.size(); i++) {
          dataSize += computeStringSizeNoTag(exportTo_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getExportToList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule other = (istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule) obj;

      if (!getHost()
          .equals(other.getHost())) return false;
      if (hasTrafficPolicy() != other.hasTrafficPolicy()) return false;
      if (hasTrafficPolicy()) {
        if (!getTrafficPolicy()
            .equals(other.getTrafficPolicy())) return false;
      }
      if (!getSubsetsList()
          .equals(other.getSubsetsList())) return false;
      if (!getExportToList()
          .equals(other.getExportToList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HOST_FIELD_NUMBER;
      hash = (53 * hash) + getHost().hashCode();
      if (hasTrafficPolicy()) {
        hash = (37 * hash) + TRAFFIC_POLICY_FIELD_NUMBER;
        hash = (53 * hash) + getTrafficPolicy().hashCode();
      }
      if (getSubsetsCount() > 0) {
        hash = (37 * hash) + SUBSETS_FIELD_NUMBER;
        hash = (53 * hash) + getSubsetsList().hashCode();
      }
      if (getExportToCount() > 0) {
        hash = (37 * hash) + EXPORT_TO_FIELD_NUMBER;
        hash = (53 * hash) + getExportToList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * DestinationRule defines policies that apply to traffic intended for a service
     * after routing has occurred.
     * &lt;!-- crd generation tags
     * +cue-gen:DestinationRule:groupName:networking.istio.io
     * +cue-gen:DestinationRule:version:v1alpha3
     * +cue-gen:DestinationRule:storageVersion
     * +cue-gen:DestinationRule:annotations:helm.sh/resource-policy=keep
     * +cue-gen:DestinationRule:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
     * +cue-gen:DestinationRule:subresource:status
     * +cue-gen:DestinationRule:scope:Namespaced
     * +cue-gen:DestinationRule:resource:categories=istio-io,networking-istio-io,shortNames=dr
     * +cue-gen:DestinationRule:printerColumn:name=Host,type=string,JSONPath=.spec.host,description="The name of a service from the service registry"
     * +cue-gen:DestinationRule:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp 
     * representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. 
     * Clients may not set this value. It is represented in RFC3339 form and is in UTC.
     * Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
     * +cue-gen:DestinationRule:preserveUnknownFields:false
     * --&gt;
     * &lt;!-- go code generation tags
     * +kubetype-gen
     * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
     * +genclient
     * +k8s:deepcopy-gen=true
     * --&gt;
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.DestinationRule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.DestinationRule)
        istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_DestinationRule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_DestinationRule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule.class, istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        host_ = "";
        trafficPolicy_ = null;
        if (trafficPolicyBuilder_ != null) {
          trafficPolicyBuilder_.dispose();
          trafficPolicyBuilder_ = null;
        }
        if (subsetsBuilder_ == null) {
          subsets_ = java.util.Collections.emptyList();
        } else {
          subsets_ = null;
          subsetsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        exportTo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_DestinationRule_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule getDefaultInstanceForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule build() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule buildPartial() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule result = new istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule result) {
        if (subsetsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            subsets_ = java.util.Collections.unmodifiableList(subsets_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.subsets_ = subsets_;
        } else {
          result.subsets_ = subsetsBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          exportTo_ = exportTo_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.exportTo_ = exportTo_;
      }

      private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.host_ = host_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.trafficPolicy_ = trafficPolicyBuilder_ == null
              ? trafficPolicy_
              : trafficPolicyBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule) {
          return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule other) {
        if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule.getDefaultInstance()) return this;
        if (!other.getHost().isEmpty()) {
          host_ = other.host_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasTrafficPolicy()) {
          mergeTrafficPolicy(other.getTrafficPolicy());
        }
        if (subsetsBuilder_ == null) {
          if (!other.subsets_.isEmpty()) {
            if (subsets_.isEmpty()) {
              subsets_ = other.subsets_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSubsetsIsMutable();
              subsets_.addAll(other.subsets_);
            }
            onChanged();
          }
        } else {
          if (!other.subsets_.isEmpty()) {
            if (subsetsBuilder_.isEmpty()) {
              subsetsBuilder_.dispose();
              subsetsBuilder_ = null;
              subsets_ = other.subsets_;
              bitField0_ = (bitField0_ & ~0x00000004);
              subsetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSubsetsFieldBuilder() : null;
            } else {
              subsetsBuilder_.addAllMessages(other.subsets_);
            }
          }
        }
        if (!other.exportTo_.isEmpty()) {
          if (exportTo_.isEmpty()) {
            exportTo_ = other.exportTo_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureExportToIsMutable();
            exportTo_.addAll(other.exportTo_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                host_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getTrafficPolicyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                istio.networking.v1alpha3.DestinationRuleOuterClass.Subset m =
                    input.readMessage(
                        istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.parser(),
                        extensionRegistry);
                if (subsetsBuilder_ == null) {
                  ensureSubsetsIsMutable();
                  subsets_.add(m);
                } else {
                  subsetsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureExportToIsMutable();
                exportTo_.add(s);
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object host_ = "";
      /**
       * <pre>
       * The name of a service from the service registry. Service
       * names are looked up from the platform's service registry (e.g.,
       * Kubernetes services, Consul services, etc.) and from the hosts
       * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
       * services that do not exist in the service registry will be ignored.
       * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
       * instead of "reviews.default.svc.cluster.local"), Istio will interpret
       * the short name based on the namespace of the rule, not the service. A
       * rule in the "default" namespace containing a host "reviews" will be
       * interpreted as "reviews.default.svc.cluster.local", irrespective of
       * the actual namespace associated with the reviews service. _To avoid
       * potential misconfigurations, it is recommended to always use fully
       * qualified domain names over short names._
       * Note that the host field applies to both HTTP and TCP services.
       * </pre>
       *
       * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The host.
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of a service from the service registry. Service
       * names are looked up from the platform's service registry (e.g.,
       * Kubernetes services, Consul services, etc.) and from the hosts
       * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
       * services that do not exist in the service registry will be ignored.
       * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
       * instead of "reviews.default.svc.cluster.local"), Istio will interpret
       * the short name based on the namespace of the rule, not the service. A
       * rule in the "default" namespace containing a host "reviews" will be
       * interpreted as "reviews.default.svc.cluster.local", irrespective of
       * the actual namespace associated with the reviews service. _To avoid
       * potential misconfigurations, it is recommended to always use fully
       * qualified domain names over short names._
       * Note that the host field applies to both HTTP and TCP services.
       * </pre>
       *
       * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The bytes for host.
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of a service from the service registry. Service
       * names are looked up from the platform's service registry (e.g.,
       * Kubernetes services, Consul services, etc.) and from the hosts
       * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
       * services that do not exist in the service registry will be ignored.
       * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
       * instead of "reviews.default.svc.cluster.local"), Istio will interpret
       * the short name based on the namespace of the rule, not the service. A
       * rule in the "default" namespace containing a host "reviews" will be
       * interpreted as "reviews.default.svc.cluster.local", irrespective of
       * the actual namespace associated with the reviews service. _To avoid
       * potential misconfigurations, it is recommended to always use fully
       * qualified domain names over short names._
       * Note that the host field applies to both HTTP and TCP services.
       * </pre>
       *
       * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The host to set.
       * @return This builder for chaining.
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        host_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of a service from the service registry. Service
       * names are looked up from the platform's service registry (e.g.,
       * Kubernetes services, Consul services, etc.) and from the hosts
       * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
       * services that do not exist in the service registry will be ignored.
       * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
       * instead of "reviews.default.svc.cluster.local"), Istio will interpret
       * the short name based on the namespace of the rule, not the service. A
       * rule in the "default" namespace containing a host "reviews" will be
       * interpreted as "reviews.default.svc.cluster.local", irrespective of
       * the actual namespace associated with the reviews service. _To avoid
       * potential misconfigurations, it is recommended to always use fully
       * qualified domain names over short names._
       * Note that the host field applies to both HTTP and TCP services.
       * </pre>
       *
       * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearHost() {
        host_ = getDefaultInstance().getHost();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of a service from the service registry. Service
       * names are looked up from the platform's service registry (e.g.,
       * Kubernetes services, Consul services, etc.) and from the hosts
       * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
       * services that do not exist in the service registry will be ignored.
       * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
       * instead of "reviews.default.svc.cluster.local"), Istio will interpret
       * the short name based on the namespace of the rule, not the service. A
       * rule in the "default" namespace containing a host "reviews" will be
       * interpreted as "reviews.default.svc.cluster.local", irrespective of
       * the actual namespace associated with the reviews service. _To avoid
       * potential misconfigurations, it is recommended to always use fully
       * qualified domain names over short names._
       * Note that the host field applies to both HTTP and TCP services.
       * </pre>
       *
       * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes for host to set.
       * @return This builder for chaining.
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        host_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy trafficPolicy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder> trafficPolicyBuilder_;
      /**
       * <pre>
       * Traffic policies to apply (load balancing policy, connection pool
       * sizes, outlier detection).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
       * @return Whether the trafficPolicy field is set.
       */
      public boolean hasTrafficPolicy() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Traffic policies to apply (load balancing policy, connection pool
       * sizes, outlier detection).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
       * @return The trafficPolicy.
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy getTrafficPolicy() {
        if (trafficPolicyBuilder_ == null) {
          return trafficPolicy_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
        } else {
          return trafficPolicyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Traffic policies to apply (load balancing policy, connection pool
       * sizes, outlier detection).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
       */
      public Builder setTrafficPolicy(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy value) {
        if (trafficPolicyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trafficPolicy_ = value;
        } else {
          trafficPolicyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Traffic policies to apply (load balancing policy, connection pool
       * sizes, outlier detection).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
       */
      public Builder setTrafficPolicy(
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder builderForValue) {
        if (trafficPolicyBuilder_ == null) {
          trafficPolicy_ = builderForValue.build();
        } else {
          trafficPolicyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Traffic policies to apply (load balancing policy, connection pool
       * sizes, outlier detection).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
       */
      public Builder mergeTrafficPolicy(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy value) {
        if (trafficPolicyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            trafficPolicy_ != null &&
            trafficPolicy_ != istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance()) {
            getTrafficPolicyBuilder().mergeFrom(value);
          } else {
            trafficPolicy_ = value;
          }
        } else {
          trafficPolicyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Traffic policies to apply (load balancing policy, connection pool
       * sizes, outlier detection).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
       */
      public Builder clearTrafficPolicy() {
        bitField0_ = (bitField0_ & ~0x00000002);
        trafficPolicy_ = null;
        if (trafficPolicyBuilder_ != null) {
          trafficPolicyBuilder_.dispose();
          trafficPolicyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Traffic policies to apply (load balancing policy, connection pool
       * sizes, outlier detection).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder getTrafficPolicyBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTrafficPolicyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Traffic policies to apply (load balancing policy, connection pool
       * sizes, outlier detection).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder getTrafficPolicyOrBuilder() {
        if (trafficPolicyBuilder_ != null) {
          return trafficPolicyBuilder_.getMessageOrBuilder();
        } else {
          return trafficPolicy_ == null ?
              istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
        }
      }
      /**
       * <pre>
       * Traffic policies to apply (load balancing policy, connection pool
       * sizes, outlier detection).
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder> 
          getTrafficPolicyFieldBuilder() {
        if (trafficPolicyBuilder_ == null) {
          trafficPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder>(
                  getTrafficPolicy(),
                  getParentForChildren(),
                  isClean());
          trafficPolicy_ = null;
        }
        return trafficPolicyBuilder_;
      }

      private java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.Subset> subsets_ =
        java.util.Collections.emptyList();
      private void ensureSubsetsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          subsets_ = new java.util.ArrayList<istio.networking.v1alpha3.DestinationRuleOuterClass.Subset>(subsets_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.Subset, istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.SubsetOrBuilder> subsetsBuilder_;

      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.Subset> getSubsetsList() {
        if (subsetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subsets_);
        } else {
          return subsetsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public int getSubsetsCount() {
        if (subsetsBuilder_ == null) {
          return subsets_.size();
        } else {
          return subsetsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.Subset getSubsets(int index) {
        if (subsetsBuilder_ == null) {
          return subsets_.get(index);
        } else {
          return subsetsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public Builder setSubsets(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.Subset value) {
        if (subsetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubsetsIsMutable();
          subsets_.set(index, value);
          onChanged();
        } else {
          subsetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public Builder setSubsets(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder builderForValue) {
        if (subsetsBuilder_ == null) {
          ensureSubsetsIsMutable();
          subsets_.set(index, builderForValue.build());
          onChanged();
        } else {
          subsetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public Builder addSubsets(istio.networking.v1alpha3.DestinationRuleOuterClass.Subset value) {
        if (subsetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubsetsIsMutable();
          subsets_.add(value);
          onChanged();
        } else {
          subsetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public Builder addSubsets(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.Subset value) {
        if (subsetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubsetsIsMutable();
          subsets_.add(index, value);
          onChanged();
        } else {
          subsetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public Builder addSubsets(
          istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder builderForValue) {
        if (subsetsBuilder_ == null) {
          ensureSubsetsIsMutable();
          subsets_.add(builderForValue.build());
          onChanged();
        } else {
          subsetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public Builder addSubsets(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder builderForValue) {
        if (subsetsBuilder_ == null) {
          ensureSubsetsIsMutable();
          subsets_.add(index, builderForValue.build());
          onChanged();
        } else {
          subsetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public Builder addAllSubsets(
          java.lang.Iterable<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.Subset> values) {
        if (subsetsBuilder_ == null) {
          ensureSubsetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, subsets_);
          onChanged();
        } else {
          subsetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public Builder clearSubsets() {
        if (subsetsBuilder_ == null) {
          subsets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          subsetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public Builder removeSubsets(int index) {
        if (subsetsBuilder_ == null) {
          ensureSubsetsIsMutable();
          subsets_.remove(index);
          onChanged();
        } else {
          subsetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder getSubsetsBuilder(
          int index) {
        return getSubsetsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.SubsetOrBuilder getSubsetsOrBuilder(
          int index) {
        if (subsetsBuilder_ == null) {
          return subsets_.get(index);  } else {
          return subsetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.SubsetOrBuilder> 
           getSubsetsOrBuilderList() {
        if (subsetsBuilder_ != null) {
          return subsetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subsets_);
        }
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder addSubsetsBuilder() {
        return getSubsetsFieldBuilder().addBuilder(
            istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.getDefaultInstance());
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder addSubsetsBuilder(
          int index) {
        return getSubsetsFieldBuilder().addBuilder(
            index, istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.getDefaultInstance());
      }
      /**
       * <pre>
       * One or more named sets that represent individual versions of a
       * service. Traffic policies can be overridden at subset level.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
       */
      public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder> 
           getSubsetsBuilderList() {
        return getSubsetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.Subset, istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.SubsetOrBuilder> 
          getSubsetsFieldBuilder() {
        if (subsetsBuilder_ == null) {
          subsetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.Subset, istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.SubsetOrBuilder>(
                  subsets_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          subsets_ = null;
        }
        return subsetsBuilder_;
      }

      private com.google.protobuf.LazyStringList exportTo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExportToIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          exportTo_ = new com.google.protobuf.LazyStringArrayList(exportTo_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * A list of namespaces to which this destination rule is exported.
       * The resolution of a destination rule to apply to a service occurs in the
       * context of a hierarchy of namespaces. Exporting a destination rule allows
       * it to be included in the resolution hierarchy for services in
       * other namespaces. This feature provides a mechanism for service owners
       * and mesh administrators to control the visibility of destination rules
       * across namespace boundaries.
       * If no namespaces are specified then the destination rule is exported to all
       * namespaces by default.
       * The value "." is reserved and defines an export to the same namespace that
       * the destination rule is declared in. Similarly, the value "*" is reserved and
       * defines an export to all namespaces.
       * NOTE: in the current release, the `exportTo` value is restricted to
       * "." or "*" (i.e., the current namespace or all namespaces).
       * </pre>
       *
       * <code>repeated string export_to = 4;</code>
       * @return A list containing the exportTo.
       */
      public com.google.protobuf.ProtocolStringList
          getExportToList() {
        return exportTo_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of namespaces to which this destination rule is exported.
       * The resolution of a destination rule to apply to a service occurs in the
       * context of a hierarchy of namespaces. Exporting a destination rule allows
       * it to be included in the resolution hierarchy for services in
       * other namespaces. This feature provides a mechanism for service owners
       * and mesh administrators to control the visibility of destination rules
       * across namespace boundaries.
       * If no namespaces are specified then the destination rule is exported to all
       * namespaces by default.
       * The value "." is reserved and defines an export to the same namespace that
       * the destination rule is declared in. Similarly, the value "*" is reserved and
       * defines an export to all namespaces.
       * NOTE: in the current release, the `exportTo` value is restricted to
       * "." or "*" (i.e., the current namespace or all namespaces).
       * </pre>
       *
       * <code>repeated string export_to = 4;</code>
       * @return The count of exportTo.
       */
      public int getExportToCount() {
        return exportTo_.size();
      }
      /**
       * <pre>
       * A list of namespaces to which this destination rule is exported.
       * The resolution of a destination rule to apply to a service occurs in the
       * context of a hierarchy of namespaces. Exporting a destination rule allows
       * it to be included in the resolution hierarchy for services in
       * other namespaces. This feature provides a mechanism for service owners
       * and mesh administrators to control the visibility of destination rules
       * across namespace boundaries.
       * If no namespaces are specified then the destination rule is exported to all
       * namespaces by default.
       * The value "." is reserved and defines an export to the same namespace that
       * the destination rule is declared in. Similarly, the value "*" is reserved and
       * defines an export to all namespaces.
       * NOTE: in the current release, the `exportTo` value is restricted to
       * "." or "*" (i.e., the current namespace or all namespaces).
       * </pre>
       *
       * <code>repeated string export_to = 4;</code>
       * @param index The index of the element to return.
       * @return The exportTo at the given index.
       */
      public java.lang.String getExportTo(int index) {
        return exportTo_.get(index);
      }
      /**
       * <pre>
       * A list of namespaces to which this destination rule is exported.
       * The resolution of a destination rule to apply to a service occurs in the
       * context of a hierarchy of namespaces. Exporting a destination rule allows
       * it to be included in the resolution hierarchy for services in
       * other namespaces. This feature provides a mechanism for service owners
       * and mesh administrators to control the visibility of destination rules
       * across namespace boundaries.
       * If no namespaces are specified then the destination rule is exported to all
       * namespaces by default.
       * The value "." is reserved and defines an export to the same namespace that
       * the destination rule is declared in. Similarly, the value "*" is reserved and
       * defines an export to all namespaces.
       * NOTE: in the current release, the `exportTo` value is restricted to
       * "." or "*" (i.e., the current namespace or all namespaces).
       * </pre>
       *
       * <code>repeated string export_to = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the exportTo at the given index.
       */
      public com.google.protobuf.ByteString
          getExportToBytes(int index) {
        return exportTo_.getByteString(index);
      }
      /**
       * <pre>
       * A list of namespaces to which this destination rule is exported.
       * The resolution of a destination rule to apply to a service occurs in the
       * context of a hierarchy of namespaces. Exporting a destination rule allows
       * it to be included in the resolution hierarchy for services in
       * other namespaces. This feature provides a mechanism for service owners
       * and mesh administrators to control the visibility of destination rules
       * across namespace boundaries.
       * If no namespaces are specified then the destination rule is exported to all
       * namespaces by default.
       * The value "." is reserved and defines an export to the same namespace that
       * the destination rule is declared in. Similarly, the value "*" is reserved and
       * defines an export to all namespaces.
       * NOTE: in the current release, the `exportTo` value is restricted to
       * "." or "*" (i.e., the current namespace or all namespaces).
       * </pre>
       *
       * <code>repeated string export_to = 4;</code>
       * @param index The index to set the value at.
       * @param value The exportTo to set.
       * @return This builder for chaining.
       */
      public Builder setExportTo(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureExportToIsMutable();
        exportTo_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of namespaces to which this destination rule is exported.
       * The resolution of a destination rule to apply to a service occurs in the
       * context of a hierarchy of namespaces. Exporting a destination rule allows
       * it to be included in the resolution hierarchy for services in
       * other namespaces. This feature provides a mechanism for service owners
       * and mesh administrators to control the visibility of destination rules
       * across namespace boundaries.
       * If no namespaces are specified then the destination rule is exported to all
       * namespaces by default.
       * The value "." is reserved and defines an export to the same namespace that
       * the destination rule is declared in. Similarly, the value "*" is reserved and
       * defines an export to all namespaces.
       * NOTE: in the current release, the `exportTo` value is restricted to
       * "." or "*" (i.e., the current namespace or all namespaces).
       * </pre>
       *
       * <code>repeated string export_to = 4;</code>
       * @param value The exportTo to add.
       * @return This builder for chaining.
       */
      public Builder addExportTo(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureExportToIsMutable();
        exportTo_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of namespaces to which this destination rule is exported.
       * The resolution of a destination rule to apply to a service occurs in the
       * context of a hierarchy of namespaces. Exporting a destination rule allows
       * it to be included in the resolution hierarchy for services in
       * other namespaces. This feature provides a mechanism for service owners
       * and mesh administrators to control the visibility of destination rules
       * across namespace boundaries.
       * If no namespaces are specified then the destination rule is exported to all
       * namespaces by default.
       * The value "." is reserved and defines an export to the same namespace that
       * the destination rule is declared in. Similarly, the value "*" is reserved and
       * defines an export to all namespaces.
       * NOTE: in the current release, the `exportTo` value is restricted to
       * "." or "*" (i.e., the current namespace or all namespaces).
       * </pre>
       *
       * <code>repeated string export_to = 4;</code>
       * @param values The exportTo to add.
       * @return This builder for chaining.
       */
      public Builder addAllExportTo(
          java.lang.Iterable<java.lang.String> values) {
        ensureExportToIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, exportTo_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of namespaces to which this destination rule is exported.
       * The resolution of a destination rule to apply to a service occurs in the
       * context of a hierarchy of namespaces. Exporting a destination rule allows
       * it to be included in the resolution hierarchy for services in
       * other namespaces. This feature provides a mechanism for service owners
       * and mesh administrators to control the visibility of destination rules
       * across namespace boundaries.
       * If no namespaces are specified then the destination rule is exported to all
       * namespaces by default.
       * The value "." is reserved and defines an export to the same namespace that
       * the destination rule is declared in. Similarly, the value "*" is reserved and
       * defines an export to all namespaces.
       * NOTE: in the current release, the `exportTo` value is restricted to
       * "." or "*" (i.e., the current namespace or all namespaces).
       * </pre>
       *
       * <code>repeated string export_to = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearExportTo() {
        exportTo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of namespaces to which this destination rule is exported.
       * The resolution of a destination rule to apply to a service occurs in the
       * context of a hierarchy of namespaces. Exporting a destination rule allows
       * it to be included in the resolution hierarchy for services in
       * other namespaces. This feature provides a mechanism for service owners
       * and mesh administrators to control the visibility of destination rules
       * across namespace boundaries.
       * If no namespaces are specified then the destination rule is exported to all
       * namespaces by default.
       * The value "." is reserved and defines an export to the same namespace that
       * the destination rule is declared in. Similarly, the value "*" is reserved and
       * defines an export to all namespaces.
       * NOTE: in the current release, the `exportTo` value is restricted to
       * "." or "*" (i.e., the current namespace or all namespaces).
       * </pre>
       *
       * <code>repeated string export_to = 4;</code>
       * @param value The bytes of the exportTo to add.
       * @return This builder for chaining.
       */
      public Builder addExportToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureExportToIsMutable();
        exportTo_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.DestinationRule)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.DestinationRule)
    private static final istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule();
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DestinationRule>
        PARSER = new com.google.protobuf.AbstractParser<DestinationRule>() {
      @java.lang.Override
      public DestinationRule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DestinationRule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DestinationRule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.DestinationRule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrafficPolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.TrafficPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     * @return Whether the loadBalancer field is set.
     */
    boolean hasLoadBalancer();
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     * @return The loadBalancer.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings getLoadBalancer();
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder();

    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     * @return Whether the connectionPool field is set.
     */
    boolean hasConnectionPool();
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     * @return The connectionPool.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings getConnectionPool();
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder();

    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     * @return Whether the outlierDetection field is set.
     */
    boolean hasOutlierDetection();
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     * @return The outlierDetection.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection getOutlierDetection();
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder();

    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     * @return Whether the tls field is set.
     */
    boolean hasTls();
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     * @return The tls.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings getTls();
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder getTlsOrBuilder();

    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy> 
        getPortLevelSettingsList();
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy getPortLevelSettings(int index);
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    int getPortLevelSettingsCount();
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicyOrBuilder> 
        getPortLevelSettingsOrBuilderList();
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicyOrBuilder getPortLevelSettingsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Traffic policies to apply for a specific destination, across all
   * destination ports. See DestinationRule for examples.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.TrafficPolicy}
   */
  public static final class TrafficPolicy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.TrafficPolicy)
      TrafficPolicyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrafficPolicy.newBuilder() to construct.
    private TrafficPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrafficPolicy() {
      portLevelSettings_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrafficPolicy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.class, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder.class);
    }

    public interface PortTrafficPolicyOrBuilder extends
        // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       * @return Whether the port field is set.
       */
      boolean hasPort();
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       * @return The port.
       */
      istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector getPort();
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       */
      istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelectorOrBuilder getPortOrBuilder();

      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       * @return Whether the loadBalancer field is set.
       */
      boolean hasLoadBalancer();
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       * @return The loadBalancer.
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings getLoadBalancer();
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder();

      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       * @return Whether the connectionPool field is set.
       */
      boolean hasConnectionPool();
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       * @return The connectionPool.
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings getConnectionPool();
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder();

      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       * @return Whether the outlierDetection field is set.
       */
      boolean hasOutlierDetection();
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       * @return The outlierDetection.
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection getOutlierDetection();
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder();

      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       * @return Whether the tls field is set.
       */
      boolean hasTls();
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       * @return The tls.
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings getTls();
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder getTlsOrBuilder();
    }
    /**
     * <pre>
     * Traffic policies that apply to specific ports of the service
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy}
     */
    public static final class PortTrafficPolicy extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy)
        PortTrafficPolicyOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PortTrafficPolicy.newBuilder() to construct.
      private PortTrafficPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PortTrafficPolicy() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PortTrafficPolicy();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.class, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder.class);
      }

      public static final int PORT_FIELD_NUMBER = 1;
      private istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector port_;
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       * @return Whether the port field is set.
       */
      @java.lang.Override
      public boolean hasPort() {
        return port_ != null;
      }
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       * @return The port.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector getPort() {
        return port_ == null ? istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector.getDefaultInstance() : port_;
      }
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       */
      @java.lang.Override
      public istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelectorOrBuilder getPortOrBuilder() {
        return port_ == null ? istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector.getDefaultInstance() : port_;
      }

      public static final int LOAD_BALANCER_FIELD_NUMBER = 2;
      private istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings loadBalancer_;
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       * @return Whether the loadBalancer field is set.
       */
      @java.lang.Override
      public boolean hasLoadBalancer() {
        return loadBalancer_ != null;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       * @return The loadBalancer.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings getLoadBalancer() {
        return loadBalancer_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder() {
        return loadBalancer_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
      }

      public static final int CONNECTION_POOL_FIELD_NUMBER = 3;
      private istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings connectionPool_;
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       * @return Whether the connectionPool field is set.
       */
      @java.lang.Override
      public boolean hasConnectionPool() {
        return connectionPool_ != null;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       * @return The connectionPool.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings getConnectionPool() {
        return connectionPool_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder() {
        return connectionPool_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
      }

      public static final int OUTLIER_DETECTION_FIELD_NUMBER = 4;
      private istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection outlierDetection_;
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       * @return Whether the outlierDetection field is set.
       */
      @java.lang.Override
      public boolean hasOutlierDetection() {
        return outlierDetection_ != null;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       * @return The outlierDetection.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection getOutlierDetection() {
        return outlierDetection_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance() : outlierDetection_;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder() {
        return outlierDetection_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance() : outlierDetection_;
      }

      public static final int TLS_FIELD_NUMBER = 5;
      private istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings tls_;
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       * @return Whether the tls field is set.
       */
      @java.lang.Override
      public boolean hasTls() {
        return tls_ != null;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       * @return The tls.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings getTls() {
        return tls_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance() : tls_;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder getTlsOrBuilder() {
        return tls_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance() : tls_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (port_ != null) {
          output.writeMessage(1, getPort());
        }
        if (loadBalancer_ != null) {
          output.writeMessage(2, getLoadBalancer());
        }
        if (connectionPool_ != null) {
          output.writeMessage(3, getConnectionPool());
        }
        if (outlierDetection_ != null) {
          output.writeMessage(4, getOutlierDetection());
        }
        if (tls_ != null) {
          output.writeMessage(5, getTls());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (port_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getPort());
        }
        if (loadBalancer_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getLoadBalancer());
        }
        if (connectionPool_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getConnectionPool());
        }
        if (outlierDetection_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getOutlierDetection());
        }
        if (tls_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getTls());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy)) {
          return super.equals(obj);
        }
        istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy other = (istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy) obj;

        if (hasPort() != other.hasPort()) return false;
        if (hasPort()) {
          if (!getPort()
              .equals(other.getPort())) return false;
        }
        if (hasLoadBalancer() != other.hasLoadBalancer()) return false;
        if (hasLoadBalancer()) {
          if (!getLoadBalancer()
              .equals(other.getLoadBalancer())) return false;
        }
        if (hasConnectionPool() != other.hasConnectionPool()) return false;
        if (hasConnectionPool()) {
          if (!getConnectionPool()
              .equals(other.getConnectionPool())) return false;
        }
        if (hasOutlierDetection() != other.hasOutlierDetection()) return false;
        if (hasOutlierDetection()) {
          if (!getOutlierDetection()
              .equals(other.getOutlierDetection())) return false;
        }
        if (hasTls() != other.hasTls()) return false;
        if (hasTls()) {
          if (!getTls()
              .equals(other.getTls())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPort()) {
          hash = (37 * hash) + PORT_FIELD_NUMBER;
          hash = (53 * hash) + getPort().hashCode();
        }
        if (hasLoadBalancer()) {
          hash = (37 * hash) + LOAD_BALANCER_FIELD_NUMBER;
          hash = (53 * hash) + getLoadBalancer().hashCode();
        }
        if (hasConnectionPool()) {
          hash = (37 * hash) + CONNECTION_POOL_FIELD_NUMBER;
          hash = (53 * hash) + getConnectionPool().hashCode();
        }
        if (hasOutlierDetection()) {
          hash = (37 * hash) + OUTLIER_DETECTION_FIELD_NUMBER;
          hash = (53 * hash) + getOutlierDetection().hashCode();
        }
        if (hasTls()) {
          hash = (37 * hash) + TLS_FIELD_NUMBER;
          hash = (53 * hash) + getTls().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Traffic policies that apply to specific ports of the service
       * </pre>
       *
       * Protobuf type {@code istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy)
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.class, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder.class);
        }

        // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          port_ = null;
          if (portBuilder_ != null) {
            portBuilder_.dispose();
            portBuilder_ = null;
          }
          loadBalancer_ = null;
          if (loadBalancerBuilder_ != null) {
            loadBalancerBuilder_.dispose();
            loadBalancerBuilder_ = null;
          }
          connectionPool_ = null;
          if (connectionPoolBuilder_ != null) {
            connectionPoolBuilder_.dispose();
            connectionPoolBuilder_ = null;
          }
          outlierDetection_ = null;
          if (outlierDetectionBuilder_ != null) {
            outlierDetectionBuilder_.dispose();
            outlierDetectionBuilder_ = null;
          }
          tls_ = null;
          if (tlsBuilder_ != null) {
            tlsBuilder_.dispose();
            tlsBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_descriptor;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy getDefaultInstanceForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.getDefaultInstance();
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy build() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy buildPartial() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy result = new istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.port_ = portBuilder_ == null
                ? port_
                : portBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.loadBalancer_ = loadBalancerBuilder_ == null
                ? loadBalancer_
                : loadBalancerBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.connectionPool_ = connectionPoolBuilder_ == null
                ? connectionPool_
                : connectionPoolBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.outlierDetection_ = outlierDetectionBuilder_ == null
                ? outlierDetection_
                : outlierDetectionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.tls_ = tlsBuilder_ == null
                ? tls_
                : tlsBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy) {
            return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy other) {
          if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.getDefaultInstance()) return this;
          if (other.hasPort()) {
            mergePort(other.getPort());
          }
          if (other.hasLoadBalancer()) {
            mergeLoadBalancer(other.getLoadBalancer());
          }
          if (other.hasConnectionPool()) {
            mergeConnectionPool(other.getConnectionPool());
          }
          if (other.hasOutlierDetection()) {
            mergeOutlierDetection(other.getOutlierDetection());
          }
          if (other.hasTls()) {
            mergeTls(other.getTls());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getPortFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getLoadBalancerFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  input.readMessage(
                      getConnectionPoolFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                case 34: {
                  input.readMessage(
                      getOutlierDetectionFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                case 42: {
                  input.readMessage(
                      getTlsFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector port_;
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector, istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector.Builder, istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelectorOrBuilder> portBuilder_;
        /**
         * <pre>
         * Specifies the number of a port on the destination service
         * on which this policy is being applied.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
         * @return Whether the port field is set.
         */
        public boolean hasPort() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Specifies the number of a port on the destination service
         * on which this policy is being applied.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
         * @return The port.
         */
        public istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector getPort() {
          if (portBuilder_ == null) {
            return port_ == null ? istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector.getDefaultInstance() : port_;
          } else {
            return portBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Specifies the number of a port on the destination service
         * on which this policy is being applied.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
         */
        public Builder setPort(istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector value) {
          if (portBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            port_ = value;
          } else {
            portBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the number of a port on the destination service
         * on which this policy is being applied.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
         */
        public Builder setPort(
            istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector.Builder builderForValue) {
          if (portBuilder_ == null) {
            port_ = builderForValue.build();
          } else {
            portBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the number of a port on the destination service
         * on which this policy is being applied.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
         */
        public Builder mergePort(istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector value) {
          if (portBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              port_ != null &&
              port_ != istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector.getDefaultInstance()) {
              getPortBuilder().mergeFrom(value);
            } else {
              port_ = value;
            }
          } else {
            portBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the number of a port on the destination service
         * on which this policy is being applied.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
         */
        public Builder clearPort() {
          bitField0_ = (bitField0_ & ~0x00000001);
          port_ = null;
          if (portBuilder_ != null) {
            portBuilder_.dispose();
            portBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the number of a port on the destination service
         * on which this policy is being applied.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
         */
        public istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector.Builder getPortBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getPortFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Specifies the number of a port on the destination service
         * on which this policy is being applied.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
         */
        public istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelectorOrBuilder getPortOrBuilder() {
          if (portBuilder_ != null) {
            return portBuilder_.getMessageOrBuilder();
          } else {
            return port_ == null ?
                istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector.getDefaultInstance() : port_;
          }
        }
        /**
         * <pre>
         * Specifies the number of a port on the destination service
         * on which this policy is being applied.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector, istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector.Builder, istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelectorOrBuilder> 
            getPortFieldBuilder() {
          if (portBuilder_ == null) {
            portBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector, istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelector.Builder, istio.networking.v1alpha3.VirtualServiceOuterClass.PortSelectorOrBuilder>(
                    getPort(),
                    getParentForChildren(),
                    isClean());
            port_ = null;
          }
          return portBuilder_;
        }

        private istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings loadBalancer_;
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder> loadBalancerBuilder_;
        /**
         * <pre>
         * Settings controlling the load balancer algorithms.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
         * @return Whether the loadBalancer field is set.
         */
        public boolean hasLoadBalancer() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Settings controlling the load balancer algorithms.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
         * @return The loadBalancer.
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings getLoadBalancer() {
          if (loadBalancerBuilder_ == null) {
            return loadBalancer_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
          } else {
            return loadBalancerBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Settings controlling the load balancer algorithms.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
         */
        public Builder setLoadBalancer(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings value) {
          if (loadBalancerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            loadBalancer_ = value;
          } else {
            loadBalancerBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling the load balancer algorithms.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
         */
        public Builder setLoadBalancer(
            istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder builderForValue) {
          if (loadBalancerBuilder_ == null) {
            loadBalancer_ = builderForValue.build();
          } else {
            loadBalancerBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling the load balancer algorithms.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
         */
        public Builder mergeLoadBalancer(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings value) {
          if (loadBalancerBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              loadBalancer_ != null &&
              loadBalancer_ != istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance()) {
              getLoadBalancerBuilder().mergeFrom(value);
            } else {
              loadBalancer_ = value;
            }
          } else {
            loadBalancerBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling the load balancer algorithms.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
         */
        public Builder clearLoadBalancer() {
          bitField0_ = (bitField0_ & ~0x00000002);
          loadBalancer_ = null;
          if (loadBalancerBuilder_ != null) {
            loadBalancerBuilder_.dispose();
            loadBalancerBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling the load balancer algorithms.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder getLoadBalancerBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getLoadBalancerFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Settings controlling the load balancer algorithms.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder() {
          if (loadBalancerBuilder_ != null) {
            return loadBalancerBuilder_.getMessageOrBuilder();
          } else {
            return loadBalancer_ == null ?
                istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
          }
        }
        /**
         * <pre>
         * Settings controlling the load balancer algorithms.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder> 
            getLoadBalancerFieldBuilder() {
          if (loadBalancerBuilder_ == null) {
            loadBalancerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder>(
                    getLoadBalancer(),
                    getParentForChildren(),
                    isClean());
            loadBalancer_ = null;
          }
          return loadBalancerBuilder_;
        }

        private istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings connectionPool_;
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder> connectionPoolBuilder_;
        /**
         * <pre>
         * Settings controlling the volume of connections to an upstream service
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
         * @return Whether the connectionPool field is set.
         */
        public boolean hasConnectionPool() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Settings controlling the volume of connections to an upstream service
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
         * @return The connectionPool.
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings getConnectionPool() {
          if (connectionPoolBuilder_ == null) {
            return connectionPool_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
          } else {
            return connectionPoolBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Settings controlling the volume of connections to an upstream service
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
         */
        public Builder setConnectionPool(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings value) {
          if (connectionPoolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            connectionPool_ = value;
          } else {
            connectionPoolBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling the volume of connections to an upstream service
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
         */
        public Builder setConnectionPool(
            istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder builderForValue) {
          if (connectionPoolBuilder_ == null) {
            connectionPool_ = builderForValue.build();
          } else {
            connectionPoolBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling the volume of connections to an upstream service
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
         */
        public Builder mergeConnectionPool(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings value) {
          if (connectionPoolBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
              connectionPool_ != null &&
              connectionPool_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance()) {
              getConnectionPoolBuilder().mergeFrom(value);
            } else {
              connectionPool_ = value;
            }
          } else {
            connectionPoolBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling the volume of connections to an upstream service
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
         */
        public Builder clearConnectionPool() {
          bitField0_ = (bitField0_ & ~0x00000004);
          connectionPool_ = null;
          if (connectionPoolBuilder_ != null) {
            connectionPoolBuilder_.dispose();
            connectionPoolBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling the volume of connections to an upstream service
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder getConnectionPoolBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getConnectionPoolFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Settings controlling the volume of connections to an upstream service
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder() {
          if (connectionPoolBuilder_ != null) {
            return connectionPoolBuilder_.getMessageOrBuilder();
          } else {
            return connectionPool_ == null ?
                istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
          }
        }
        /**
         * <pre>
         * Settings controlling the volume of connections to an upstream service
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder> 
            getConnectionPoolFieldBuilder() {
          if (connectionPoolBuilder_ == null) {
            connectionPoolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder>(
                    getConnectionPool(),
                    getParentForChildren(),
                    isClean());
            connectionPool_ = null;
          }
          return connectionPoolBuilder_;
        }

        private istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection outlierDetection_;
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder> outlierDetectionBuilder_;
        /**
         * <pre>
         * Settings controlling eviction of unhealthy hosts from the load balancing pool
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
         * @return Whether the outlierDetection field is set.
         */
        public boolean hasOutlierDetection() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Settings controlling eviction of unhealthy hosts from the load balancing pool
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
         * @return The outlierDetection.
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection getOutlierDetection() {
          if (outlierDetectionBuilder_ == null) {
            return outlierDetection_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance() : outlierDetection_;
          } else {
            return outlierDetectionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Settings controlling eviction of unhealthy hosts from the load balancing pool
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
         */
        public Builder setOutlierDetection(istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection value) {
          if (outlierDetectionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            outlierDetection_ = value;
          } else {
            outlierDetectionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling eviction of unhealthy hosts from the load balancing pool
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
         */
        public Builder setOutlierDetection(
            istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder builderForValue) {
          if (outlierDetectionBuilder_ == null) {
            outlierDetection_ = builderForValue.build();
          } else {
            outlierDetectionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling eviction of unhealthy hosts from the load balancing pool
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
         */
        public Builder mergeOutlierDetection(istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection value) {
          if (outlierDetectionBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
              outlierDetection_ != null &&
              outlierDetection_ != istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance()) {
              getOutlierDetectionBuilder().mergeFrom(value);
            } else {
              outlierDetection_ = value;
            }
          } else {
            outlierDetectionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling eviction of unhealthy hosts from the load balancing pool
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
         */
        public Builder clearOutlierDetection() {
          bitField0_ = (bitField0_ & ~0x00000008);
          outlierDetection_ = null;
          if (outlierDetectionBuilder_ != null) {
            outlierDetectionBuilder_.dispose();
            outlierDetectionBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Settings controlling eviction of unhealthy hosts from the load balancing pool
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder getOutlierDetectionBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getOutlierDetectionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Settings controlling eviction of unhealthy hosts from the load balancing pool
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder() {
          if (outlierDetectionBuilder_ != null) {
            return outlierDetectionBuilder_.getMessageOrBuilder();
          } else {
            return outlierDetection_ == null ?
                istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance() : outlierDetection_;
          }
        }
        /**
         * <pre>
         * Settings controlling eviction of unhealthy hosts from the load balancing pool
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder> 
            getOutlierDetectionFieldBuilder() {
          if (outlierDetectionBuilder_ == null) {
            outlierDetectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder>(
                    getOutlierDetection(),
                    getParentForChildren(),
                    isClean());
            outlierDetection_ = null;
          }
          return outlierDetectionBuilder_;
        }

        private istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings tls_;
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder> tlsBuilder_;
        /**
         * <pre>
         * TLS related settings for connections to the upstream service.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
         * @return Whether the tls field is set.
         */
        public boolean hasTls() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * TLS related settings for connections to the upstream service.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
         * @return The tls.
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings getTls() {
          if (tlsBuilder_ == null) {
            return tls_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance() : tls_;
          } else {
            return tlsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * TLS related settings for connections to the upstream service.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
         */
        public Builder setTls(istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings value) {
          if (tlsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            tls_ = value;
          } else {
            tlsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TLS related settings for connections to the upstream service.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
         */
        public Builder setTls(
            istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder builderForValue) {
          if (tlsBuilder_ == null) {
            tls_ = builderForValue.build();
          } else {
            tlsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TLS related settings for connections to the upstream service.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
         */
        public Builder mergeTls(istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings value) {
          if (tlsBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0) &&
              tls_ != null &&
              tls_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance()) {
              getTlsBuilder().mergeFrom(value);
            } else {
              tls_ = value;
            }
          } else {
            tlsBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TLS related settings for connections to the upstream service.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
         */
        public Builder clearTls() {
          bitField0_ = (bitField0_ & ~0x00000010);
          tls_ = null;
          if (tlsBuilder_ != null) {
            tlsBuilder_.dispose();
            tlsBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TLS related settings for connections to the upstream service.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder getTlsBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getTlsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * TLS related settings for connections to the upstream service.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder getTlsOrBuilder() {
          if (tlsBuilder_ != null) {
            return tlsBuilder_.getMessageOrBuilder();
          } else {
            return tls_ == null ?
                istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance() : tls_;
          }
        }
        /**
         * <pre>
         * TLS related settings for connections to the upstream service.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder> 
            getTlsFieldBuilder() {
          if (tlsBuilder_ == null) {
            tlsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder>(
                    getTls(),
                    getParentForChildren(),
                    isClean());
            tls_ = null;
          }
          return tlsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy)
      }

      // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy)
      private static final istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy();
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PortTrafficPolicy>
          PARSER = new com.google.protobuf.AbstractParser<PortTrafficPolicy>() {
        @java.lang.Override
        public PortTrafficPolicy parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PortTrafficPolicy> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PortTrafficPolicy> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int LOAD_BALANCER_FIELD_NUMBER = 1;
    private istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings loadBalancer_;
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     * @return Whether the loadBalancer field is set.
     */
    @java.lang.Override
    public boolean hasLoadBalancer() {
      return loadBalancer_ != null;
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     * @return The loadBalancer.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings getLoadBalancer() {
      return loadBalancer_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder() {
      return loadBalancer_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
    }

    public static final int CONNECTION_POOL_FIELD_NUMBER = 2;
    private istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings connectionPool_;
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     * @return Whether the connectionPool field is set.
     */
    @java.lang.Override
    public boolean hasConnectionPool() {
      return connectionPool_ != null;
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     * @return The connectionPool.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings getConnectionPool() {
      return connectionPool_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder() {
      return connectionPool_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
    }

    public static final int OUTLIER_DETECTION_FIELD_NUMBER = 3;
    private istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection outlierDetection_;
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     * @return Whether the outlierDetection field is set.
     */
    @java.lang.Override
    public boolean hasOutlierDetection() {
      return outlierDetection_ != null;
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     * @return The outlierDetection.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection getOutlierDetection() {
      return outlierDetection_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance() : outlierDetection_;
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder() {
      return outlierDetection_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance() : outlierDetection_;
    }

    public static final int TLS_FIELD_NUMBER = 4;
    private istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings tls_;
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     * @return Whether the tls field is set.
     */
    @java.lang.Override
    public boolean hasTls() {
      return tls_ != null;
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     * @return The tls.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings getTls() {
      return tls_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance() : tls_;
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder getTlsOrBuilder() {
      return tls_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance() : tls_;
    }

    public static final int PORT_LEVEL_SETTINGS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy> portLevelSettings_;
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    @java.lang.Override
    public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy> getPortLevelSettingsList() {
      return portLevelSettings_;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicyOrBuilder> 
        getPortLevelSettingsOrBuilderList() {
      return portLevelSettings_;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    @java.lang.Override
    public int getPortLevelSettingsCount() {
      return portLevelSettings_.size();
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy getPortLevelSettings(int index) {
      return portLevelSettings_.get(index);
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicyOrBuilder getPortLevelSettingsOrBuilder(
        int index) {
      return portLevelSettings_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (loadBalancer_ != null) {
        output.writeMessage(1, getLoadBalancer());
      }
      if (connectionPool_ != null) {
        output.writeMessage(2, getConnectionPool());
      }
      if (outlierDetection_ != null) {
        output.writeMessage(3, getOutlierDetection());
      }
      if (tls_ != null) {
        output.writeMessage(4, getTls());
      }
      for (int i = 0; i < portLevelSettings_.size(); i++) {
        output.writeMessage(5, portLevelSettings_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (loadBalancer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLoadBalancer());
      }
      if (connectionPool_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConnectionPool());
      }
      if (outlierDetection_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOutlierDetection());
      }
      if (tls_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTls());
      }
      for (int i = 0; i < portLevelSettings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, portLevelSettings_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy other = (istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy) obj;

      if (hasLoadBalancer() != other.hasLoadBalancer()) return false;
      if (hasLoadBalancer()) {
        if (!getLoadBalancer()
            .equals(other.getLoadBalancer())) return false;
      }
      if (hasConnectionPool() != other.hasConnectionPool()) return false;
      if (hasConnectionPool()) {
        if (!getConnectionPool()
            .equals(other.getConnectionPool())) return false;
      }
      if (hasOutlierDetection() != other.hasOutlierDetection()) return false;
      if (hasOutlierDetection()) {
        if (!getOutlierDetection()
            .equals(other.getOutlierDetection())) return false;
      }
      if (hasTls() != other.hasTls()) return false;
      if (hasTls()) {
        if (!getTls()
            .equals(other.getTls())) return false;
      }
      if (!getPortLevelSettingsList()
          .equals(other.getPortLevelSettingsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLoadBalancer()) {
        hash = (37 * hash) + LOAD_BALANCER_FIELD_NUMBER;
        hash = (53 * hash) + getLoadBalancer().hashCode();
      }
      if (hasConnectionPool()) {
        hash = (37 * hash) + CONNECTION_POOL_FIELD_NUMBER;
        hash = (53 * hash) + getConnectionPool().hashCode();
      }
      if (hasOutlierDetection()) {
        hash = (37 * hash) + OUTLIER_DETECTION_FIELD_NUMBER;
        hash = (53 * hash) + getOutlierDetection().hashCode();
      }
      if (hasTls()) {
        hash = (37 * hash) + TLS_FIELD_NUMBER;
        hash = (53 * hash) + getTls().hashCode();
      }
      if (getPortLevelSettingsCount() > 0) {
        hash = (37 * hash) + PORT_LEVEL_SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getPortLevelSettingsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Traffic policies to apply for a specific destination, across all
     * destination ports. See DestinationRule for examples.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.TrafficPolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.TrafficPolicy)
        istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.class, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        loadBalancer_ = null;
        if (loadBalancerBuilder_ != null) {
          loadBalancerBuilder_.dispose();
          loadBalancerBuilder_ = null;
        }
        connectionPool_ = null;
        if (connectionPoolBuilder_ != null) {
          connectionPoolBuilder_.dispose();
          connectionPoolBuilder_ = null;
        }
        outlierDetection_ = null;
        if (outlierDetectionBuilder_ != null) {
          outlierDetectionBuilder_.dispose();
          outlierDetectionBuilder_ = null;
        }
        tls_ = null;
        if (tlsBuilder_ != null) {
          tlsBuilder_.dispose();
          tlsBuilder_ = null;
        }
        if (portLevelSettingsBuilder_ == null) {
          portLevelSettings_ = java.util.Collections.emptyList();
        } else {
          portLevelSettings_ = null;
          portLevelSettingsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy getDefaultInstanceForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy build() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy buildPartial() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy result = new istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy result) {
        if (portLevelSettingsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            portLevelSettings_ = java.util.Collections.unmodifiableList(portLevelSettings_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.portLevelSettings_ = portLevelSettings_;
        } else {
          result.portLevelSettings_ = portLevelSettingsBuilder_.build();
        }
      }

      private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.loadBalancer_ = loadBalancerBuilder_ == null
              ? loadBalancer_
              : loadBalancerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.connectionPool_ = connectionPoolBuilder_ == null
              ? connectionPool_
              : connectionPoolBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.outlierDetection_ = outlierDetectionBuilder_ == null
              ? outlierDetection_
              : outlierDetectionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.tls_ = tlsBuilder_ == null
              ? tls_
              : tlsBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy) {
          return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy other) {
        if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance()) return this;
        if (other.hasLoadBalancer()) {
          mergeLoadBalancer(other.getLoadBalancer());
        }
        if (other.hasConnectionPool()) {
          mergeConnectionPool(other.getConnectionPool());
        }
        if (other.hasOutlierDetection()) {
          mergeOutlierDetection(other.getOutlierDetection());
        }
        if (other.hasTls()) {
          mergeTls(other.getTls());
        }
        if (portLevelSettingsBuilder_ == null) {
          if (!other.portLevelSettings_.isEmpty()) {
            if (portLevelSettings_.isEmpty()) {
              portLevelSettings_ = other.portLevelSettings_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePortLevelSettingsIsMutable();
              portLevelSettings_.addAll(other.portLevelSettings_);
            }
            onChanged();
          }
        } else {
          if (!other.portLevelSettings_.isEmpty()) {
            if (portLevelSettingsBuilder_.isEmpty()) {
              portLevelSettingsBuilder_.dispose();
              portLevelSettingsBuilder_ = null;
              portLevelSettings_ = other.portLevelSettings_;
              bitField0_ = (bitField0_ & ~0x00000010);
              portLevelSettingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPortLevelSettingsFieldBuilder() : null;
            } else {
              portLevelSettingsBuilder_.addAllMessages(other.portLevelSettings_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getLoadBalancerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getConnectionPoolFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getOutlierDetectionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getTlsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy m =
                    input.readMessage(
                        istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.parser(),
                        extensionRegistry);
                if (portLevelSettingsBuilder_ == null) {
                  ensurePortLevelSettingsIsMutable();
                  portLevelSettings_.add(m);
                } else {
                  portLevelSettingsBuilder_.addMessage(m);
                }
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings loadBalancer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder> loadBalancerBuilder_;
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
       * @return Whether the loadBalancer field is set.
       */
      public boolean hasLoadBalancer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
       * @return The loadBalancer.
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings getLoadBalancer() {
        if (loadBalancerBuilder_ == null) {
          return loadBalancer_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
        } else {
          return loadBalancerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
       */
      public Builder setLoadBalancer(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings value) {
        if (loadBalancerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loadBalancer_ = value;
        } else {
          loadBalancerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
       */
      public Builder setLoadBalancer(
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder builderForValue) {
        if (loadBalancerBuilder_ == null) {
          loadBalancer_ = builderForValue.build();
        } else {
          loadBalancerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
       */
      public Builder mergeLoadBalancer(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings value) {
        if (loadBalancerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            loadBalancer_ != null &&
            loadBalancer_ != istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance()) {
            getLoadBalancerBuilder().mergeFrom(value);
          } else {
            loadBalancer_ = value;
          }
        } else {
          loadBalancerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
       */
      public Builder clearLoadBalancer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        loadBalancer_ = null;
        if (loadBalancerBuilder_ != null) {
          loadBalancerBuilder_.dispose();
          loadBalancerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder getLoadBalancerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getLoadBalancerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder() {
        if (loadBalancerBuilder_ != null) {
          return loadBalancerBuilder_.getMessageOrBuilder();
        } else {
          return loadBalancer_ == null ?
              istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
        }
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder> 
          getLoadBalancerFieldBuilder() {
        if (loadBalancerBuilder_ == null) {
          loadBalancerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder>(
                  getLoadBalancer(),
                  getParentForChildren(),
                  isClean());
          loadBalancer_ = null;
        }
        return loadBalancerBuilder_;
      }

      private istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings connectionPool_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder> connectionPoolBuilder_;
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
       * @return Whether the connectionPool field is set.
       */
      public boolean hasConnectionPool() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
       * @return The connectionPool.
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings getConnectionPool() {
        if (connectionPoolBuilder_ == null) {
          return connectionPool_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
        } else {
          return connectionPoolBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
       */
      public Builder setConnectionPool(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings value) {
        if (connectionPoolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connectionPool_ = value;
        } else {
          connectionPoolBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
       */
      public Builder setConnectionPool(
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder builderForValue) {
        if (connectionPoolBuilder_ == null) {
          connectionPool_ = builderForValue.build();
        } else {
          connectionPoolBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
       */
      public Builder mergeConnectionPool(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings value) {
        if (connectionPoolBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            connectionPool_ != null &&
            connectionPool_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance()) {
            getConnectionPoolBuilder().mergeFrom(value);
          } else {
            connectionPool_ = value;
          }
        } else {
          connectionPoolBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
       */
      public Builder clearConnectionPool() {
        bitField0_ = (bitField0_ & ~0x00000002);
        connectionPool_ = null;
        if (connectionPoolBuilder_ != null) {
          connectionPoolBuilder_.dispose();
          connectionPoolBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder getConnectionPoolBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getConnectionPoolFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder() {
        if (connectionPoolBuilder_ != null) {
          return connectionPoolBuilder_.getMessageOrBuilder();
        } else {
          return connectionPool_ == null ?
              istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
        }
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder> 
          getConnectionPoolFieldBuilder() {
        if (connectionPoolBuilder_ == null) {
          connectionPoolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder>(
                  getConnectionPool(),
                  getParentForChildren(),
                  isClean());
          connectionPool_ = null;
        }
        return connectionPoolBuilder_;
      }

      private istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection outlierDetection_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder> outlierDetectionBuilder_;
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
       * @return Whether the outlierDetection field is set.
       */
      public boolean hasOutlierDetection() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
       * @return The outlierDetection.
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection getOutlierDetection() {
        if (outlierDetectionBuilder_ == null) {
          return outlierDetection_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance() : outlierDetection_;
        } else {
          return outlierDetectionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
       */
      public Builder setOutlierDetection(istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection value) {
        if (outlierDetectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outlierDetection_ = value;
        } else {
          outlierDetectionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
       */
      public Builder setOutlierDetection(
          istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder builderForValue) {
        if (outlierDetectionBuilder_ == null) {
          outlierDetection_ = builderForValue.build();
        } else {
          outlierDetectionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
       */
      public Builder mergeOutlierDetection(istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection value) {
        if (outlierDetectionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            outlierDetection_ != null &&
            outlierDetection_ != istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance()) {
            getOutlierDetectionBuilder().mergeFrom(value);
          } else {
            outlierDetection_ = value;
          }
        } else {
          outlierDetectionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
       */
      public Builder clearOutlierDetection() {
        bitField0_ = (bitField0_ & ~0x00000004);
        outlierDetection_ = null;
        if (outlierDetectionBuilder_ != null) {
          outlierDetectionBuilder_.dispose();
          outlierDetectionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder getOutlierDetectionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOutlierDetectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder() {
        if (outlierDetectionBuilder_ != null) {
          return outlierDetectionBuilder_.getMessageOrBuilder();
        } else {
          return outlierDetection_ == null ?
              istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance() : outlierDetection_;
        }
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder> 
          getOutlierDetectionFieldBuilder() {
        if (outlierDetectionBuilder_ == null) {
          outlierDetectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder>(
                  getOutlierDetection(),
                  getParentForChildren(),
                  isClean());
          outlierDetection_ = null;
        }
        return outlierDetectionBuilder_;
      }

      private istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings tls_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder> tlsBuilder_;
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
       * @return Whether the tls field is set.
       */
      public boolean hasTls() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
       * @return The tls.
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings getTls() {
        if (tlsBuilder_ == null) {
          return tls_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance() : tls_;
        } else {
          return tlsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
       */
      public Builder setTls(istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings value) {
        if (tlsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tls_ = value;
        } else {
          tlsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
       */
      public Builder setTls(
          istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder builderForValue) {
        if (tlsBuilder_ == null) {
          tls_ = builderForValue.build();
        } else {
          tlsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
       */
      public Builder mergeTls(istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings value) {
        if (tlsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            tls_ != null &&
            tls_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance()) {
            getTlsBuilder().mergeFrom(value);
          } else {
            tls_ = value;
          }
        } else {
          tlsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
       */
      public Builder clearTls() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tls_ = null;
        if (tlsBuilder_ != null) {
          tlsBuilder_.dispose();
          tlsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder getTlsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTlsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder getTlsOrBuilder() {
        if (tlsBuilder_ != null) {
          return tlsBuilder_.getMessageOrBuilder();
        } else {
          return tls_ == null ?
              istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance() : tls_;
        }
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder> 
          getTlsFieldBuilder() {
        if (tlsBuilder_ == null) {
          tlsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder>(
                  getTls(),
                  getParentForChildren(),
                  isClean());
          tls_ = null;
        }
        return tlsBuilder_;
      }

      private java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy> portLevelSettings_ =
        java.util.Collections.emptyList();
      private void ensurePortLevelSettingsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          portLevelSettings_ = new java.util.ArrayList<istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy>(portLevelSettings_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicyOrBuilder> portLevelSettingsBuilder_;

      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy> getPortLevelSettingsList() {
        if (portLevelSettingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(portLevelSettings_);
        } else {
          return portLevelSettingsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public int getPortLevelSettingsCount() {
        if (portLevelSettingsBuilder_ == null) {
          return portLevelSettings_.size();
        } else {
          return portLevelSettingsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy getPortLevelSettings(int index) {
        if (portLevelSettingsBuilder_ == null) {
          return portLevelSettings_.get(index);
        } else {
          return portLevelSettingsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public Builder setPortLevelSettings(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy value) {
        if (portLevelSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortLevelSettingsIsMutable();
          portLevelSettings_.set(index, value);
          onChanged();
        } else {
          portLevelSettingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public Builder setPortLevelSettings(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder builderForValue) {
        if (portLevelSettingsBuilder_ == null) {
          ensurePortLevelSettingsIsMutable();
          portLevelSettings_.set(index, builderForValue.build());
          onChanged();
        } else {
          portLevelSettingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public Builder addPortLevelSettings(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy value) {
        if (portLevelSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortLevelSettingsIsMutable();
          portLevelSettings_.add(value);
          onChanged();
        } else {
          portLevelSettingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public Builder addPortLevelSettings(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy value) {
        if (portLevelSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortLevelSettingsIsMutable();
          portLevelSettings_.add(index, value);
          onChanged();
        } else {
          portLevelSettingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public Builder addPortLevelSettings(
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder builderForValue) {
        if (portLevelSettingsBuilder_ == null) {
          ensurePortLevelSettingsIsMutable();
          portLevelSettings_.add(builderForValue.build());
          onChanged();
        } else {
          portLevelSettingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public Builder addPortLevelSettings(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder builderForValue) {
        if (portLevelSettingsBuilder_ == null) {
          ensurePortLevelSettingsIsMutable();
          portLevelSettings_.add(index, builderForValue.build());
          onChanged();
        } else {
          portLevelSettingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public Builder addAllPortLevelSettings(
          java.lang.Iterable<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy> values) {
        if (portLevelSettingsBuilder_ == null) {
          ensurePortLevelSettingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, portLevelSettings_);
          onChanged();
        } else {
          portLevelSettingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public Builder clearPortLevelSettings() {
        if (portLevelSettingsBuilder_ == null) {
          portLevelSettings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          portLevelSettingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public Builder removePortLevelSettings(int index) {
        if (portLevelSettingsBuilder_ == null) {
          ensurePortLevelSettingsIsMutable();
          portLevelSettings_.remove(index);
          onChanged();
        } else {
          portLevelSettingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder getPortLevelSettingsBuilder(
          int index) {
        return getPortLevelSettingsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicyOrBuilder getPortLevelSettingsOrBuilder(
          int index) {
        if (portLevelSettingsBuilder_ == null) {
          return portLevelSettings_.get(index);  } else {
          return portLevelSettingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicyOrBuilder> 
           getPortLevelSettingsOrBuilderList() {
        if (portLevelSettingsBuilder_ != null) {
          return portLevelSettingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(portLevelSettings_);
        }
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder addPortLevelSettingsBuilder() {
        return getPortLevelSettingsFieldBuilder().addBuilder(
            istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.getDefaultInstance());
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder addPortLevelSettingsBuilder(
          int index) {
        return getPortLevelSettingsFieldBuilder().addBuilder(
            index, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.getDefaultInstance());
      }
      /**
       * <pre>
       * Traffic policies specific to individual ports. Note that port level
       * settings will override the destination-level settings. Traffic
       * settings specified at the destination-level will not be inherited when
       * overridden by port-level settings, i.e. default values will be applied
       * to fields omitted in port-level traffic policies.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
       */
      public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder> 
           getPortLevelSettingsBuilderList() {
        return getPortLevelSettingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicyOrBuilder> 
          getPortLevelSettingsFieldBuilder() {
        if (portLevelSettingsBuilder_ == null) {
          portLevelSettingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicy.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.PortTrafficPolicyOrBuilder>(
                  portLevelSettings_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          portLevelSettings_ = null;
        }
        return portLevelSettingsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.TrafficPolicy)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.TrafficPolicy)
    private static final istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy();
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrafficPolicy>
        PARSER = new com.google.protobuf.AbstractParser<TrafficPolicy>() {
      @java.lang.Override
      public TrafficPolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TrafficPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrafficPolicy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubsetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.Subset)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the subset. The service name and the subset name can
     * be used for traffic splitting in a route rule.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the subset. The service name and the subset name can
     * be used for traffic splitting in a route rule.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    int getLabelsCount();
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    boolean containsLabels(
        java.lang.String key);
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getLabels();
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getLabelsMap();
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    /* nullable */
java.lang.String getLabelsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    java.lang.String getLabelsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     * @return Whether the trafficPolicy field is set.
     */
    boolean hasTrafficPolicy();
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     * @return The trafficPolicy.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy getTrafficPolicy();
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder getTrafficPolicyOrBuilder();
  }
  /**
   * <pre>
   * A subset of endpoints of a service. Subsets can be used for scenarios
   * like A/B testing, or routing to a specific version of a service. Refer
   * to [VirtualService](https://istio.io/docs/reference/config/networking/virtual-service/#VirtualService) documentation for examples of using
   * subsets in these scenarios. In addition, traffic policies defined at the
   * service-level can be overridden at a subset-level. The following rule
   * uses a round robin load balancing policy for all traffic going to a
   * subset named testversion that is composed of endpoints (e.g., pods) with
   * labels (version:v3).
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: DestinationRule
   * metadata:
   *   name: bookinfo-ratings
   * spec:
   *   host: ratings.prod.svc.cluster.local
   *   trafficPolicy:
   *     loadBalancer:
   *       simple: LEAST_CONN
   *   subsets:
   *   - name: testversion
   *     labels:
   *       version: v3
   *     trafficPolicy:
   *       loadBalancer:
   *         simple: ROUND_ROBIN
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: DestinationRule
   * metadata:
   *   name: bookinfo-ratings
   * spec:
   *   host: ratings.prod.svc.cluster.local
   *   trafficPolicy:
   *     loadBalancer:
   *       simple: LEAST_CONN
   *   subsets:
   *   - name: testversion
   *     labels:
   *       version: v3
   *     trafficPolicy:
   *       loadBalancer:
   *         simple: ROUND_ROBIN
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * **Note:** Policies specified for subsets will not take effect until
   * a route rule explicitly sends traffic to this subset.
   * One or more labels are typically required to identify the subset destination,
   * however, when the corresponding DestinationRule represents a host that
   * supports multiple SNI hosts (e.g., an egress gateway), a subset without labels
   * may be meaningful. In this case a traffic policy with [ClientTLSSettings](#ClientTLSSettings)
   * can be used to identify a specific SNI host corresponding to the named subset.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.Subset}
   */
  public static final class Subset extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.Subset)
      SubsetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Subset.newBuilder() to construct.
    private Subset(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Subset() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Subset();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.class, istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * Name of the subset. The service name and the subset name can
     * be used for traffic splitting in a route rule.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the subset. The service name and the subset name can
     * be used for traffic splitting in a route rule.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LABELS_FIELD_NUMBER = 2;
    private static final class LabelsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_LabelsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }
    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @java.lang.Override
    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getLabelsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TRAFFIC_POLICY_FIELD_NUMBER = 3;
    private istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy trafficPolicy_;
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     * @return Whether the trafficPolicy field is set.
     */
    @java.lang.Override
    public boolean hasTrafficPolicy() {
      return trafficPolicy_ != null;
    }
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     * @return The trafficPolicy.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy getTrafficPolicy() {
      return trafficPolicy_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
    }
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder getTrafficPolicyOrBuilder() {
      return trafficPolicy_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLabels(),
          LabelsDefaultEntryHolder.defaultEntry,
          2);
      if (trafficPolicy_ != null) {
        output.writeMessage(3, getTrafficPolicy());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetLabels().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, labels__);
      }
      if (trafficPolicy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTrafficPolicy());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.Subset)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.DestinationRuleOuterClass.Subset other = (istio.networking.v1alpha3.DestinationRuleOuterClass.Subset) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!internalGetLabels().equals(
          other.internalGetLabels())) return false;
      if (hasTrafficPolicy() != other.hasTrafficPolicy()) return false;
      if (hasTrafficPolicy()) {
        if (!getTrafficPolicy()
            .equals(other.getTrafficPolicy())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (!internalGetLabels().getMap().isEmpty()) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLabels().hashCode();
      }
      if (hasTrafficPolicy()) {
        hash = (37 * hash) + TRAFFIC_POLICY_FIELD_NUMBER;
        hash = (53 * hash) + getTrafficPolicy().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.Subset prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A subset of endpoints of a service. Subsets can be used for scenarios
     * like A/B testing, or routing to a specific version of a service. Refer
     * to [VirtualService](https://istio.io/docs/reference/config/networking/virtual-service/#VirtualService) documentation for examples of using
     * subsets in these scenarios. In addition, traffic policies defined at the
     * service-level can be overridden at a subset-level. The following rule
     * uses a round robin load balancing policy for all traffic going to a
     * subset named testversion that is composed of endpoints (e.g., pods) with
     * labels (version:v3).
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1alpha3
     * kind: DestinationRule
     * metadata:
     *   name: bookinfo-ratings
     * spec:
     *   host: ratings.prod.svc.cluster.local
     *   trafficPolicy:
     *     loadBalancer:
     *       simple: LEAST_CONN
     *   subsets:
     *   - name: testversion
     *     labels:
     *       version: v3
     *     trafficPolicy:
     *       loadBalancer:
     *         simple: ROUND_ROBIN
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1beta1
     * kind: DestinationRule
     * metadata:
     *   name: bookinfo-ratings
     * spec:
     *   host: ratings.prod.svc.cluster.local
     *   trafficPolicy:
     *     loadBalancer:
     *       simple: LEAST_CONN
     *   subsets:
     *   - name: testversion
     *     labels:
     *       version: v3
     *     trafficPolicy:
     *       loadBalancer:
     *         simple: ROUND_ROBIN
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * **Note:** Policies specified for subsets will not take effect until
     * a route rule explicitly sends traffic to this subset.
     * One or more labels are typically required to identify the subset destination,
     * however, when the corresponding DestinationRule represents a host that
     * supports multiple SNI hosts (e.g., an egress gateway), a subset without labels
     * may be meaningful. In this case a traffic policy with [ClientTLSSettings](#ClientTLSSettings)
     * can be used to identify a specific SNI host corresponding to the named subset.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.Subset}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.Subset)
        istio.networking.v1alpha3.DestinationRuleOuterClass.SubsetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.class, istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        internalGetMutableLabels().clear();
        trafficPolicy_ = null;
        if (trafficPolicyBuilder_ != null) {
          trafficPolicyBuilder_.dispose();
          trafficPolicyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.Subset getDefaultInstanceForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.Subset build() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.Subset result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.Subset buildPartial() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.Subset result = new istio.networking.v1alpha3.DestinationRuleOuterClass.Subset(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.Subset result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.labels_ = internalGetLabels();
          result.labels_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.trafficPolicy_ = trafficPolicyBuilder_ == null
              ? trafficPolicy_
              : trafficPolicyBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.Subset) {
          return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.Subset)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.Subset other) {
        if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.Subset.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        internalGetMutableLabels().mergeFrom(
            other.internalGetLabels());
        bitField0_ |= 0x00000002;
        if (other.hasTrafficPolicy()) {
          mergeTrafficPolicy(other.getTrafficPolicy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                labels__ = input.readMessage(
                    LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableLabels().getMutableMap().put(
                    labels__.getKey(), labels__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getTrafficPolicyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the subset. The service name and the subset name can
       * be used for traffic splitting in a route rule.
       * </pre>
       *
       * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the subset. The service name and the subset name can
       * be used for traffic splitting in a route rule.
       * </pre>
       *
       * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the subset. The service name and the subset name can
       * be used for traffic splitting in a route rule.
       * </pre>
       *
       * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the subset. The service name and the subset name can
       * be used for traffic splitting in a route rule.
       * </pre>
       *
       * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the subset. The service name and the subset name can
       * be used for traffic splitting in a route rule.
       * </pre>
       *
       * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> labels_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetLabels() {
        if (labels_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableLabels() {
        if (labels_ == null) {
          labels_ = com.google.protobuf.MapField.newMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        if (!labels_.isMutable()) {
          labels_ = labels_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return labels_;
      }
      public int getLabelsCount() {
        return internalGetLabels().getMap().size();
      }
      /**
       * <pre>
       * Labels apply a filter over the endpoints of a service in the
       * service registry. See route rules for examples of usage.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 2;</code>
       */
      @java.lang.Override
      public boolean containsLabels(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetLabels().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getLabels() {
        return getLabelsMap();
      }
      /**
       * <pre>
       * Labels apply a filter over the endpoints of a service in the
       * service registry. See route rules for examples of usage.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
        return internalGetLabels().getMap();
      }
      /**
       * <pre>
       * Labels apply a filter over the endpoints of a service in the
       * service registry. See route rules for examples of usage.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 2;</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getLabelsOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Labels apply a filter over the endpoints of a service in the
       * service registry. See route rules for examples of usage.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getLabelsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearLabels() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableLabels().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Labels apply a filter over the endpoints of a service in the
       * service registry. See route rules for examples of usage.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 2;</code>
       */
      public Builder removeLabels(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableLabels().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableLabels() {
        bitField0_ |= 0x00000002;
        return internalGetMutableLabels().getMutableMap();
      }
      /**
       * <pre>
       * Labels apply a filter over the endpoints of a service in the
       * service registry. See route rules for examples of usage.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 2;</code>
       */
      public Builder putLabels(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableLabels().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Labels apply a filter over the endpoints of a service in the
       * service registry. See route rules for examples of usage.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 2;</code>
       */
      public Builder putAllLabels(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableLabels().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }

      private istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy trafficPolicy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder> trafficPolicyBuilder_;
      /**
       * <pre>
       * Traffic policies that apply to this subset. Subsets inherit the
       * traffic policies specified at the DestinationRule level. Settings
       * specified at the subset level will override the corresponding settings
       * specified at the DestinationRule level.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
       * @return Whether the trafficPolicy field is set.
       */
      public boolean hasTrafficPolicy() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Traffic policies that apply to this subset. Subsets inherit the
       * traffic policies specified at the DestinationRule level. Settings
       * specified at the subset level will override the corresponding settings
       * specified at the DestinationRule level.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
       * @return The trafficPolicy.
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy getTrafficPolicy() {
        if (trafficPolicyBuilder_ == null) {
          return trafficPolicy_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
        } else {
          return trafficPolicyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Traffic policies that apply to this subset. Subsets inherit the
       * traffic policies specified at the DestinationRule level. Settings
       * specified at the subset level will override the corresponding settings
       * specified at the DestinationRule level.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
       */
      public Builder setTrafficPolicy(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy value) {
        if (trafficPolicyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trafficPolicy_ = value;
        } else {
          trafficPolicyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Traffic policies that apply to this subset. Subsets inherit the
       * traffic policies specified at the DestinationRule level. Settings
       * specified at the subset level will override the corresponding settings
       * specified at the DestinationRule level.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
       */
      public Builder setTrafficPolicy(
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder builderForValue) {
        if (trafficPolicyBuilder_ == null) {
          trafficPolicy_ = builderForValue.build();
        } else {
          trafficPolicyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Traffic policies that apply to this subset. Subsets inherit the
       * traffic policies specified at the DestinationRule level. Settings
       * specified at the subset level will override the corresponding settings
       * specified at the DestinationRule level.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
       */
      public Builder mergeTrafficPolicy(istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy value) {
        if (trafficPolicyBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            trafficPolicy_ != null &&
            trafficPolicy_ != istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance()) {
            getTrafficPolicyBuilder().mergeFrom(value);
          } else {
            trafficPolicy_ = value;
          }
        } else {
          trafficPolicyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Traffic policies that apply to this subset. Subsets inherit the
       * traffic policies specified at the DestinationRule level. Settings
       * specified at the subset level will override the corresponding settings
       * specified at the DestinationRule level.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
       */
      public Builder clearTrafficPolicy() {
        bitField0_ = (bitField0_ & ~0x00000004);
        trafficPolicy_ = null;
        if (trafficPolicyBuilder_ != null) {
          trafficPolicyBuilder_.dispose();
          trafficPolicyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Traffic policies that apply to this subset. Subsets inherit the
       * traffic policies specified at the DestinationRule level. Settings
       * specified at the subset level will override the corresponding settings
       * specified at the DestinationRule level.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder getTrafficPolicyBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTrafficPolicyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Traffic policies that apply to this subset. Subsets inherit the
       * traffic policies specified at the DestinationRule level. Settings
       * specified at the subset level will override the corresponding settings
       * specified at the DestinationRule level.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder getTrafficPolicyOrBuilder() {
        if (trafficPolicyBuilder_ != null) {
          return trafficPolicyBuilder_.getMessageOrBuilder();
        } else {
          return trafficPolicy_ == null ?
              istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
        }
      }
      /**
       * <pre>
       * Traffic policies that apply to this subset. Subsets inherit the
       * traffic policies specified at the DestinationRule level. Settings
       * specified at the subset level will override the corresponding settings
       * specified at the DestinationRule level.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder> 
          getTrafficPolicyFieldBuilder() {
        if (trafficPolicyBuilder_ == null) {
          trafficPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicy.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.TrafficPolicyOrBuilder>(
                  getTrafficPolicy(),
                  getParentForChildren(),
                  isClean());
          trafficPolicy_ = null;
        }
        return trafficPolicyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.Subset)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Subset)
    private static final istio.networking.v1alpha3.DestinationRuleOuterClass.Subset DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.Subset();
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.Subset getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Subset>
        PARSER = new com.google.protobuf.AbstractParser<Subset>() {
      @java.lang.Override
      public Subset parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Subset> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Subset> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.Subset getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LoadBalancerSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.LoadBalancerSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
     * @return Whether the simple field is set.
     */
    boolean hasSimple();
    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
     * @return The enum numeric value on the wire for simple.
     */
    int getSimpleValue();
    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
     * @return The simple.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB getSimple();

    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
     * @return Whether the consistentHash field is set.
     */
    boolean hasConsistentHash();
    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
     * @return The consistentHash.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB getConsistentHash();
    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLBOrBuilder getConsistentHashOrBuilder();

    /**
     * <pre>
     * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
     * between this object and the object one in MeshConfig
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
     * @return Whether the localityLbSetting field is set.
     */
    boolean hasLocalityLbSetting();
    /**
     * <pre>
     * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
     * between this object and the object one in MeshConfig
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
     * @return The localityLbSetting.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting getLocalityLbSetting();
    /**
     * <pre>
     * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
     * between this object and the object one in MeshConfig
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSettingOrBuilder getLocalityLbSettingOrBuilder();

    public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.LbPolicyCase getLbPolicyCase();
  }
  /**
   * <pre>
   * Load balancing policies to apply for a specific destination. See Envoy's
   * load balancing
   * [documentation](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancing)
   * for more details.
   * For example, the following rule uses a round robin load balancing policy
   * for all traffic going to the ratings service.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: DestinationRule
   * metadata:
   *   name: bookinfo-ratings
   * spec:
   *   host: ratings.prod.svc.cluster.local
   *   trafficPolicy:
   *     loadBalancer:
   *       simple: ROUND_ROBIN
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: DestinationRule
   * metadata:
   *   name: bookinfo-ratings
   * spec:
   *   host: ratings.prod.svc.cluster.local
   *   trafficPolicy:
   *     loadBalancer:
   *       simple: ROUND_ROBIN
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * The following example sets up sticky sessions for the ratings service
   * hashing-based load balancer for the same ratings service using the
   * the User cookie as the hash key.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   *  apiVersion: networking.istio.io/v1alpha3
   *  kind: DestinationRule
   *  metadata:
   *    name: bookinfo-ratings
   *  spec:
   *    host: ratings.prod.svc.cluster.local
   *    trafficPolicy:
   *      loadBalancer:
   *        consistentHash:
   *          httpCookie:
   *            name: user
   *            ttl: 0s
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   *  apiVersion: networking.istio.io/v1beta1
   *  kind: DestinationRule
   *  metadata:
   *    name: bookinfo-ratings
   *  spec:
   *    host: ratings.prod.svc.cluster.local
   *    trafficPolicy:
   *      loadBalancer:
   *        consistentHash:
   *          httpCookie:
   *            name: user
   *            ttl: 0s
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.LoadBalancerSettings}
   */
  public static final class LoadBalancerSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.LoadBalancerSettings)
      LoadBalancerSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LoadBalancerSettings.newBuilder() to construct.
    private LoadBalancerSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LoadBalancerSettings() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LoadBalancerSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder.class);
    }

    /**
     * <pre>
     * Standard load balancing algorithms that require no tuning.
     * </pre>
     *
     * Protobuf enum {@code istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB}
     */
    public enum SimpleLB
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Round Robin policy. Default
       * </pre>
       *
       * <code>ROUND_ROBIN = 0;</code>
       */
      ROUND_ROBIN(0),
      /**
       * <pre>
       * The least request load balancer uses an O(1) algorithm which selects
       * two random healthy hosts and picks the host which has fewer active
       * requests.
       * </pre>
       *
       * <code>LEAST_CONN = 1;</code>
       */
      LEAST_CONN(1),
      /**
       * <pre>
       * The random load balancer selects a random healthy host. The random
       * load balancer generally performs better than round robin if no health
       * checking policy is configured.
       * </pre>
       *
       * <code>RANDOM = 2;</code>
       */
      RANDOM(2),
      /**
       * <pre>
       * This option will forward the connection to the original IP address
       * requested by the caller without doing any form of load
       * balancing. This option must be used with care. It is meant for
       * advanced use cases. Refer to Original Destination load balancer in
       * Envoy for further details.
       * </pre>
       *
       * <code>PASSTHROUGH = 3;</code>
       */
      PASSTHROUGH(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Round Robin policy. Default
       * </pre>
       *
       * <code>ROUND_ROBIN = 0;</code>
       */
      public static final int ROUND_ROBIN_VALUE = 0;
      /**
       * <pre>
       * The least request load balancer uses an O(1) algorithm which selects
       * two random healthy hosts and picks the host which has fewer active
       * requests.
       * </pre>
       *
       * <code>LEAST_CONN = 1;</code>
       */
      public static final int LEAST_CONN_VALUE = 1;
      /**
       * <pre>
       * The random load balancer selects a random healthy host. The random
       * load balancer generally performs better than round robin if no health
       * checking policy is configured.
       * </pre>
       *
       * <code>RANDOM = 2;</code>
       */
      public static final int RANDOM_VALUE = 2;
      /**
       * <pre>
       * This option will forward the connection to the original IP address
       * requested by the caller without doing any form of load
       * balancing. This option must be used with care. It is meant for
       * advanced use cases. Refer to Original Destination load balancer in
       * Envoy for further details.
       * </pre>
       *
       * <code>PASSTHROUGH = 3;</code>
       */
      public static final int PASSTHROUGH_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SimpleLB valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SimpleLB forNumber(int value) {
        switch (value) {
          case 0: return ROUND_ROBIN;
          case 1: return LEAST_CONN;
          case 2: return RANDOM;
          case 3: return PASSTHROUGH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SimpleLB>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SimpleLB> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SimpleLB>() {
              public SimpleLB findValueByNumber(int number) {
                return SimpleLB.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDescriptor().getEnumTypes().get(0);
      }

      private static final SimpleLB[] VALUES = values();

      public static SimpleLB valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SimpleLB(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB)
    }

    public interface ConsistentHashLBOrBuilder extends
        // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Hash based on a specific HTTP header.
       * </pre>
       *
       * <code>string http_header_name = 1;</code>
       * @return Whether the httpHeaderName field is set.
       */
      boolean hasHttpHeaderName();
      /**
       * <pre>
       * Hash based on a specific HTTP header.
       * </pre>
       *
       * <code>string http_header_name = 1;</code>
       * @return The httpHeaderName.
       */
      java.lang.String getHttpHeaderName();
      /**
       * <pre>
       * Hash based on a specific HTTP header.
       * </pre>
       *
       * <code>string http_header_name = 1;</code>
       * @return The bytes for httpHeaderName.
       */
      com.google.protobuf.ByteString
          getHttpHeaderNameBytes();

      /**
       * <pre>
       * Hash based on HTTP cookie.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
       * @return Whether the httpCookie field is set.
       */
      boolean hasHttpCookie();
      /**
       * <pre>
       * Hash based on HTTP cookie.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
       * @return The httpCookie.
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie getHttpCookie();
      /**
       * <pre>
       * Hash based on HTTP cookie.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookieOrBuilder getHttpCookieOrBuilder();

      /**
       * <pre>
       * Hash based on the source IP address.
       * </pre>
       *
       * <code>bool use_source_ip = 3;</code>
       * @return Whether the useSourceIp field is set.
       */
      boolean hasUseSourceIp();
      /**
       * <pre>
       * Hash based on the source IP address.
       * </pre>
       *
       * <code>bool use_source_ip = 3;</code>
       * @return The useSourceIp.
       */
      boolean getUseSourceIp();

      /**
       * <pre>
       * Hash based on a specific HTTP query parameter.
       * </pre>
       *
       * <code>string http_query_parameter_name = 5;</code>
       * @return Whether the httpQueryParameterName field is set.
       */
      boolean hasHttpQueryParameterName();
      /**
       * <pre>
       * Hash based on a specific HTTP query parameter.
       * </pre>
       *
       * <code>string http_query_parameter_name = 5;</code>
       * @return The httpQueryParameterName.
       */
      java.lang.String getHttpQueryParameterName();
      /**
       * <pre>
       * Hash based on a specific HTTP query parameter.
       * </pre>
       *
       * <code>string http_query_parameter_name = 5;</code>
       * @return The bytes for httpQueryParameterName.
       */
      com.google.protobuf.ByteString
          getHttpQueryParameterNameBytes();

      /**
       * <pre>
       * The minimum number of virtual nodes to use for the hash
       * ring. Defaults to 1024. Larger ring sizes result in more granular
       * load distributions. If the number of hosts in the load balancing
       * pool is larger than the ring size, each host will be assigned a
       * single virtual node.
       * </pre>
       *
       * <code>uint64 minimum_ring_size = 4;</code>
       * @return The minimumRingSize.
       */
      long getMinimumRingSize();

      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HashKeyCase getHashKeyCase();
    }
    /**
     * <pre>
     * Consistent Hash-based load balancing can be used to provide soft
     * session affinity based on HTTP headers, cookies or other
     * properties. This load balancing policy is applicable only for HTTP
     * connections. The affinity to a particular destination host will be
     * lost when one or more hosts are added/removed from the destination
     * service.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB}
     */
    public static final class ConsistentHashLB extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB)
        ConsistentHashLBOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ConsistentHashLB.newBuilder() to construct.
      private ConsistentHashLB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ConsistentHashLB() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ConsistentHashLB();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.Builder.class);
      }

      public interface HTTPCookieOrBuilder extends
          // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Name of the cookie.
         * </pre>
         *
         * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
         * @return The name.
         */
        java.lang.String getName();
        /**
         * <pre>
         * Name of the cookie.
         * </pre>
         *
         * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
            getNameBytes();

        /**
         * <pre>
         * Path to set for the cookie.
         * </pre>
         *
         * <code>string path = 2;</code>
         * @return The path.
         */
        java.lang.String getPath();
        /**
         * <pre>
         * Path to set for the cookie.
         * </pre>
         *
         * <code>string path = 2;</code>
         * @return The bytes for path.
         */
        com.google.protobuf.ByteString
            getPathBytes();

        /**
         * <pre>
         * Lifetime of the cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
         * @return Whether the ttl field is set.
         */
        boolean hasTtl();
        /**
         * <pre>
         * Lifetime of the cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
         * @return The ttl.
         */
        com.google.protobuf.Duration getTtl();
        /**
         * <pre>
         * Lifetime of the cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
         */
        com.google.protobuf.DurationOrBuilder getTtlOrBuilder();
      }
      /**
       * <pre>
       * Describes a HTTP cookie that will be used as the hash key for the
       * Consistent Hash load balancer. If the cookie is not present, it will
       * be generated.
       * </pre>
       *
       * Protobuf type {@code istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie}
       */
      public static final class HTTPCookie extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie)
          HTTPCookieOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use HTTPCookie.newBuilder() to construct.
        private HTTPCookie(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private HTTPCookie() {
          name_ = "";
          path_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new HTTPCookie();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_HTTPCookie_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_HTTPCookie_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.Builder.class);
        }

        public static final int NAME_FIELD_NUMBER = 1;
        @SuppressWarnings("serial")
        private volatile java.lang.Object name_ = "";
        /**
         * <pre>
         * Name of the cookie.
         * </pre>
         *
         * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the cookie.
         * </pre>
         *
         * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PATH_FIELD_NUMBER = 2;
        @SuppressWarnings("serial")
        private volatile java.lang.Object path_ = "";
        /**
         * <pre>
         * Path to set for the cookie.
         * </pre>
         *
         * <code>string path = 2;</code>
         * @return The path.
         */
        @java.lang.Override
        public java.lang.String getPath() {
          java.lang.Object ref = path_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            path_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Path to set for the cookie.
         * </pre>
         *
         * <code>string path = 2;</code>
         * @return The bytes for path.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getPathBytes() {
          java.lang.Object ref = path_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            path_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TTL_FIELD_NUMBER = 3;
        private com.google.protobuf.Duration ttl_;
        /**
         * <pre>
         * Lifetime of the cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
         * @return Whether the ttl field is set.
         */
        @java.lang.Override
        public boolean hasTtl() {
          return ttl_ != null;
        }
        /**
         * <pre>
         * Lifetime of the cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
         * @return The ttl.
         */
        @java.lang.Override
        public com.google.protobuf.Duration getTtl() {
          return ttl_ == null ? com.google.protobuf.Duration.getDefaultInstance() : ttl_;
        }
        /**
         * <pre>
         * Lifetime of the cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
         */
        @java.lang.Override
        public com.google.protobuf.DurationOrBuilder getTtlOrBuilder() {
          return ttl_ == null ? com.google.protobuf.Duration.getDefaultInstance() : ttl_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, path_);
          }
          if (ttl_ != null) {
            output.writeMessage(3, getTtl());
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, path_);
          }
          if (ttl_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getTtl());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie)) {
            return super.equals(obj);
          }
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie other = (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie) obj;

          if (!getName()
              .equals(other.getName())) return false;
          if (!getPath()
              .equals(other.getPath())) return false;
          if (hasTtl() != other.hasTtl()) return false;
          if (hasTtl()) {
            if (!getTtl()
                .equals(other.getTtl())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
          hash = (37 * hash) + PATH_FIELD_NUMBER;
          hash = (53 * hash) + getPath().hashCode();
          if (hasTtl()) {
            hash = (37 * hash) + TTL_FIELD_NUMBER;
            hash = (53 * hash) + getTtl().hashCode();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Describes a HTTP cookie that will be used as the hash key for the
         * Consistent Hash load balancer. If the cookie is not present, it will
         * be generated.
         * </pre>
         *
         * Protobuf type {@code istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie)
            istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookieOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_HTTPCookie_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_HTTPCookie_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.Builder.class);
          }

          // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            name_ = "";
            path_ = "";
            ttl_ = null;
            if (ttlBuilder_ != null) {
              ttlBuilder_.dispose();
              ttlBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_HTTPCookie_descriptor;
          }

          @java.lang.Override
          public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie getDefaultInstanceForType() {
            return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.getDefaultInstance();
          }

          @java.lang.Override
          public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie build() {
            istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie buildPartial() {
            istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie result = new istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie result) {
            int from_bitField0_ = bitField0_;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.name_ = name_;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.path_ = path_;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.ttl_ = ttlBuilder_ == null
                  ? ttl_
                  : ttlBuilder_.build();
            }
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie) {
              return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie other) {
            if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.getDefaultInstance()) return this;
            if (!other.getName().isEmpty()) {
              name_ = other.name_;
              bitField0_ |= 0x00000001;
              onChanged();
            }
            if (!other.getPath().isEmpty()) {
              path_ = other.path_;
              bitField0_ |= 0x00000002;
              onChanged();
            }
            if (other.hasTtl()) {
              mergeTtl(other.getTtl());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    name_ = input.readStringRequireUtf8();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 10
                  case 18: {
                    path_ = input.readStringRequireUtf8();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                  case 26: {
                    input.readMessage(
                        getTtlFieldBuilder().getBuilder(),
                        extensionRegistry);
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 26
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private java.lang.Object name_ = "";
          /**
           * <pre>
           * Name of the cookie.
           * </pre>
           *
           * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
           * @return The name.
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              name_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the cookie.
           * </pre>
           *
           * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
           * @return The bytes for name.
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the cookie.
           * </pre>
           *
           * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
           * @param value The name to set.
           * @return This builder for chaining.
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) { throw new NullPointerException(); }
            name_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the cookie.
           * </pre>
           *
           * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
           * @return This builder for chaining.
           */
          public Builder clearName() {
            name_ = getDefaultInstance().getName();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the cookie.
           * </pre>
           *
           * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
           * @param value The bytes for name to set.
           * @return This builder for chaining.
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            checkByteStringIsUtf8(value);
            name_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }

          private java.lang.Object path_ = "";
          /**
           * <pre>
           * Path to set for the cookie.
           * </pre>
           *
           * <code>string path = 2;</code>
           * @return The path.
           */
          public java.lang.String getPath() {
            java.lang.Object ref = path_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              path_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Path to set for the cookie.
           * </pre>
           *
           * <code>string path = 2;</code>
           * @return The bytes for path.
           */
          public com.google.protobuf.ByteString
              getPathBytes() {
            java.lang.Object ref = path_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              path_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Path to set for the cookie.
           * </pre>
           *
           * <code>string path = 2;</code>
           * @param value The path to set.
           * @return This builder for chaining.
           */
          public Builder setPath(
              java.lang.String value) {
            if (value == null) { throw new NullPointerException(); }
            path_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Path to set for the cookie.
           * </pre>
           *
           * <code>string path = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearPath() {
            path_ = getDefaultInstance().getPath();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Path to set for the cookie.
           * </pre>
           *
           * <code>string path = 2;</code>
           * @param value The bytes for path to set.
           * @return This builder for chaining.
           */
          public Builder setPathBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            checkByteStringIsUtf8(value);
            path_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }

          private com.google.protobuf.Duration ttl_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> ttlBuilder_;
          /**
           * <pre>
           * Lifetime of the cookie.
           * </pre>
           *
           * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           * @return Whether the ttl field is set.
           */
          public boolean hasTtl() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Lifetime of the cookie.
           * </pre>
           *
           * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           * @return The ttl.
           */
          public com.google.protobuf.Duration getTtl() {
            if (ttlBuilder_ == null) {
              return ttl_ == null ? com.google.protobuf.Duration.getDefaultInstance() : ttl_;
            } else {
              return ttlBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Lifetime of the cookie.
           * </pre>
           *
           * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           */
          public Builder setTtl(com.google.protobuf.Duration value) {
            if (ttlBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ttl_ = value;
            } else {
              ttlBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Lifetime of the cookie.
           * </pre>
           *
           * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           */
          public Builder setTtl(
              com.google.protobuf.Duration.Builder builderForValue) {
            if (ttlBuilder_ == null) {
              ttl_ = builderForValue.build();
            } else {
              ttlBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Lifetime of the cookie.
           * </pre>
           *
           * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           */
          public Builder mergeTtl(com.google.protobuf.Duration value) {
            if (ttlBuilder_ == null) {
              if (((bitField0_ & 0x00000004) != 0) &&
                ttl_ != null &&
                ttl_ != com.google.protobuf.Duration.getDefaultInstance()) {
                getTtlBuilder().mergeFrom(value);
              } else {
                ttl_ = value;
              }
            } else {
              ttlBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Lifetime of the cookie.
           * </pre>
           *
           * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           */
          public Builder clearTtl() {
            bitField0_ = (bitField0_ & ~0x00000004);
            ttl_ = null;
            if (ttlBuilder_ != null) {
              ttlBuilder_.dispose();
              ttlBuilder_ = null;
            }
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Lifetime of the cookie.
           * </pre>
           *
           * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           */
          public com.google.protobuf.Duration.Builder getTtlBuilder() {
            bitField0_ |= 0x00000004;
            onChanged();
            return getTtlFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Lifetime of the cookie.
           * </pre>
           *
           * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           */
          public com.google.protobuf.DurationOrBuilder getTtlOrBuilder() {
            if (ttlBuilder_ != null) {
              return ttlBuilder_.getMessageOrBuilder();
            } else {
              return ttl_ == null ?
                  com.google.protobuf.Duration.getDefaultInstance() : ttl_;
            }
          }
          /**
           * <pre>
           * Lifetime of the cookie.
           * </pre>
           *
           * <code>.google.protobuf.Duration ttl = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
              getTtlFieldBuilder() {
            if (ttlBuilder_ == null) {
              ttlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                      getTtl(),
                      getParentForChildren(),
                      isClean());
              ttl_ = null;
            }
            return ttlBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie)
        }

        // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie)
        private static final istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie();
        }

        public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<HTTPCookie>
            PARSER = new com.google.protobuf.AbstractParser<HTTPCookie>() {
          @java.lang.Override
          public HTTPCookie parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<HTTPCookie> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<HTTPCookie> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int hashKeyCase_ = 0;
      private java.lang.Object hashKey_;
      public enum HashKeyCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        HTTP_HEADER_NAME(1),
        HTTP_COOKIE(2),
        USE_SOURCE_IP(3),
        HTTP_QUERY_PARAMETER_NAME(5),
        HASHKEY_NOT_SET(0);
        private final int value;
        private HashKeyCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static HashKeyCase valueOf(int value) {
          return forNumber(value);
        }

        public static HashKeyCase forNumber(int value) {
          switch (value) {
            case 1: return HTTP_HEADER_NAME;
            case 2: return HTTP_COOKIE;
            case 3: return USE_SOURCE_IP;
            case 5: return HTTP_QUERY_PARAMETER_NAME;
            case 0: return HASHKEY_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public HashKeyCase
      getHashKeyCase() {
        return HashKeyCase.forNumber(
            hashKeyCase_);
      }

      public static final int HTTP_HEADER_NAME_FIELD_NUMBER = 1;
      /**
       * <pre>
       * Hash based on a specific HTTP header.
       * </pre>
       *
       * <code>string http_header_name = 1;</code>
       * @return Whether the httpHeaderName field is set.
       */
      public boolean hasHttpHeaderName() {
        return hashKeyCase_ == 1;
      }
      /**
       * <pre>
       * Hash based on a specific HTTP header.
       * </pre>
       *
       * <code>string http_header_name = 1;</code>
       * @return The httpHeaderName.
       */
      public java.lang.String getHttpHeaderName() {
        java.lang.Object ref = "";
        if (hashKeyCase_ == 1) {
          ref = hashKey_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (hashKeyCase_ == 1) {
            hashKey_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Hash based on a specific HTTP header.
       * </pre>
       *
       * <code>string http_header_name = 1;</code>
       * @return The bytes for httpHeaderName.
       */
      public com.google.protobuf.ByteString
          getHttpHeaderNameBytes() {
        java.lang.Object ref = "";
        if (hashKeyCase_ == 1) {
          ref = hashKey_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (hashKeyCase_ == 1) {
            hashKey_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int HTTP_COOKIE_FIELD_NUMBER = 2;
      /**
       * <pre>
       * Hash based on HTTP cookie.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
       * @return Whether the httpCookie field is set.
       */
      @java.lang.Override
      public boolean hasHttpCookie() {
        return hashKeyCase_ == 2;
      }
      /**
       * <pre>
       * Hash based on HTTP cookie.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
       * @return The httpCookie.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie getHttpCookie() {
        if (hashKeyCase_ == 2) {
           return (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie) hashKey_;
        }
        return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.getDefaultInstance();
      }
      /**
       * <pre>
       * Hash based on HTTP cookie.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookieOrBuilder getHttpCookieOrBuilder() {
        if (hashKeyCase_ == 2) {
           return (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie) hashKey_;
        }
        return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.getDefaultInstance();
      }

      public static final int USE_SOURCE_IP_FIELD_NUMBER = 3;
      /**
       * <pre>
       * Hash based on the source IP address.
       * </pre>
       *
       * <code>bool use_source_ip = 3;</code>
       * @return Whether the useSourceIp field is set.
       */
      @java.lang.Override
      public boolean hasUseSourceIp() {
        return hashKeyCase_ == 3;
      }
      /**
       * <pre>
       * Hash based on the source IP address.
       * </pre>
       *
       * <code>bool use_source_ip = 3;</code>
       * @return The useSourceIp.
       */
      @java.lang.Override
      public boolean getUseSourceIp() {
        if (hashKeyCase_ == 3) {
          return (java.lang.Boolean) hashKey_;
        }
        return false;
      }

      public static final int HTTP_QUERY_PARAMETER_NAME_FIELD_NUMBER = 5;
      /**
       * <pre>
       * Hash based on a specific HTTP query parameter.
       * </pre>
       *
       * <code>string http_query_parameter_name = 5;</code>
       * @return Whether the httpQueryParameterName field is set.
       */
      public boolean hasHttpQueryParameterName() {
        return hashKeyCase_ == 5;
      }
      /**
       * <pre>
       * Hash based on a specific HTTP query parameter.
       * </pre>
       *
       * <code>string http_query_parameter_name = 5;</code>
       * @return The httpQueryParameterName.
       */
      public java.lang.String getHttpQueryParameterName() {
        java.lang.Object ref = "";
        if (hashKeyCase_ == 5) {
          ref = hashKey_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (hashKeyCase_ == 5) {
            hashKey_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Hash based on a specific HTTP query parameter.
       * </pre>
       *
       * <code>string http_query_parameter_name = 5;</code>
       * @return The bytes for httpQueryParameterName.
       */
      public com.google.protobuf.ByteString
          getHttpQueryParameterNameBytes() {
        java.lang.Object ref = "";
        if (hashKeyCase_ == 5) {
          ref = hashKey_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (hashKeyCase_ == 5) {
            hashKey_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MINIMUM_RING_SIZE_FIELD_NUMBER = 4;
      private long minimumRingSize_ = 0L;
      /**
       * <pre>
       * The minimum number of virtual nodes to use for the hash
       * ring. Defaults to 1024. Larger ring sizes result in more granular
       * load distributions. If the number of hosts in the load balancing
       * pool is larger than the ring size, each host will be assigned a
       * single virtual node.
       * </pre>
       *
       * <code>uint64 minimum_ring_size = 4;</code>
       * @return The minimumRingSize.
       */
      @java.lang.Override
      public long getMinimumRingSize() {
        return minimumRingSize_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (hashKeyCase_ == 1) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, hashKey_);
        }
        if (hashKeyCase_ == 2) {
          output.writeMessage(2, (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie) hashKey_);
        }
        if (hashKeyCase_ == 3) {
          output.writeBool(
              3, (boolean)((java.lang.Boolean) hashKey_));
        }
        if (minimumRingSize_ != 0L) {
          output.writeUInt64(4, minimumRingSize_);
        }
        if (hashKeyCase_ == 5) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, hashKey_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (hashKeyCase_ == 1) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, hashKey_);
        }
        if (hashKeyCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie) hashKey_);
        }
        if (hashKeyCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(
                3, (boolean)((java.lang.Boolean) hashKey_));
        }
        if (minimumRingSize_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, minimumRingSize_);
        }
        if (hashKeyCase_ == 5) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, hashKey_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB)) {
          return super.equals(obj);
        }
        istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB other = (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB) obj;

        if (getMinimumRingSize()
            != other.getMinimumRingSize()) return false;
        if (!getHashKeyCase().equals(other.getHashKeyCase())) return false;
        switch (hashKeyCase_) {
          case 1:
            if (!getHttpHeaderName()
                .equals(other.getHttpHeaderName())) return false;
            break;
          case 2:
            if (!getHttpCookie()
                .equals(other.getHttpCookie())) return false;
            break;
          case 3:
            if (getUseSourceIp()
                != other.getUseSourceIp()) return false;
            break;
          case 5:
            if (!getHttpQueryParameterName()
                .equals(other.getHttpQueryParameterName())) return false;
            break;
          case 0:
          default:
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + MINIMUM_RING_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMinimumRingSize());
        switch (hashKeyCase_) {
          case 1:
            hash = (37 * hash) + HTTP_HEADER_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getHttpHeaderName().hashCode();
            break;
          case 2:
            hash = (37 * hash) + HTTP_COOKIE_FIELD_NUMBER;
            hash = (53 * hash) + getHttpCookie().hashCode();
            break;
          case 3:
            hash = (37 * hash) + USE_SOURCE_IP_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getUseSourceIp());
            break;
          case 5:
            hash = (37 * hash) + HTTP_QUERY_PARAMETER_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getHttpQueryParameterName().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Consistent Hash-based load balancing can be used to provide soft
       * session affinity based on HTTP headers, cookies or other
       * properties. This load balancing policy is applicable only for HTTP
       * connections. The affinity to a particular destination host will be
       * lost when one or more hosts are added/removed from the destination
       * service.
       * </pre>
       *
       * Protobuf type {@code istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB)
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLBOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.Builder.class);
        }

        // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (httpCookieBuilder_ != null) {
            httpCookieBuilder_.clear();
          }
          minimumRingSize_ = 0L;
          hashKeyCase_ = 0;
          hashKey_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_descriptor;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB getDefaultInstanceForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.getDefaultInstance();
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB build() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB buildPartial() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB result = new istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          buildPartialOneofs(result);
          onBuilt();
          return result;
        }

        private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.minimumRingSize_ = minimumRingSize_;
          }
        }

        private void buildPartialOneofs(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB result) {
          result.hashKeyCase_ = hashKeyCase_;
          result.hashKey_ = this.hashKey_;
          if (hashKeyCase_ == 2 &&
              httpCookieBuilder_ != null) {
            result.hashKey_ = httpCookieBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB) {
            return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB other) {
          if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.getDefaultInstance()) return this;
          if (other.getMinimumRingSize() != 0L) {
            setMinimumRingSize(other.getMinimumRingSize());
          }
          switch (other.getHashKeyCase()) {
            case HTTP_HEADER_NAME: {
              hashKeyCase_ = 1;
              hashKey_ = other.hashKey_;
              onChanged();
              break;
            }
            case HTTP_COOKIE: {
              mergeHttpCookie(other.getHttpCookie());
              break;
            }
            case USE_SOURCE_IP: {
              setUseSourceIp(other.getUseSourceIp());
              break;
            }
            case HTTP_QUERY_PARAMETER_NAME: {
              hashKeyCase_ = 5;
              hashKey_ = other.hashKey_;
              onChanged();
              break;
            }
            case HASHKEY_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();
                  hashKeyCase_ = 1;
                  hashKey_ = s;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getHttpCookieFieldBuilder().getBuilder(),
                      extensionRegistry);
                  hashKeyCase_ = 2;
                  break;
                } // case 18
                case 24: {
                  hashKey_ = input.readBool();
                  hashKeyCase_ = 3;
                  break;
                } // case 24
                case 32: {
                  minimumRingSize_ = input.readUInt64();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 32
                case 42: {
                  java.lang.String s = input.readStringRequireUtf8();
                  hashKeyCase_ = 5;
                  hashKey_ = s;
                  break;
                } // case 42
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int hashKeyCase_ = 0;
        private java.lang.Object hashKey_;
        public HashKeyCase
            getHashKeyCase() {
          return HashKeyCase.forNumber(
              hashKeyCase_);
        }

        public Builder clearHashKey() {
          hashKeyCase_ = 0;
          hashKey_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        /**
         * <pre>
         * Hash based on a specific HTTP header.
         * </pre>
         *
         * <code>string http_header_name = 1;</code>
         * @return Whether the httpHeaderName field is set.
         */
        @java.lang.Override
        public boolean hasHttpHeaderName() {
          return hashKeyCase_ == 1;
        }
        /**
         * <pre>
         * Hash based on a specific HTTP header.
         * </pre>
         *
         * <code>string http_header_name = 1;</code>
         * @return The httpHeaderName.
         */
        @java.lang.Override
        public java.lang.String getHttpHeaderName() {
          java.lang.Object ref = "";
          if (hashKeyCase_ == 1) {
            ref = hashKey_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (hashKeyCase_ == 1) {
              hashKey_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Hash based on a specific HTTP header.
         * </pre>
         *
         * <code>string http_header_name = 1;</code>
         * @return The bytes for httpHeaderName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getHttpHeaderNameBytes() {
          java.lang.Object ref = "";
          if (hashKeyCase_ == 1) {
            ref = hashKey_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (hashKeyCase_ == 1) {
              hashKey_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Hash based on a specific HTTP header.
         * </pre>
         *
         * <code>string http_header_name = 1;</code>
         * @param value The httpHeaderName to set.
         * @return This builder for chaining.
         */
        public Builder setHttpHeaderName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          hashKeyCase_ = 1;
          hashKey_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Hash based on a specific HTTP header.
         * </pre>
         *
         * <code>string http_header_name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearHttpHeaderName() {
          if (hashKeyCase_ == 1) {
            hashKeyCase_ = 0;
            hashKey_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * Hash based on a specific HTTP header.
         * </pre>
         *
         * <code>string http_header_name = 1;</code>
         * @param value The bytes for httpHeaderName to set.
         * @return This builder for chaining.
         */
        public Builder setHttpHeaderNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          hashKeyCase_ = 1;
          hashKey_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookieOrBuilder> httpCookieBuilder_;
        /**
         * <pre>
         * Hash based on HTTP cookie.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
         * @return Whether the httpCookie field is set.
         */
        @java.lang.Override
        public boolean hasHttpCookie() {
          return hashKeyCase_ == 2;
        }
        /**
         * <pre>
         * Hash based on HTTP cookie.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
         * @return The httpCookie.
         */
        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie getHttpCookie() {
          if (httpCookieBuilder_ == null) {
            if (hashKeyCase_ == 2) {
              return (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie) hashKey_;
            }
            return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.getDefaultInstance();
          } else {
            if (hashKeyCase_ == 2) {
              return httpCookieBuilder_.getMessage();
            }
            return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Hash based on HTTP cookie.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
         */
        public Builder setHttpCookie(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie value) {
          if (httpCookieBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hashKey_ = value;
            onChanged();
          } else {
            httpCookieBuilder_.setMessage(value);
          }
          hashKeyCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * Hash based on HTTP cookie.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
         */
        public Builder setHttpCookie(
            istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.Builder builderForValue) {
          if (httpCookieBuilder_ == null) {
            hashKey_ = builderForValue.build();
            onChanged();
          } else {
            httpCookieBuilder_.setMessage(builderForValue.build());
          }
          hashKeyCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * Hash based on HTTP cookie.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
         */
        public Builder mergeHttpCookie(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie value) {
          if (httpCookieBuilder_ == null) {
            if (hashKeyCase_ == 2 &&
                hashKey_ != istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.getDefaultInstance()) {
              hashKey_ = istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.newBuilder((istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie) hashKey_)
                  .mergeFrom(value).buildPartial();
            } else {
              hashKey_ = value;
            }
            onChanged();
          } else {
            if (hashKeyCase_ == 2) {
              httpCookieBuilder_.mergeFrom(value);
            } else {
              httpCookieBuilder_.setMessage(value);
            }
          }
          hashKeyCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * Hash based on HTTP cookie.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
         */
        public Builder clearHttpCookie() {
          if (httpCookieBuilder_ == null) {
            if (hashKeyCase_ == 2) {
              hashKeyCase_ = 0;
              hashKey_ = null;
              onChanged();
            }
          } else {
            if (hashKeyCase_ == 2) {
              hashKeyCase_ = 0;
              hashKey_ = null;
            }
            httpCookieBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Hash based on HTTP cookie.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.Builder getHttpCookieBuilder() {
          return getHttpCookieFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Hash based on HTTP cookie.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
         */
        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookieOrBuilder getHttpCookieOrBuilder() {
          if ((hashKeyCase_ == 2) && (httpCookieBuilder_ != null)) {
            return httpCookieBuilder_.getMessageOrBuilder();
          } else {
            if (hashKeyCase_ == 2) {
              return (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie) hashKey_;
            }
            return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Hash based on HTTP cookie.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie http_cookie = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookieOrBuilder> 
            getHttpCookieFieldBuilder() {
          if (httpCookieBuilder_ == null) {
            if (!(hashKeyCase_ == 2)) {
              hashKey_ = istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.getDefaultInstance();
            }
            httpCookieBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookieOrBuilder>(
                    (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.HTTPCookie) hashKey_,
                    getParentForChildren(),
                    isClean());
            hashKey_ = null;
          }
          hashKeyCase_ = 2;
          onChanged();
          return httpCookieBuilder_;
        }

        /**
         * <pre>
         * Hash based on the source IP address.
         * </pre>
         *
         * <code>bool use_source_ip = 3;</code>
         * @return Whether the useSourceIp field is set.
         */
        public boolean hasUseSourceIp() {
          return hashKeyCase_ == 3;
        }
        /**
         * <pre>
         * Hash based on the source IP address.
         * </pre>
         *
         * <code>bool use_source_ip = 3;</code>
         * @return The useSourceIp.
         */
        public boolean getUseSourceIp() {
          if (hashKeyCase_ == 3) {
            return (java.lang.Boolean) hashKey_;
          }
          return false;
        }
        /**
         * <pre>
         * Hash based on the source IP address.
         * </pre>
         *
         * <code>bool use_source_ip = 3;</code>
         * @param value The useSourceIp to set.
         * @return This builder for chaining.
         */
        public Builder setUseSourceIp(boolean value) {
          
          hashKeyCase_ = 3;
          hashKey_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Hash based on the source IP address.
         * </pre>
         *
         * <code>bool use_source_ip = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearUseSourceIp() {
          if (hashKeyCase_ == 3) {
            hashKeyCase_ = 0;
            hashKey_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <pre>
         * Hash based on a specific HTTP query parameter.
         * </pre>
         *
         * <code>string http_query_parameter_name = 5;</code>
         * @return Whether the httpQueryParameterName field is set.
         */
        @java.lang.Override
        public boolean hasHttpQueryParameterName() {
          return hashKeyCase_ == 5;
        }
        /**
         * <pre>
         * Hash based on a specific HTTP query parameter.
         * </pre>
         *
         * <code>string http_query_parameter_name = 5;</code>
         * @return The httpQueryParameterName.
         */
        @java.lang.Override
        public java.lang.String getHttpQueryParameterName() {
          java.lang.Object ref = "";
          if (hashKeyCase_ == 5) {
            ref = hashKey_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (hashKeyCase_ == 5) {
              hashKey_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Hash based on a specific HTTP query parameter.
         * </pre>
         *
         * <code>string http_query_parameter_name = 5;</code>
         * @return The bytes for httpQueryParameterName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getHttpQueryParameterNameBytes() {
          java.lang.Object ref = "";
          if (hashKeyCase_ == 5) {
            ref = hashKey_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (hashKeyCase_ == 5) {
              hashKey_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Hash based on a specific HTTP query parameter.
         * </pre>
         *
         * <code>string http_query_parameter_name = 5;</code>
         * @param value The httpQueryParameterName to set.
         * @return This builder for chaining.
         */
        public Builder setHttpQueryParameterName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          hashKeyCase_ = 5;
          hashKey_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Hash based on a specific HTTP query parameter.
         * </pre>
         *
         * <code>string http_query_parameter_name = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearHttpQueryParameterName() {
          if (hashKeyCase_ == 5) {
            hashKeyCase_ = 0;
            hashKey_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * Hash based on a specific HTTP query parameter.
         * </pre>
         *
         * <code>string http_query_parameter_name = 5;</code>
         * @param value The bytes for httpQueryParameterName to set.
         * @return This builder for chaining.
         */
        public Builder setHttpQueryParameterNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          hashKeyCase_ = 5;
          hashKey_ = value;
          onChanged();
          return this;
        }

        private long minimumRingSize_ ;
        /**
         * <pre>
         * The minimum number of virtual nodes to use for the hash
         * ring. Defaults to 1024. Larger ring sizes result in more granular
         * load distributions. If the number of hosts in the load balancing
         * pool is larger than the ring size, each host will be assigned a
         * single virtual node.
         * </pre>
         *
         * <code>uint64 minimum_ring_size = 4;</code>
         * @return The minimumRingSize.
         */
        @java.lang.Override
        public long getMinimumRingSize() {
          return minimumRingSize_;
        }
        /**
         * <pre>
         * The minimum number of virtual nodes to use for the hash
         * ring. Defaults to 1024. Larger ring sizes result in more granular
         * load distributions. If the number of hosts in the load balancing
         * pool is larger than the ring size, each host will be assigned a
         * single virtual node.
         * </pre>
         *
         * <code>uint64 minimum_ring_size = 4;</code>
         * @param value The minimumRingSize to set.
         * @return This builder for chaining.
         */
        public Builder setMinimumRingSize(long value) {
          
          minimumRingSize_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The minimum number of virtual nodes to use for the hash
         * ring. Defaults to 1024. Larger ring sizes result in more granular
         * load distributions. If the number of hosts in the load balancing
         * pool is larger than the ring size, each host will be assigned a
         * single virtual node.
         * </pre>
         *
         * <code>uint64 minimum_ring_size = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearMinimumRingSize() {
          bitField0_ = (bitField0_ & ~0x00000010);
          minimumRingSize_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB)
      }

      // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB)
      private static final istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB();
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ConsistentHashLB>
          PARSER = new com.google.protobuf.AbstractParser<ConsistentHashLB>() {
        @java.lang.Override
        public ConsistentHashLB parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ConsistentHashLB> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ConsistentHashLB> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int lbPolicyCase_ = 0;
    private java.lang.Object lbPolicy_;
    public enum LbPolicyCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SIMPLE(1),
      CONSISTENT_HASH(2),
      LBPOLICY_NOT_SET(0);
      private final int value;
      private LbPolicyCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LbPolicyCase valueOf(int value) {
        return forNumber(value);
      }

      public static LbPolicyCase forNumber(int value) {
        switch (value) {
          case 1: return SIMPLE;
          case 2: return CONSISTENT_HASH;
          case 0: return LBPOLICY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public LbPolicyCase
    getLbPolicyCase() {
      return LbPolicyCase.forNumber(
          lbPolicyCase_);
    }

    public static final int SIMPLE_FIELD_NUMBER = 1;
    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
     * @return Whether the simple field is set.
     */
    public boolean hasSimple() {
      return lbPolicyCase_ == 1;
    }
    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
     * @return The enum numeric value on the wire for simple.
     */
    public int getSimpleValue() {
      if (lbPolicyCase_ == 1) {
        return (java.lang.Integer) lbPolicy_;
      }
      return 0;
    }
    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
     * @return The simple.
     */
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB getSimple() {
      if (lbPolicyCase_ == 1) {
        istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB result = istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB.forNumber(
            (java.lang.Integer) lbPolicy_);
        return result == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB.UNRECOGNIZED : result;
      }
      return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB.ROUND_ROBIN;
    }

    public static final int CONSISTENT_HASH_FIELD_NUMBER = 2;
    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
     * @return Whether the consistentHash field is set.
     */
    @java.lang.Override
    public boolean hasConsistentHash() {
      return lbPolicyCase_ == 2;
    }
    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
     * @return The consistentHash.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB getConsistentHash() {
      if (lbPolicyCase_ == 2) {
         return (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB) lbPolicy_;
      }
      return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.getDefaultInstance();
    }
    /**
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLBOrBuilder getConsistentHashOrBuilder() {
      if (lbPolicyCase_ == 2) {
         return (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB) lbPolicy_;
      }
      return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.getDefaultInstance();
    }

    public static final int LOCALITY_LB_SETTING_FIELD_NUMBER = 3;
    private istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting localityLbSetting_;
    /**
     * <pre>
     * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
     * between this object and the object one in MeshConfig
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
     * @return Whether the localityLbSetting field is set.
     */
    @java.lang.Override
    public boolean hasLocalityLbSetting() {
      return localityLbSetting_ != null;
    }
    /**
     * <pre>
     * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
     * between this object and the object one in MeshConfig
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
     * @return The localityLbSetting.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting getLocalityLbSetting() {
      return localityLbSetting_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.getDefaultInstance() : localityLbSetting_;
    }
    /**
     * <pre>
     * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
     * between this object and the object one in MeshConfig
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSettingOrBuilder getLocalityLbSettingOrBuilder() {
      return localityLbSetting_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.getDefaultInstance() : localityLbSetting_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (lbPolicyCase_ == 1) {
        output.writeEnum(1, ((java.lang.Integer) lbPolicy_));
      }
      if (lbPolicyCase_ == 2) {
        output.writeMessage(2, (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB) lbPolicy_);
      }
      if (localityLbSetting_ != null) {
        output.writeMessage(3, getLocalityLbSetting());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (lbPolicyCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, ((java.lang.Integer) lbPolicy_));
      }
      if (lbPolicyCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB) lbPolicy_);
      }
      if (localityLbSetting_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLocalityLbSetting());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings other = (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings) obj;

      if (hasLocalityLbSetting() != other.hasLocalityLbSetting()) return false;
      if (hasLocalityLbSetting()) {
        if (!getLocalityLbSetting()
            .equals(other.getLocalityLbSetting())) return false;
      }
      if (!getLbPolicyCase().equals(other.getLbPolicyCase())) return false;
      switch (lbPolicyCase_) {
        case 1:
          if (getSimpleValue()
              != other.getSimpleValue()) return false;
          break;
        case 2:
          if (!getConsistentHash()
              .equals(other.getConsistentHash())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLocalityLbSetting()) {
        hash = (37 * hash) + LOCALITY_LB_SETTING_FIELD_NUMBER;
        hash = (53 * hash) + getLocalityLbSetting().hashCode();
      }
      switch (lbPolicyCase_) {
        case 1:
          hash = (37 * hash) + SIMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getSimpleValue();
          break;
        case 2:
          hash = (37 * hash) + CONSISTENT_HASH_FIELD_NUMBER;
          hash = (53 * hash) + getConsistentHash().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Load balancing policies to apply for a specific destination. See Envoy's
     * load balancing
     * [documentation](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancing)
     * for more details.
     * For example, the following rule uses a round robin load balancing policy
     * for all traffic going to the ratings service.
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1alpha3
     * kind: DestinationRule
     * metadata:
     *   name: bookinfo-ratings
     * spec:
     *   host: ratings.prod.svc.cluster.local
     *   trafficPolicy:
     *     loadBalancer:
     *       simple: ROUND_ROBIN
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1beta1
     * kind: DestinationRule
     * metadata:
     *   name: bookinfo-ratings
     * spec:
     *   host: ratings.prod.svc.cluster.local
     *   trafficPolicy:
     *     loadBalancer:
     *       simple: ROUND_ROBIN
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * The following example sets up sticky sessions for the ratings service
     * hashing-based load balancer for the same ratings service using the
     * the User cookie as the hash key.
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     *  apiVersion: networking.istio.io/v1alpha3
     *  kind: DestinationRule
     *  metadata:
     *    name: bookinfo-ratings
     *  spec:
     *    host: ratings.prod.svc.cluster.local
     *    trafficPolicy:
     *      loadBalancer:
     *        consistentHash:
     *          httpCookie:
     *            name: user
     *            ttl: 0s
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     *  apiVersion: networking.istio.io/v1beta1
     *  kind: DestinationRule
     *  metadata:
     *    name: bookinfo-ratings
     *  spec:
     *    host: ratings.prod.svc.cluster.local
     *    trafficPolicy:
     *      loadBalancer:
     *        consistentHash:
     *          httpCookie:
     *            name: user
     *            ttl: 0s
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.LoadBalancerSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.LoadBalancerSettings)
        istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (consistentHashBuilder_ != null) {
          consistentHashBuilder_.clear();
        }
        localityLbSetting_ = null;
        if (localityLbSettingBuilder_ != null) {
          localityLbSettingBuilder_.dispose();
          localityLbSettingBuilder_ = null;
        }
        lbPolicyCase_ = 0;
        lbPolicy_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LoadBalancerSettings_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings getDefaultInstanceForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings build() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings buildPartial() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings result = new istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.localityLbSetting_ = localityLbSettingBuilder_ == null
              ? localityLbSetting_
              : localityLbSettingBuilder_.build();
        }
      }

      private void buildPartialOneofs(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings result) {
        result.lbPolicyCase_ = lbPolicyCase_;
        result.lbPolicy_ = this.lbPolicy_;
        if (lbPolicyCase_ == 2 &&
            consistentHashBuilder_ != null) {
          result.lbPolicy_ = consistentHashBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings) {
          return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings other) {
        if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.getDefaultInstance()) return this;
        if (other.hasLocalityLbSetting()) {
          mergeLocalityLbSetting(other.getLocalityLbSetting());
        }
        switch (other.getLbPolicyCase()) {
          case SIMPLE: {
            setSimpleValue(other.getSimpleValue());
            break;
          }
          case CONSISTENT_HASH: {
            mergeConsistentHash(other.getConsistentHash());
            break;
          }
          case LBPOLICY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();
                lbPolicyCase_ = 1;
                lbPolicy_ = rawValue;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getConsistentHashFieldBuilder().getBuilder(),
                    extensionRegistry);
                lbPolicyCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getLocalityLbSettingFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int lbPolicyCase_ = 0;
      private java.lang.Object lbPolicy_;
      public LbPolicyCase
          getLbPolicyCase() {
        return LbPolicyCase.forNumber(
            lbPolicyCase_);
      }

      public Builder clearLbPolicy() {
        lbPolicyCase_ = 0;
        lbPolicy_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
       * @return Whether the simple field is set.
       */
      @java.lang.Override
      public boolean hasSimple() {
        return lbPolicyCase_ == 1;
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
       * @return The enum numeric value on the wire for simple.
       */
      @java.lang.Override
      public int getSimpleValue() {
        if (lbPolicyCase_ == 1) {
          return ((java.lang.Integer) lbPolicy_).intValue();
        }
        return 0;
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
       * @param value The enum numeric value on the wire for simple to set.
       * @return This builder for chaining.
       */
      public Builder setSimpleValue(int value) {
        lbPolicyCase_ = 1;
        lbPolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
       * @return The simple.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB getSimple() {
        if (lbPolicyCase_ == 1) {
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB result = istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB.forNumber(
              (java.lang.Integer) lbPolicy_);
          return result == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB.UNRECOGNIZED : result;
        }
        return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB.ROUND_ROBIN;
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
       * @param value The simple to set.
       * @return This builder for chaining.
       */
      public Builder setSimple(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.SimpleLB value) {
        if (value == null) {
          throw new NullPointerException();
        }
        lbPolicyCase_ = 1;
        lbPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB simple = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSimple() {
        if (lbPolicyCase_ == 1) {
          lbPolicyCase_ = 0;
          lbPolicy_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLBOrBuilder> consistentHashBuilder_;
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
       * @return Whether the consistentHash field is set.
       */
      @java.lang.Override
      public boolean hasConsistentHash() {
        return lbPolicyCase_ == 2;
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
       * @return The consistentHash.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB getConsistentHash() {
        if (consistentHashBuilder_ == null) {
          if (lbPolicyCase_ == 2) {
            return (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB) lbPolicy_;
          }
          return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.getDefaultInstance();
        } else {
          if (lbPolicyCase_ == 2) {
            return consistentHashBuilder_.getMessage();
          }
          return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.getDefaultInstance();
        }
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
       */
      public Builder setConsistentHash(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB value) {
        if (consistentHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lbPolicy_ = value;
          onChanged();
        } else {
          consistentHashBuilder_.setMessage(value);
        }
        lbPolicyCase_ = 2;
        return this;
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
       */
      public Builder setConsistentHash(
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.Builder builderForValue) {
        if (consistentHashBuilder_ == null) {
          lbPolicy_ = builderForValue.build();
          onChanged();
        } else {
          consistentHashBuilder_.setMessage(builderForValue.build());
        }
        lbPolicyCase_ = 2;
        return this;
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
       */
      public Builder mergeConsistentHash(istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB value) {
        if (consistentHashBuilder_ == null) {
          if (lbPolicyCase_ == 2 &&
              lbPolicy_ != istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.getDefaultInstance()) {
            lbPolicy_ = istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.newBuilder((istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB) lbPolicy_)
                .mergeFrom(value).buildPartial();
          } else {
            lbPolicy_ = value;
          }
          onChanged();
        } else {
          if (lbPolicyCase_ == 2) {
            consistentHashBuilder_.mergeFrom(value);
          } else {
            consistentHashBuilder_.setMessage(value);
          }
        }
        lbPolicyCase_ = 2;
        return this;
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
       */
      public Builder clearConsistentHash() {
        if (consistentHashBuilder_ == null) {
          if (lbPolicyCase_ == 2) {
            lbPolicyCase_ = 0;
            lbPolicy_ = null;
            onChanged();
          }
        } else {
          if (lbPolicyCase_ == 2) {
            lbPolicyCase_ = 0;
            lbPolicy_ = null;
          }
          consistentHashBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.Builder getConsistentHashBuilder() {
        return getConsistentHashFieldBuilder().getBuilder();
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLBOrBuilder getConsistentHashOrBuilder() {
        if ((lbPolicyCase_ == 2) && (consistentHashBuilder_ != null)) {
          return consistentHashBuilder_.getMessageOrBuilder();
        } else {
          if (lbPolicyCase_ == 2) {
            return (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB) lbPolicy_;
          }
          return istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.getDefaultInstance();
        }
      }
      /**
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB consistent_hash = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLBOrBuilder> 
          getConsistentHashFieldBuilder() {
        if (consistentHashBuilder_ == null) {
          if (!(lbPolicyCase_ == 2)) {
            lbPolicy_ = istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.getDefaultInstance();
          }
          consistentHashBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLBOrBuilder>(
                  (istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings.ConsistentHashLB) lbPolicy_,
                  getParentForChildren(),
                  isClean());
          lbPolicy_ = null;
        }
        lbPolicyCase_ = 2;
        onChanged();
        return consistentHashBuilder_;
      }

      private istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting localityLbSetting_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSettingOrBuilder> localityLbSettingBuilder_;
      /**
       * <pre>
       * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
       * between this object and the object one in MeshConfig
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
       * @return Whether the localityLbSetting field is set.
       */
      public boolean hasLocalityLbSetting() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
       * between this object and the object one in MeshConfig
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
       * @return The localityLbSetting.
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting getLocalityLbSetting() {
        if (localityLbSettingBuilder_ == null) {
          return localityLbSetting_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.getDefaultInstance() : localityLbSetting_;
        } else {
          return localityLbSettingBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
       * between this object and the object one in MeshConfig
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
       */
      public Builder setLocalityLbSetting(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting value) {
        if (localityLbSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          localityLbSetting_ = value;
        } else {
          localityLbSettingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
       * between this object and the object one in MeshConfig
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
       */
      public Builder setLocalityLbSetting(
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Builder builderForValue) {
        if (localityLbSettingBuilder_ == null) {
          localityLbSetting_ = builderForValue.build();
        } else {
          localityLbSettingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
       * between this object and the object one in MeshConfig
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
       */
      public Builder mergeLocalityLbSetting(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting value) {
        if (localityLbSettingBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            localityLbSetting_ != null &&
            localityLbSetting_ != istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.getDefaultInstance()) {
            getLocalityLbSettingBuilder().mergeFrom(value);
          } else {
            localityLbSetting_ = value;
          }
        } else {
          localityLbSettingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
       * between this object and the object one in MeshConfig
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
       */
      public Builder clearLocalityLbSetting() {
        bitField0_ = (bitField0_ & ~0x00000004);
        localityLbSetting_ = null;
        if (localityLbSettingBuilder_ != null) {
          localityLbSettingBuilder_.dispose();
          localityLbSettingBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
       * between this object and the object one in MeshConfig
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Builder getLocalityLbSettingBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getLocalityLbSettingFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
       * between this object and the object one in MeshConfig
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSettingOrBuilder getLocalityLbSettingOrBuilder() {
        if (localityLbSettingBuilder_ != null) {
          return localityLbSettingBuilder_.getMessageOrBuilder();
        } else {
          return localityLbSetting_ == null ?
              istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.getDefaultInstance() : localityLbSetting_;
        }
      }
      /**
       * <pre>
       * Locality load balancer settings, this will override mesh wide settings in entirety, meaning no merging would be performed
       * between this object and the object one in MeshConfig
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LocalityLoadBalancerSetting locality_lb_setting = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSettingOrBuilder> 
          getLocalityLbSettingFieldBuilder() {
        if (localityLbSettingBuilder_ == null) {
          localityLbSettingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSettingOrBuilder>(
                  getLocalityLbSetting(),
                  getParentForChildren(),
                  isClean());
          localityLbSetting_ = null;
        }
        return localityLbSettingBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.LoadBalancerSettings)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.LoadBalancerSettings)
    private static final istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings();
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LoadBalancerSettings>
        PARSER = new com.google.protobuf.AbstractParser<LoadBalancerSettings>() {
      @java.lang.Override
      public LoadBalancerSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LoadBalancerSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LoadBalancerSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LoadBalancerSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConnectionPoolSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.ConnectionPoolSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     * @return Whether the tcp field is set.
     */
    boolean hasTcp();
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     * @return The tcp.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings getTcp();
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettingsOrBuilder getTcpOrBuilder();

    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     * @return Whether the http field is set.
     */
    boolean hasHttp();
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     * @return The http.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings getHttp();
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettingsOrBuilder getHttpOrBuilder();
  }
  /**
   * <pre>
   * Connection pool settings for an upstream host. The settings apply to
   * each individual host in the upstream service.  See Envoy's [circuit
   * breaker](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/circuit_breaking)
   * for more details. Connection pool settings can be applied at the TCP
   * level as well as at HTTP level.
   * For example, the following rule sets a limit of 100 connections to redis
   * service called myredissrv with a connect timeout of 30ms
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: DestinationRule
   * metadata:
   *   name: bookinfo-redis
   * spec:
   *   host: myredissrv.prod.svc.cluster.local
   *   trafficPolicy:
   *     connectionPool:
   *       tcp:
   *         maxConnections: 100
   *         connectTimeout: 30ms
   *         tcpKeepalive:
   *           time: 7200s
   *           interval: 75s
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: DestinationRule
   * metadata:
   *   name: bookinfo-redis
   * spec:
   *   host: myredissrv.prod.svc.cluster.local
   *   trafficPolicy:
   *     connectionPool:
   *       tcp:
   *         maxConnections: 100
   *         connectTimeout: 30ms
   *         tcpKeepalive:
   *           time: 7200s
   *           interval: 75s
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings}
   */
  public static final class ConnectionPoolSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.ConnectionPoolSettings)
      ConnectionPoolSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConnectionPoolSettings.newBuilder() to construct.
    private ConnectionPoolSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConnectionPoolSettings() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConnectionPoolSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.class, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder.class);
    }

    public interface TCPSettingsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.
       * </pre>
       *
       * <code>int32 max_connections = 1;</code>
       * @return The maxConnections.
       */
      int getMaxConnections();

      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       * @return Whether the connectTimeout field is set.
       */
      boolean hasConnectTimeout();
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       * @return The connectTimeout.
       */
      com.google.protobuf.Duration getConnectTimeout();
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       */
      com.google.protobuf.DurationOrBuilder getConnectTimeoutOrBuilder();

      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       * @return Whether the tcpKeepalive field is set.
       */
      boolean hasTcpKeepalive();
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       * @return The tcpKeepalive.
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive getTcpKeepalive();
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder getTcpKeepaliveOrBuilder();
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings}
     */
    public static final class TCPSettings extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings)
        TCPSettingsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TCPSettings.newBuilder() to construct.
      private TCPSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TCPSettings() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TCPSettings();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.class, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.Builder.class);
      }

      public interface TcpKeepaliveOrBuilder extends
          // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before
         * deciding the connection is dead. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>uint32 probes = 1;</code>
         * @return The probes.
         */
        int getProbes();

        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         * @return Whether the time field is set.
         */
        boolean hasTime();
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         * @return The time.
         */
        com.google.protobuf.Duration getTime();
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         */
        com.google.protobuf.DurationOrBuilder getTimeOrBuilder();

        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         * @return Whether the interval field is set.
         */
        boolean hasInterval();
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         * @return The interval.
         */
        com.google.protobuf.Duration getInterval();
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         */
        com.google.protobuf.DurationOrBuilder getIntervalOrBuilder();
      }
      /**
       * <pre>
       * TCP keepalive.
       * </pre>
       *
       * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive}
       */
      public static final class TcpKeepalive extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive)
          TcpKeepaliveOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use TcpKeepalive.newBuilder() to construct.
        private TcpKeepalive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private TcpKeepalive() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new TcpKeepalive();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.class, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder.class);
        }

        public static final int PROBES_FIELD_NUMBER = 1;
        private int probes_ = 0;
        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before
         * deciding the connection is dead. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>uint32 probes = 1;</code>
         * @return The probes.
         */
        @java.lang.Override
        public int getProbes() {
          return probes_;
        }

        public static final int TIME_FIELD_NUMBER = 2;
        private com.google.protobuf.Duration time_;
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         * @return Whether the time field is set.
         */
        @java.lang.Override
        public boolean hasTime() {
          return time_ != null;
        }
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         * @return The time.
         */
        @java.lang.Override
        public com.google.protobuf.Duration getTime() {
          return time_ == null ? com.google.protobuf.Duration.getDefaultInstance() : time_;
        }
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         */
        @java.lang.Override
        public com.google.protobuf.DurationOrBuilder getTimeOrBuilder() {
          return time_ == null ? com.google.protobuf.Duration.getDefaultInstance() : time_;
        }

        public static final int INTERVAL_FIELD_NUMBER = 3;
        private com.google.protobuf.Duration interval_;
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         * @return Whether the interval field is set.
         */
        @java.lang.Override
        public boolean hasInterval() {
          return interval_ != null;
        }
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         * @return The interval.
         */
        @java.lang.Override
        public com.google.protobuf.Duration getInterval() {
          return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
        }
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         */
        @java.lang.Override
        public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
          return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (probes_ != 0) {
            output.writeUInt32(1, probes_);
          }
          if (time_ != null) {
            output.writeMessage(2, getTime());
          }
          if (interval_ != null) {
            output.writeMessage(3, getInterval());
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (probes_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, probes_);
          }
          if (time_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getTime());
          }
          if (interval_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getInterval());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive)) {
            return super.equals(obj);
          }
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive other = (istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive) obj;

          if (getProbes()
              != other.getProbes()) return false;
          if (hasTime() != other.hasTime()) return false;
          if (hasTime()) {
            if (!getTime()
                .equals(other.getTime())) return false;
          }
          if (hasInterval() != other.hasInterval()) return false;
          if (hasInterval()) {
            if (!getInterval()
                .equals(other.getInterval())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + PROBES_FIELD_NUMBER;
          hash = (53 * hash) + getProbes();
          if (hasTime()) {
            hash = (37 * hash) + TIME_FIELD_NUMBER;
            hash = (53 * hash) + getTime().hashCode();
          }
          if (hasInterval()) {
            hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
            hash = (53 * hash) + getInterval().hashCode();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * TCP keepalive.
         * </pre>
         *
         * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive)
            istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.class, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder.class);
          }

          // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            probes_ = 0;
            time_ = null;
            if (timeBuilder_ != null) {
              timeBuilder_.dispose();
              timeBuilder_ = null;
            }
            interval_ = null;
            if (intervalBuilder_ != null) {
              intervalBuilder_.dispose();
              intervalBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_descriptor;
          }

          @java.lang.Override
          public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive getDefaultInstanceForType() {
            return istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance();
          }

          @java.lang.Override
          public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive build() {
            istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive buildPartial() {
            istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive result = new istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive result) {
            int from_bitField0_ = bitField0_;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.probes_ = probes_;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.time_ = timeBuilder_ == null
                  ? time_
                  : timeBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.interval_ = intervalBuilder_ == null
                  ? interval_
                  : intervalBuilder_.build();
            }
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive) {
              return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive other) {
            if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance()) return this;
            if (other.getProbes() != 0) {
              setProbes(other.getProbes());
            }
            if (other.hasTime()) {
              mergeTime(other.getTime());
            }
            if (other.hasInterval()) {
              mergeInterval(other.getInterval());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    probes_ = input.readUInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 18: {
                    input.readMessage(
                        getTimeFieldBuilder().getBuilder(),
                        extensionRegistry);
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                  case 26: {
                    input.readMessage(
                        getIntervalFieldBuilder().getBuilder(),
                        extensionRegistry);
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 26
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int probes_ ;
          /**
           * <pre>
           * Maximum number of keepalive probes to send without response before
           * deciding the connection is dead. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 9.)
           * </pre>
           *
           * <code>uint32 probes = 1;</code>
           * @return The probes.
           */
          @java.lang.Override
          public int getProbes() {
            return probes_;
          }
          /**
           * <pre>
           * Maximum number of keepalive probes to send without response before
           * deciding the connection is dead. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 9.)
           * </pre>
           *
           * <code>uint32 probes = 1;</code>
           * @param value The probes to set.
           * @return This builder for chaining.
           */
          public Builder setProbes(int value) {
            
            probes_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Maximum number of keepalive probes to send without response before
           * deciding the connection is dead. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 9.)
           * </pre>
           *
           * <code>uint32 probes = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearProbes() {
            bitField0_ = (bitField0_ & ~0x00000001);
            probes_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.Duration time_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> timeBuilder_;
          /**
           * <pre>
           * The time duration a connection needs to be idle before keep-alive
           * probes start being sent. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
           * </pre>
           *
           * <code>.google.protobuf.Duration time = 2;</code>
           * @return Whether the time field is set.
           */
          public boolean hasTime() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * The time duration a connection needs to be idle before keep-alive
           * probes start being sent. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
           * </pre>
           *
           * <code>.google.protobuf.Duration time = 2;</code>
           * @return The time.
           */
          public com.google.protobuf.Duration getTime() {
            if (timeBuilder_ == null) {
              return time_ == null ? com.google.protobuf.Duration.getDefaultInstance() : time_;
            } else {
              return timeBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * The time duration a connection needs to be idle before keep-alive
           * probes start being sent. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
           * </pre>
           *
           * <code>.google.protobuf.Duration time = 2;</code>
           */
          public Builder setTime(com.google.protobuf.Duration value) {
            if (timeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              time_ = value;
            } else {
              timeBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The time duration a connection needs to be idle before keep-alive
           * probes start being sent. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
           * </pre>
           *
           * <code>.google.protobuf.Duration time = 2;</code>
           */
          public Builder setTime(
              com.google.protobuf.Duration.Builder builderForValue) {
            if (timeBuilder_ == null) {
              time_ = builderForValue.build();
            } else {
              timeBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The time duration a connection needs to be idle before keep-alive
           * probes start being sent. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
           * </pre>
           *
           * <code>.google.protobuf.Duration time = 2;</code>
           */
          public Builder mergeTime(com.google.protobuf.Duration value) {
            if (timeBuilder_ == null) {
              if (((bitField0_ & 0x00000002) != 0) &&
                time_ != null &&
                time_ != com.google.protobuf.Duration.getDefaultInstance()) {
                getTimeBuilder().mergeFrom(value);
              } else {
                time_ = value;
              }
            } else {
              timeBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The time duration a connection needs to be idle before keep-alive
           * probes start being sent. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
           * </pre>
           *
           * <code>.google.protobuf.Duration time = 2;</code>
           */
          public Builder clearTime() {
            bitField0_ = (bitField0_ & ~0x00000002);
            time_ = null;
            if (timeBuilder_ != null) {
              timeBuilder_.dispose();
              timeBuilder_ = null;
            }
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The time duration a connection needs to be idle before keep-alive
           * probes start being sent. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
           * </pre>
           *
           * <code>.google.protobuf.Duration time = 2;</code>
           */
          public com.google.protobuf.Duration.Builder getTimeBuilder() {
            bitField0_ |= 0x00000002;
            onChanged();
            return getTimeFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * The time duration a connection needs to be idle before keep-alive
           * probes start being sent. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
           * </pre>
           *
           * <code>.google.protobuf.Duration time = 2;</code>
           */
          public com.google.protobuf.DurationOrBuilder getTimeOrBuilder() {
            if (timeBuilder_ != null) {
              return timeBuilder_.getMessageOrBuilder();
            } else {
              return time_ == null ?
                  com.google.protobuf.Duration.getDefaultInstance() : time_;
            }
          }
          /**
           * <pre>
           * The time duration a connection needs to be idle before keep-alive
           * probes start being sent. Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
           * </pre>
           *
           * <code>.google.protobuf.Duration time = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
              getTimeFieldBuilder() {
            if (timeBuilder_ == null) {
              timeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                      getTime(),
                      getParentForChildren(),
                      isClean());
              time_ = null;
            }
            return timeBuilder_;
          }

          private com.google.protobuf.Duration interval_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> intervalBuilder_;
          /**
           * <pre>
           * The time duration between keep-alive probes.
           * Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 75s.)
           * </pre>
           *
           * <code>.google.protobuf.Duration interval = 3;</code>
           * @return Whether the interval field is set.
           */
          public boolean hasInterval() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * The time duration between keep-alive probes.
           * Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 75s.)
           * </pre>
           *
           * <code>.google.protobuf.Duration interval = 3;</code>
           * @return The interval.
           */
          public com.google.protobuf.Duration getInterval() {
            if (intervalBuilder_ == null) {
              return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
            } else {
              return intervalBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * The time duration between keep-alive probes.
           * Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 75s.)
           * </pre>
           *
           * <code>.google.protobuf.Duration interval = 3;</code>
           */
          public Builder setInterval(com.google.protobuf.Duration value) {
            if (intervalBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              interval_ = value;
            } else {
              intervalBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The time duration between keep-alive probes.
           * Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 75s.)
           * </pre>
           *
           * <code>.google.protobuf.Duration interval = 3;</code>
           */
          public Builder setInterval(
              com.google.protobuf.Duration.Builder builderForValue) {
            if (intervalBuilder_ == null) {
              interval_ = builderForValue.build();
            } else {
              intervalBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The time duration between keep-alive probes.
           * Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 75s.)
           * </pre>
           *
           * <code>.google.protobuf.Duration interval = 3;</code>
           */
          public Builder mergeInterval(com.google.protobuf.Duration value) {
            if (intervalBuilder_ == null) {
              if (((bitField0_ & 0x00000004) != 0) &&
                interval_ != null &&
                interval_ != com.google.protobuf.Duration.getDefaultInstance()) {
                getIntervalBuilder().mergeFrom(value);
              } else {
                interval_ = value;
              }
            } else {
              intervalBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The time duration between keep-alive probes.
           * Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 75s.)
           * </pre>
           *
           * <code>.google.protobuf.Duration interval = 3;</code>
           */
          public Builder clearInterval() {
            bitField0_ = (bitField0_ & ~0x00000004);
            interval_ = null;
            if (intervalBuilder_ != null) {
              intervalBuilder_.dispose();
              intervalBuilder_ = null;
            }
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The time duration between keep-alive probes.
           * Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 75s.)
           * </pre>
           *
           * <code>.google.protobuf.Duration interval = 3;</code>
           */
          public com.google.protobuf.Duration.Builder getIntervalBuilder() {
            bitField0_ |= 0x00000004;
            onChanged();
            return getIntervalFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * The time duration between keep-alive probes.
           * Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 75s.)
           * </pre>
           *
           * <code>.google.protobuf.Duration interval = 3;</code>
           */
          public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
            if (intervalBuilder_ != null) {
              return intervalBuilder_.getMessageOrBuilder();
            } else {
              return interval_ == null ?
                  com.google.protobuf.Duration.getDefaultInstance() : interval_;
            }
          }
          /**
           * <pre>
           * The time duration between keep-alive probes.
           * Default is to use the OS level configuration
           * (unless overridden, Linux defaults to 75s.)
           * </pre>
           *
           * <code>.google.protobuf.Duration interval = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
              getIntervalFieldBuilder() {
            if (intervalBuilder_ == null) {
              intervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                      getInterval(),
                      getParentForChildren(),
                      isClean());
              interval_ = null;
            }
            return intervalBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive)
        }

        // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive)
        private static final istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive();
        }

        public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<TcpKeepalive>
            PARSER = new com.google.protobuf.AbstractParser<TcpKeepalive>() {
          @java.lang.Override
          public TcpKeepalive parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<TcpKeepalive> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TcpKeepalive> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int MAX_CONNECTIONS_FIELD_NUMBER = 1;
      private int maxConnections_ = 0;
      /**
       * <pre>
       * Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.
       * </pre>
       *
       * <code>int32 max_connections = 1;</code>
       * @return The maxConnections.
       */
      @java.lang.Override
      public int getMaxConnections() {
        return maxConnections_;
      }

      public static final int CONNECT_TIMEOUT_FIELD_NUMBER = 2;
      private com.google.protobuf.Duration connectTimeout_;
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       * @return Whether the connectTimeout field is set.
       */
      @java.lang.Override
      public boolean hasConnectTimeout() {
        return connectTimeout_ != null;
      }
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       * @return The connectTimeout.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getConnectTimeout() {
        return connectTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : connectTimeout_;
      }
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getConnectTimeoutOrBuilder() {
        return connectTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : connectTimeout_;
      }

      public static final int TCP_KEEPALIVE_FIELD_NUMBER = 3;
      private istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcpKeepalive_;
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       * @return Whether the tcpKeepalive field is set.
       */
      @java.lang.Override
      public boolean hasTcpKeepalive() {
        return tcpKeepalive_ != null;
      }
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       * @return The tcpKeepalive.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive getTcpKeepalive() {
        return tcpKeepalive_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance() : tcpKeepalive_;
      }
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder getTcpKeepaliveOrBuilder() {
        return tcpKeepalive_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance() : tcpKeepalive_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (maxConnections_ != 0) {
          output.writeInt32(1, maxConnections_);
        }
        if (connectTimeout_ != null) {
          output.writeMessage(2, getConnectTimeout());
        }
        if (tcpKeepalive_ != null) {
          output.writeMessage(3, getTcpKeepalive());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (maxConnections_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, maxConnections_);
        }
        if (connectTimeout_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getConnectTimeout());
        }
        if (tcpKeepalive_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getTcpKeepalive());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings)) {
          return super.equals(obj);
        }
        istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings other = (istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings) obj;

        if (getMaxConnections()
            != other.getMaxConnections()) return false;
        if (hasConnectTimeout() != other.hasConnectTimeout()) return false;
        if (hasConnectTimeout()) {
          if (!getConnectTimeout()
              .equals(other.getConnectTimeout())) return false;
        }
        if (hasTcpKeepalive() != other.hasTcpKeepalive()) return false;
        if (hasTcpKeepalive()) {
          if (!getTcpKeepalive()
              .equals(other.getTcpKeepalive())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + MAX_CONNECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxConnections();
        if (hasConnectTimeout()) {
          hash = (37 * hash) + CONNECT_TIMEOUT_FIELD_NUMBER;
          hash = (53 * hash) + getConnectTimeout().hashCode();
        }
        if (hasTcpKeepalive()) {
          hash = (37 * hash) + TCP_KEEPALIVE_FIELD_NUMBER;
          hash = (53 * hash) + getTcpKeepalive().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Settings common to both HTTP and TCP upstream connections.
       * </pre>
       *
       * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings)
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettingsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.class, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.Builder.class);
        }

        // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          maxConnections_ = 0;
          connectTimeout_ = null;
          if (connectTimeoutBuilder_ != null) {
            connectTimeoutBuilder_.dispose();
            connectTimeoutBuilder_ = null;
          }
          tcpKeepalive_ = null;
          if (tcpKeepaliveBuilder_ != null) {
            tcpKeepaliveBuilder_.dispose();
            tcpKeepaliveBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_descriptor;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings getDefaultInstanceForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.getDefaultInstance();
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings build() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings buildPartial() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings result = new istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.maxConnections_ = maxConnections_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.connectTimeout_ = connectTimeoutBuilder_ == null
                ? connectTimeout_
                : connectTimeoutBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.tcpKeepalive_ = tcpKeepaliveBuilder_ == null
                ? tcpKeepalive_
                : tcpKeepaliveBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings) {
            return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings other) {
          if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.getDefaultInstance()) return this;
          if (other.getMaxConnections() != 0) {
            setMaxConnections(other.getMaxConnections());
          }
          if (other.hasConnectTimeout()) {
            mergeConnectTimeout(other.getConnectTimeout());
          }
          if (other.hasTcpKeepalive()) {
            mergeTcpKeepalive(other.getTcpKeepalive());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  maxConnections_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  input.readMessage(
                      getConnectTimeoutFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  input.readMessage(
                      getTcpKeepaliveFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int maxConnections_ ;
        /**
         * <pre>
         * Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.
         * </pre>
         *
         * <code>int32 max_connections = 1;</code>
         * @return The maxConnections.
         */
        @java.lang.Override
        public int getMaxConnections() {
          return maxConnections_;
        }
        /**
         * <pre>
         * Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.
         * </pre>
         *
         * <code>int32 max_connections = 1;</code>
         * @param value The maxConnections to set.
         * @return This builder for chaining.
         */
        public Builder setMaxConnections(int value) {
          
          maxConnections_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.
         * </pre>
         *
         * <code>int32 max_connections = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxConnections() {
          bitField0_ = (bitField0_ & ~0x00000001);
          maxConnections_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Duration connectTimeout_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> connectTimeoutBuilder_;
        /**
         * <pre>
         * TCP connection timeout. format:
         * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
         * </pre>
         *
         * <code>.google.protobuf.Duration connect_timeout = 2;</code>
         * @return Whether the connectTimeout field is set.
         */
        public boolean hasConnectTimeout() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * TCP connection timeout. format:
         * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
         * </pre>
         *
         * <code>.google.protobuf.Duration connect_timeout = 2;</code>
         * @return The connectTimeout.
         */
        public com.google.protobuf.Duration getConnectTimeout() {
          if (connectTimeoutBuilder_ == null) {
            return connectTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : connectTimeout_;
          } else {
            return connectTimeoutBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * TCP connection timeout. format:
         * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
         * </pre>
         *
         * <code>.google.protobuf.Duration connect_timeout = 2;</code>
         */
        public Builder setConnectTimeout(com.google.protobuf.Duration value) {
          if (connectTimeoutBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            connectTimeout_ = value;
          } else {
            connectTimeoutBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TCP connection timeout. format:
         * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
         * </pre>
         *
         * <code>.google.protobuf.Duration connect_timeout = 2;</code>
         */
        public Builder setConnectTimeout(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (connectTimeoutBuilder_ == null) {
            connectTimeout_ = builderForValue.build();
          } else {
            connectTimeoutBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TCP connection timeout. format:
         * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
         * </pre>
         *
         * <code>.google.protobuf.Duration connect_timeout = 2;</code>
         */
        public Builder mergeConnectTimeout(com.google.protobuf.Duration value) {
          if (connectTimeoutBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              connectTimeout_ != null &&
              connectTimeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
              getConnectTimeoutBuilder().mergeFrom(value);
            } else {
              connectTimeout_ = value;
            }
          } else {
            connectTimeoutBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TCP connection timeout. format:
         * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
         * </pre>
         *
         * <code>.google.protobuf.Duration connect_timeout = 2;</code>
         */
        public Builder clearConnectTimeout() {
          bitField0_ = (bitField0_ & ~0x00000002);
          connectTimeout_ = null;
          if (connectTimeoutBuilder_ != null) {
            connectTimeoutBuilder_.dispose();
            connectTimeoutBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TCP connection timeout. format:
         * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
         * </pre>
         *
         * <code>.google.protobuf.Duration connect_timeout = 2;</code>
         */
        public com.google.protobuf.Duration.Builder getConnectTimeoutBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getConnectTimeoutFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * TCP connection timeout. format:
         * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
         * </pre>
         *
         * <code>.google.protobuf.Duration connect_timeout = 2;</code>
         */
        public com.google.protobuf.DurationOrBuilder getConnectTimeoutOrBuilder() {
          if (connectTimeoutBuilder_ != null) {
            return connectTimeoutBuilder_.getMessageOrBuilder();
          } else {
            return connectTimeout_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : connectTimeout_;
          }
        }
        /**
         * <pre>
         * TCP connection timeout. format:
         * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
         * </pre>
         *
         * <code>.google.protobuf.Duration connect_timeout = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getConnectTimeoutFieldBuilder() {
          if (connectTimeoutBuilder_ == null) {
            connectTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getConnectTimeout(),
                    getParentForChildren(),
                    isClean());
            connectTimeout_ = null;
          }
          return connectTimeoutBuilder_;
        }

        private istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcpKeepalive_;
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder> tcpKeepaliveBuilder_;
        /**
         * <pre>
         * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
         * @return Whether the tcpKeepalive field is set.
         */
        public boolean hasTcpKeepalive() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
         * @return The tcpKeepalive.
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive getTcpKeepalive() {
          if (tcpKeepaliveBuilder_ == null) {
            return tcpKeepalive_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance() : tcpKeepalive_;
          } else {
            return tcpKeepaliveBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
         */
        public Builder setTcpKeepalive(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive value) {
          if (tcpKeepaliveBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            tcpKeepalive_ = value;
          } else {
            tcpKeepaliveBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
         */
        public Builder setTcpKeepalive(
            istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder builderForValue) {
          if (tcpKeepaliveBuilder_ == null) {
            tcpKeepalive_ = builderForValue.build();
          } else {
            tcpKeepaliveBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
         */
        public Builder mergeTcpKeepalive(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive value) {
          if (tcpKeepaliveBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
              tcpKeepalive_ != null &&
              tcpKeepalive_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance()) {
              getTcpKeepaliveBuilder().mergeFrom(value);
            } else {
              tcpKeepalive_ = value;
            }
          } else {
            tcpKeepaliveBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
         */
        public Builder clearTcpKeepalive() {
          bitField0_ = (bitField0_ & ~0x00000004);
          tcpKeepalive_ = null;
          if (tcpKeepaliveBuilder_ != null) {
            tcpKeepaliveBuilder_.dispose();
            tcpKeepaliveBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder getTcpKeepaliveBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getTcpKeepaliveFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
         */
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder getTcpKeepaliveOrBuilder() {
          if (tcpKeepaliveBuilder_ != null) {
            return tcpKeepaliveBuilder_.getMessageOrBuilder();
          } else {
            return tcpKeepalive_ == null ?
                istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance() : tcpKeepalive_;
          }
        }
        /**
         * <pre>
         * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder> 
            getTcpKeepaliveFieldBuilder() {
          if (tcpKeepaliveBuilder_ == null) {
            tcpKeepaliveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder>(
                    getTcpKeepalive(),
                    getParentForChildren(),
                    isClean());
            tcpKeepalive_ = null;
          }
          return tcpKeepaliveBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings)
      }

      // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings)
      private static final istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings();
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TCPSettings>
          PARSER = new com.google.protobuf.AbstractParser<TCPSettings>() {
        @java.lang.Override
        public TCPSettings parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<TCPSettings> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TCPSettings> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface HTTPSettingsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Maximum number of pending HTTP requests to a destination. Default 2^32-1.
       * </pre>
       *
       * <code>int32 http1_max_pending_requests = 1;</code>
       * @return The http1MaxPendingRequests.
       */
      int getHttp1MaxPendingRequests();

      /**
       * <pre>
       * Maximum number of requests to a backend. Default 2^32-1.
       * </pre>
       *
       * <code>int32 http2_max_requests = 2;</code>
       * @return The http2MaxRequests.
       */
      int getHttp2MaxRequests();

      /**
       * <pre>
       * Maximum number of requests per connection to a backend. Setting this
       * parameter to 1 disables keep alive. Default 0, meaning "unlimited",
       * up to 2^29.
       * </pre>
       *
       * <code>int32 max_requests_per_connection = 3;</code>
       * @return The maxRequestsPerConnection.
       */
      int getMaxRequestsPerConnection();

      /**
       * <pre>
       * Maximum number of retries that can be outstanding to all hosts in a
       * cluster at a given time. Defaults to 2^32-1.
       * </pre>
       *
       * <code>int32 max_retries = 4;</code>
       * @return The maxRetries.
       */
      int getMaxRetries();

      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout 
       * is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached, 
       * the connection will be closed. If the connection is an HTTP/2 
       * connection a drain sequence will occur prior to closing the connection. 
       * Note that request based timeouts mean that HTTP/2 PINGs will not 
       * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       * @return Whether the idleTimeout field is set.
       */
      boolean hasIdleTimeout();
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout 
       * is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached, 
       * the connection will be closed. If the connection is an HTTP/2 
       * connection a drain sequence will occur prior to closing the connection. 
       * Note that request based timeouts mean that HTTP/2 PINGs will not 
       * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       * @return The idleTimeout.
       */
      com.google.protobuf.Duration getIdleTimeout();
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout 
       * is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached, 
       * the connection will be closed. If the connection is an HTTP/2 
       * connection a drain sequence will occur prior to closing the connection. 
       * Note that request based timeouts mean that HTTP/2 PINGs will not 
       * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       */
      com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder();

      /**
       * <pre>
       * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
       * @return The enum numeric value on the wire for h2UpgradePolicy.
       */
      int getH2UpgradePolicyValue();
      /**
       * <pre>
       * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
       * @return The h2UpgradePolicy.
       */
      istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy getH2UpgradePolicy();

      /**
       * <pre>
       * If set to true, client protocol will be preserved while initiating connection to backend.
       * Note that when this is set to true, h2_upgrade_policy will be ineffective i.e. the client
       * connections will not be upgraded to http2.
       * </pre>
       *
       * <code>bool use_client_protocol = 7;</code>
       * @return The useClientProtocol.
       */
      boolean getUseClientProtocol();
    }
    /**
     * <pre>
     * Settings applicable to HTTP1.1/HTTP2/GRPC connections.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings}
     */
    public static final class HTTPSettings extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings)
        HTTPSettingsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HTTPSettings.newBuilder() to construct.
      private HTTPSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HTTPSettings() {
        h2UpgradePolicy_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HTTPSettings();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.class, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.Builder.class);
      }

      /**
       * <pre>
       * Policy for upgrading http1.1 connections to http2.
       * </pre>
       *
       * Protobuf enum {@code istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy}
       */
      public enum H2UpgradePolicy
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Use the global default.
         * </pre>
         *
         * <code>DEFAULT = 0;</code>
         */
        DEFAULT(0),
        /**
         * <pre>
         * Do not upgrade the connection to http2.
         * This opt-out option overrides the default.
         * </pre>
         *
         * <code>DO_NOT_UPGRADE = 1;</code>
         */
        DO_NOT_UPGRADE(1),
        /**
         * <pre>
         * Upgrade the connection to http2.
         * This opt-in option overrides the default.
         * </pre>
         *
         * <code>UPGRADE = 2;</code>
         */
        UPGRADE(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Use the global default.
         * </pre>
         *
         * <code>DEFAULT = 0;</code>
         */
        public static final int DEFAULT_VALUE = 0;
        /**
         * <pre>
         * Do not upgrade the connection to http2.
         * This opt-out option overrides the default.
         * </pre>
         *
         * <code>DO_NOT_UPGRADE = 1;</code>
         */
        public static final int DO_NOT_UPGRADE_VALUE = 1;
        /**
         * <pre>
         * Upgrade the connection to http2.
         * This opt-in option overrides the default.
         * </pre>
         *
         * <code>UPGRADE = 2;</code>
         */
        public static final int UPGRADE_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static H2UpgradePolicy valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static H2UpgradePolicy forNumber(int value) {
          switch (value) {
            case 0: return DEFAULT;
            case 1: return DO_NOT_UPGRADE;
            case 2: return UPGRADE;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<H2UpgradePolicy>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            H2UpgradePolicy> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<H2UpgradePolicy>() {
                public H2UpgradePolicy findValueByNumber(int number) {
                  return H2UpgradePolicy.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.getDescriptor().getEnumTypes().get(0);
        }

        private static final H2UpgradePolicy[] VALUES = values();

        public static H2UpgradePolicy valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private H2UpgradePolicy(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy)
      }

      public static final int HTTP1_MAX_PENDING_REQUESTS_FIELD_NUMBER = 1;
      private int http1MaxPendingRequests_ = 0;
      /**
       * <pre>
       * Maximum number of pending HTTP requests to a destination. Default 2^32-1.
       * </pre>
       *
       * <code>int32 http1_max_pending_requests = 1;</code>
       * @return The http1MaxPendingRequests.
       */
      @java.lang.Override
      public int getHttp1MaxPendingRequests() {
        return http1MaxPendingRequests_;
      }

      public static final int HTTP2_MAX_REQUESTS_FIELD_NUMBER = 2;
      private int http2MaxRequests_ = 0;
      /**
       * <pre>
       * Maximum number of requests to a backend. Default 2^32-1.
       * </pre>
       *
       * <code>int32 http2_max_requests = 2;</code>
       * @return The http2MaxRequests.
       */
      @java.lang.Override
      public int getHttp2MaxRequests() {
        return http2MaxRequests_;
      }

      public static final int MAX_REQUESTS_PER_CONNECTION_FIELD_NUMBER = 3;
      private int maxRequestsPerConnection_ = 0;
      /**
       * <pre>
       * Maximum number of requests per connection to a backend. Setting this
       * parameter to 1 disables keep alive. Default 0, meaning "unlimited",
       * up to 2^29.
       * </pre>
       *
       * <code>int32 max_requests_per_connection = 3;</code>
       * @return The maxRequestsPerConnection.
       */
      @java.lang.Override
      public int getMaxRequestsPerConnection() {
        return maxRequestsPerConnection_;
      }

      public static final int MAX_RETRIES_FIELD_NUMBER = 4;
      private int maxRetries_ = 0;
      /**
       * <pre>
       * Maximum number of retries that can be outstanding to all hosts in a
       * cluster at a given time. Defaults to 2^32-1.
       * </pre>
       *
       * <code>int32 max_retries = 4;</code>
       * @return The maxRetries.
       */
      @java.lang.Override
      public int getMaxRetries() {
        return maxRetries_;
      }

      public static final int IDLE_TIMEOUT_FIELD_NUMBER = 5;
      private com.google.protobuf.Duration idleTimeout_;
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout 
       * is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached, 
       * the connection will be closed. If the connection is an HTTP/2 
       * connection a drain sequence will occur prior to closing the connection. 
       * Note that request based timeouts mean that HTTP/2 PINGs will not 
       * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       * @return Whether the idleTimeout field is set.
       */
      @java.lang.Override
      public boolean hasIdleTimeout() {
        return idleTimeout_ != null;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout 
       * is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached, 
       * the connection will be closed. If the connection is an HTTP/2 
       * connection a drain sequence will occur prior to closing the connection. 
       * Note that request based timeouts mean that HTTP/2 PINGs will not 
       * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       * @return The idleTimeout.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getIdleTimeout() {
        return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout 
       * is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached, 
       * the connection will be closed. If the connection is an HTTP/2 
       * connection a drain sequence will occur prior to closing the connection. 
       * Note that request based timeouts mean that HTTP/2 PINGs will not 
       * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder() {
        return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
      }

      public static final int H2_UPGRADE_POLICY_FIELD_NUMBER = 6;
      private int h2UpgradePolicy_ = 0;
      /**
       * <pre>
       * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
       * @return The enum numeric value on the wire for h2UpgradePolicy.
       */
      @java.lang.Override public int getH2UpgradePolicyValue() {
        return h2UpgradePolicy_;
      }
      /**
       * <pre>
       * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
       * @return The h2UpgradePolicy.
       */
      @java.lang.Override public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy getH2UpgradePolicy() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy result = istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.forNumber(h2UpgradePolicy_);
        return result == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.UNRECOGNIZED : result;
      }

      public static final int USE_CLIENT_PROTOCOL_FIELD_NUMBER = 7;
      private boolean useClientProtocol_ = false;
      /**
       * <pre>
       * If set to true, client protocol will be preserved while initiating connection to backend.
       * Note that when this is set to true, h2_upgrade_policy will be ineffective i.e. the client
       * connections will not be upgraded to http2.
       * </pre>
       *
       * <code>bool use_client_protocol = 7;</code>
       * @return The useClientProtocol.
       */
      @java.lang.Override
      public boolean getUseClientProtocol() {
        return useClientProtocol_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (http1MaxPendingRequests_ != 0) {
          output.writeInt32(1, http1MaxPendingRequests_);
        }
        if (http2MaxRequests_ != 0) {
          output.writeInt32(2, http2MaxRequests_);
        }
        if (maxRequestsPerConnection_ != 0) {
          output.writeInt32(3, maxRequestsPerConnection_);
        }
        if (maxRetries_ != 0) {
          output.writeInt32(4, maxRetries_);
        }
        if (idleTimeout_ != null) {
          output.writeMessage(5, getIdleTimeout());
        }
        if (h2UpgradePolicy_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.DEFAULT.getNumber()) {
          output.writeEnum(6, h2UpgradePolicy_);
        }
        if (useClientProtocol_ != false) {
          output.writeBool(7, useClientProtocol_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (http1MaxPendingRequests_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, http1MaxPendingRequests_);
        }
        if (http2MaxRequests_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, http2MaxRequests_);
        }
        if (maxRequestsPerConnection_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, maxRequestsPerConnection_);
        }
        if (maxRetries_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, maxRetries_);
        }
        if (idleTimeout_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getIdleTimeout());
        }
        if (h2UpgradePolicy_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.DEFAULT.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, h2UpgradePolicy_);
        }
        if (useClientProtocol_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, useClientProtocol_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings)) {
          return super.equals(obj);
        }
        istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings other = (istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings) obj;

        if (getHttp1MaxPendingRequests()
            != other.getHttp1MaxPendingRequests()) return false;
        if (getHttp2MaxRequests()
            != other.getHttp2MaxRequests()) return false;
        if (getMaxRequestsPerConnection()
            != other.getMaxRequestsPerConnection()) return false;
        if (getMaxRetries()
            != other.getMaxRetries()) return false;
        if (hasIdleTimeout() != other.hasIdleTimeout()) return false;
        if (hasIdleTimeout()) {
          if (!getIdleTimeout()
              .equals(other.getIdleTimeout())) return false;
        }
        if (h2UpgradePolicy_ != other.h2UpgradePolicy_) return false;
        if (getUseClientProtocol()
            != other.getUseClientProtocol()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + HTTP1_MAX_PENDING_REQUESTS_FIELD_NUMBER;
        hash = (53 * hash) + getHttp1MaxPendingRequests();
        hash = (37 * hash) + HTTP2_MAX_REQUESTS_FIELD_NUMBER;
        hash = (53 * hash) + getHttp2MaxRequests();
        hash = (37 * hash) + MAX_REQUESTS_PER_CONNECTION_FIELD_NUMBER;
        hash = (53 * hash) + getMaxRequestsPerConnection();
        hash = (37 * hash) + MAX_RETRIES_FIELD_NUMBER;
        hash = (53 * hash) + getMaxRetries();
        if (hasIdleTimeout()) {
          hash = (37 * hash) + IDLE_TIMEOUT_FIELD_NUMBER;
          hash = (53 * hash) + getIdleTimeout().hashCode();
        }
        hash = (37 * hash) + H2_UPGRADE_POLICY_FIELD_NUMBER;
        hash = (53 * hash) + h2UpgradePolicy_;
        hash = (37 * hash) + USE_CLIENT_PROTOCOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUseClientProtocol());
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Settings applicable to HTTP1.1/HTTP2/GRPC connections.
       * </pre>
       *
       * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings)
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettingsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.class, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.Builder.class);
        }

        // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          http1MaxPendingRequests_ = 0;
          http2MaxRequests_ = 0;
          maxRequestsPerConnection_ = 0;
          maxRetries_ = 0;
          idleTimeout_ = null;
          if (idleTimeoutBuilder_ != null) {
            idleTimeoutBuilder_.dispose();
            idleTimeoutBuilder_ = null;
          }
          h2UpgradePolicy_ = 0;
          useClientProtocol_ = false;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_descriptor;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings getDefaultInstanceForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.getDefaultInstance();
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings build() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings buildPartial() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings result = new istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.http1MaxPendingRequests_ = http1MaxPendingRequests_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.http2MaxRequests_ = http2MaxRequests_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.maxRequestsPerConnection_ = maxRequestsPerConnection_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.maxRetries_ = maxRetries_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.idleTimeout_ = idleTimeoutBuilder_ == null
                ? idleTimeout_
                : idleTimeoutBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.h2UpgradePolicy_ = h2UpgradePolicy_;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.useClientProtocol_ = useClientProtocol_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings) {
            return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings other) {
          if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.getDefaultInstance()) return this;
          if (other.getHttp1MaxPendingRequests() != 0) {
            setHttp1MaxPendingRequests(other.getHttp1MaxPendingRequests());
          }
          if (other.getHttp2MaxRequests() != 0) {
            setHttp2MaxRequests(other.getHttp2MaxRequests());
          }
          if (other.getMaxRequestsPerConnection() != 0) {
            setMaxRequestsPerConnection(other.getMaxRequestsPerConnection());
          }
          if (other.getMaxRetries() != 0) {
            setMaxRetries(other.getMaxRetries());
          }
          if (other.hasIdleTimeout()) {
            mergeIdleTimeout(other.getIdleTimeout());
          }
          if (other.h2UpgradePolicy_ != 0) {
            setH2UpgradePolicyValue(other.getH2UpgradePolicyValue());
          }
          if (other.getUseClientProtocol() != false) {
            setUseClientProtocol(other.getUseClientProtocol());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  http1MaxPendingRequests_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  http2MaxRequests_ = input.readInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  maxRequestsPerConnection_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  maxRetries_ = input.readInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 42: {
                  input.readMessage(
                      getIdleTimeoutFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
                case 48: {
                  h2UpgradePolicy_ = input.readEnum();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 56: {
                  useClientProtocol_ = input.readBool();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int http1MaxPendingRequests_ ;
        /**
         * <pre>
         * Maximum number of pending HTTP requests to a destination. Default 2^32-1.
         * </pre>
         *
         * <code>int32 http1_max_pending_requests = 1;</code>
         * @return The http1MaxPendingRequests.
         */
        @java.lang.Override
        public int getHttp1MaxPendingRequests() {
          return http1MaxPendingRequests_;
        }
        /**
         * <pre>
         * Maximum number of pending HTTP requests to a destination. Default 2^32-1.
         * </pre>
         *
         * <code>int32 http1_max_pending_requests = 1;</code>
         * @param value The http1MaxPendingRequests to set.
         * @return This builder for chaining.
         */
        public Builder setHttp1MaxPendingRequests(int value) {
          
          http1MaxPendingRequests_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Maximum number of pending HTTP requests to a destination. Default 2^32-1.
         * </pre>
         *
         * <code>int32 http1_max_pending_requests = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearHttp1MaxPendingRequests() {
          bitField0_ = (bitField0_ & ~0x00000001);
          http1MaxPendingRequests_ = 0;
          onChanged();
          return this;
        }

        private int http2MaxRequests_ ;
        /**
         * <pre>
         * Maximum number of requests to a backend. Default 2^32-1.
         * </pre>
         *
         * <code>int32 http2_max_requests = 2;</code>
         * @return The http2MaxRequests.
         */
        @java.lang.Override
        public int getHttp2MaxRequests() {
          return http2MaxRequests_;
        }
        /**
         * <pre>
         * Maximum number of requests to a backend. Default 2^32-1.
         * </pre>
         *
         * <code>int32 http2_max_requests = 2;</code>
         * @param value The http2MaxRequests to set.
         * @return This builder for chaining.
         */
        public Builder setHttp2MaxRequests(int value) {
          
          http2MaxRequests_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Maximum number of requests to a backend. Default 2^32-1.
         * </pre>
         *
         * <code>int32 http2_max_requests = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearHttp2MaxRequests() {
          bitField0_ = (bitField0_ & ~0x00000002);
          http2MaxRequests_ = 0;
          onChanged();
          return this;
        }

        private int maxRequestsPerConnection_ ;
        /**
         * <pre>
         * Maximum number of requests per connection to a backend. Setting this
         * parameter to 1 disables keep alive. Default 0, meaning "unlimited",
         * up to 2^29.
         * </pre>
         *
         * <code>int32 max_requests_per_connection = 3;</code>
         * @return The maxRequestsPerConnection.
         */
        @java.lang.Override
        public int getMaxRequestsPerConnection() {
          return maxRequestsPerConnection_;
        }
        /**
         * <pre>
         * Maximum number of requests per connection to a backend. Setting this
         * parameter to 1 disables keep alive. Default 0, meaning "unlimited",
         * up to 2^29.
         * </pre>
         *
         * <code>int32 max_requests_per_connection = 3;</code>
         * @param value The maxRequestsPerConnection to set.
         * @return This builder for chaining.
         */
        public Builder setMaxRequestsPerConnection(int value) {
          
          maxRequestsPerConnection_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Maximum number of requests per connection to a backend. Setting this
         * parameter to 1 disables keep alive. Default 0, meaning "unlimited",
         * up to 2^29.
         * </pre>
         *
         * <code>int32 max_requests_per_connection = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxRequestsPerConnection() {
          bitField0_ = (bitField0_ & ~0x00000004);
          maxRequestsPerConnection_ = 0;
          onChanged();
          return this;
        }

        private int maxRetries_ ;
        /**
         * <pre>
         * Maximum number of retries that can be outstanding to all hosts in a
         * cluster at a given time. Defaults to 2^32-1.
         * </pre>
         *
         * <code>int32 max_retries = 4;</code>
         * @return The maxRetries.
         */
        @java.lang.Override
        public int getMaxRetries() {
          return maxRetries_;
        }
        /**
         * <pre>
         * Maximum number of retries that can be outstanding to all hosts in a
         * cluster at a given time. Defaults to 2^32-1.
         * </pre>
         *
         * <code>int32 max_retries = 4;</code>
         * @param value The maxRetries to set.
         * @return This builder for chaining.
         */
        public Builder setMaxRetries(int value) {
          
          maxRetries_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Maximum number of retries that can be outstanding to all hosts in a
         * cluster at a given time. Defaults to 2^32-1.
         * </pre>
         *
         * <code>int32 max_retries = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxRetries() {
          bitField0_ = (bitField0_ & ~0x00000008);
          maxRetries_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Duration idleTimeout_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> idleTimeoutBuilder_;
        /**
         * <pre>
         * The idle timeout for upstream connection pool connections. The idle timeout 
         * is defined as the period in which there are no active requests.
         * If not set, the default is 1 hour. When the idle timeout is reached, 
         * the connection will be closed. If the connection is an HTTP/2 
         * connection a drain sequence will occur prior to closing the connection. 
         * Note that request based timeouts mean that HTTP/2 PINGs will not 
         * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
         * </pre>
         *
         * <code>.google.protobuf.Duration idle_timeout = 5;</code>
         * @return Whether the idleTimeout field is set.
         */
        public boolean hasIdleTimeout() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * The idle timeout for upstream connection pool connections. The idle timeout 
         * is defined as the period in which there are no active requests.
         * If not set, the default is 1 hour. When the idle timeout is reached, 
         * the connection will be closed. If the connection is an HTTP/2 
         * connection a drain sequence will occur prior to closing the connection. 
         * Note that request based timeouts mean that HTTP/2 PINGs will not 
         * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
         * </pre>
         *
         * <code>.google.protobuf.Duration idle_timeout = 5;</code>
         * @return The idleTimeout.
         */
        public com.google.protobuf.Duration getIdleTimeout() {
          if (idleTimeoutBuilder_ == null) {
            return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
          } else {
            return idleTimeoutBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The idle timeout for upstream connection pool connections. The idle timeout 
         * is defined as the period in which there are no active requests.
         * If not set, the default is 1 hour. When the idle timeout is reached, 
         * the connection will be closed. If the connection is an HTTP/2 
         * connection a drain sequence will occur prior to closing the connection. 
         * Note that request based timeouts mean that HTTP/2 PINGs will not 
         * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
         * </pre>
         *
         * <code>.google.protobuf.Duration idle_timeout = 5;</code>
         */
        public Builder setIdleTimeout(com.google.protobuf.Duration value) {
          if (idleTimeoutBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            idleTimeout_ = value;
          } else {
            idleTimeoutBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The idle timeout for upstream connection pool connections. The idle timeout 
         * is defined as the period in which there are no active requests.
         * If not set, the default is 1 hour. When the idle timeout is reached, 
         * the connection will be closed. If the connection is an HTTP/2 
         * connection a drain sequence will occur prior to closing the connection. 
         * Note that request based timeouts mean that HTTP/2 PINGs will not 
         * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
         * </pre>
         *
         * <code>.google.protobuf.Duration idle_timeout = 5;</code>
         */
        public Builder setIdleTimeout(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (idleTimeoutBuilder_ == null) {
            idleTimeout_ = builderForValue.build();
          } else {
            idleTimeoutBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The idle timeout for upstream connection pool connections. The idle timeout 
         * is defined as the period in which there are no active requests.
         * If not set, the default is 1 hour. When the idle timeout is reached, 
         * the connection will be closed. If the connection is an HTTP/2 
         * connection a drain sequence will occur prior to closing the connection. 
         * Note that request based timeouts mean that HTTP/2 PINGs will not 
         * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
         * </pre>
         *
         * <code>.google.protobuf.Duration idle_timeout = 5;</code>
         */
        public Builder mergeIdleTimeout(com.google.protobuf.Duration value) {
          if (idleTimeoutBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0) &&
              idleTimeout_ != null &&
              idleTimeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
              getIdleTimeoutBuilder().mergeFrom(value);
            } else {
              idleTimeout_ = value;
            }
          } else {
            idleTimeoutBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The idle timeout for upstream connection pool connections. The idle timeout 
         * is defined as the period in which there are no active requests.
         * If not set, the default is 1 hour. When the idle timeout is reached, 
         * the connection will be closed. If the connection is an HTTP/2 
         * connection a drain sequence will occur prior to closing the connection. 
         * Note that request based timeouts mean that HTTP/2 PINGs will not 
         * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
         * </pre>
         *
         * <code>.google.protobuf.Duration idle_timeout = 5;</code>
         */
        public Builder clearIdleTimeout() {
          bitField0_ = (bitField0_ & ~0x00000010);
          idleTimeout_ = null;
          if (idleTimeoutBuilder_ != null) {
            idleTimeoutBuilder_.dispose();
            idleTimeoutBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The idle timeout for upstream connection pool connections. The idle timeout 
         * is defined as the period in which there are no active requests.
         * If not set, the default is 1 hour. When the idle timeout is reached, 
         * the connection will be closed. If the connection is an HTTP/2 
         * connection a drain sequence will occur prior to closing the connection. 
         * Note that request based timeouts mean that HTTP/2 PINGs will not 
         * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
         * </pre>
         *
         * <code>.google.protobuf.Duration idle_timeout = 5;</code>
         */
        public com.google.protobuf.Duration.Builder getIdleTimeoutBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getIdleTimeoutFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The idle timeout for upstream connection pool connections. The idle timeout 
         * is defined as the period in which there are no active requests.
         * If not set, the default is 1 hour. When the idle timeout is reached, 
         * the connection will be closed. If the connection is an HTTP/2 
         * connection a drain sequence will occur prior to closing the connection. 
         * Note that request based timeouts mean that HTTP/2 PINGs will not 
         * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
         * </pre>
         *
         * <code>.google.protobuf.Duration idle_timeout = 5;</code>
         */
        public com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder() {
          if (idleTimeoutBuilder_ != null) {
            return idleTimeoutBuilder_.getMessageOrBuilder();
          } else {
            return idleTimeout_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
          }
        }
        /**
         * <pre>
         * The idle timeout for upstream connection pool connections. The idle timeout 
         * is defined as the period in which there are no active requests.
         * If not set, the default is 1 hour. When the idle timeout is reached, 
         * the connection will be closed. If the connection is an HTTP/2 
         * connection a drain sequence will occur prior to closing the connection. 
         * Note that request based timeouts mean that HTTP/2 PINGs will not 
         * keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections. 
         * </pre>
         *
         * <code>.google.protobuf.Duration idle_timeout = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getIdleTimeoutFieldBuilder() {
          if (idleTimeoutBuilder_ == null) {
            idleTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getIdleTimeout(),
                    getParentForChildren(),
                    isClean());
            idleTimeout_ = null;
          }
          return idleTimeoutBuilder_;
        }

        private int h2UpgradePolicy_ = 0;
        /**
         * <pre>
         * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
         * @return The enum numeric value on the wire for h2UpgradePolicy.
         */
        @java.lang.Override public int getH2UpgradePolicyValue() {
          return h2UpgradePolicy_;
        }
        /**
         * <pre>
         * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
         * @param value The enum numeric value on the wire for h2UpgradePolicy to set.
         * @return This builder for chaining.
         */
        public Builder setH2UpgradePolicyValue(int value) {
          h2UpgradePolicy_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
         * @return The h2UpgradePolicy.
         */
        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy getH2UpgradePolicy() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy result = istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.forNumber(h2UpgradePolicy_);
          return result == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
         * @param value The h2UpgradePolicy to set.
         * @return This builder for chaining.
         */
        public Builder setH2UpgradePolicy(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          h2UpgradePolicy_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
         * </pre>
         *
         * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearH2UpgradePolicy() {
          bitField0_ = (bitField0_ & ~0x00000020);
          h2UpgradePolicy_ = 0;
          onChanged();
          return this;
        }

        private boolean useClientProtocol_ ;
        /**
         * <pre>
         * If set to true, client protocol will be preserved while initiating connection to backend.
         * Note that when this is set to true, h2_upgrade_policy will be ineffective i.e. the client
         * connections will not be upgraded to http2.
         * </pre>
         *
         * <code>bool use_client_protocol = 7;</code>
         * @return The useClientProtocol.
         */
        @java.lang.Override
        public boolean getUseClientProtocol() {
          return useClientProtocol_;
        }
        /**
         * <pre>
         * If set to true, client protocol will be preserved while initiating connection to backend.
         * Note that when this is set to true, h2_upgrade_policy will be ineffective i.e. the client
         * connections will not be upgraded to http2.
         * </pre>
         *
         * <code>bool use_client_protocol = 7;</code>
         * @param value The useClientProtocol to set.
         * @return This builder for chaining.
         */
        public Builder setUseClientProtocol(boolean value) {
          
          useClientProtocol_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If set to true, client protocol will be preserved while initiating connection to backend.
         * Note that when this is set to true, h2_upgrade_policy will be ineffective i.e. the client
         * connections will not be upgraded to http2.
         * </pre>
         *
         * <code>bool use_client_protocol = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearUseClientProtocol() {
          bitField0_ = (bitField0_ & ~0x00000040);
          useClientProtocol_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings)
      }

      // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings)
      private static final istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings();
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HTTPSettings>
          PARSER = new com.google.protobuf.AbstractParser<HTTPSettings>() {
        @java.lang.Override
        public HTTPSettings parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<HTTPSettings> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HTTPSettings> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TCP_FIELD_NUMBER = 1;
    private istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings tcp_;
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     * @return Whether the tcp field is set.
     */
    @java.lang.Override
    public boolean hasTcp() {
      return tcp_ != null;
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     * @return The tcp.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings getTcp() {
      return tcp_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.getDefaultInstance() : tcp_;
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettingsOrBuilder getTcpOrBuilder() {
      return tcp_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.getDefaultInstance() : tcp_;
    }

    public static final int HTTP_FIELD_NUMBER = 2;
    private istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings http_;
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     * @return Whether the http field is set.
     */
    @java.lang.Override
    public boolean hasHttp() {
      return http_ != null;
    }
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     * @return The http.
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings getHttp() {
      return http_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.getDefaultInstance() : http_;
    }
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettingsOrBuilder getHttpOrBuilder() {
      return http_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.getDefaultInstance() : http_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tcp_ != null) {
        output.writeMessage(1, getTcp());
      }
      if (http_ != null) {
        output.writeMessage(2, getHttp());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tcp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTcp());
      }
      if (http_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getHttp());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings other = (istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings) obj;

      if (hasTcp() != other.hasTcp()) return false;
      if (hasTcp()) {
        if (!getTcp()
            .equals(other.getTcp())) return false;
      }
      if (hasHttp() != other.hasHttp()) return false;
      if (hasHttp()) {
        if (!getHttp()
            .equals(other.getHttp())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTcp()) {
        hash = (37 * hash) + TCP_FIELD_NUMBER;
        hash = (53 * hash) + getTcp().hashCode();
      }
      if (hasHttp()) {
        hash = (37 * hash) + HTTP_FIELD_NUMBER;
        hash = (53 * hash) + getHttp().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Connection pool settings for an upstream host. The settings apply to
     * each individual host in the upstream service.  See Envoy's [circuit
     * breaker](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/circuit_breaking)
     * for more details. Connection pool settings can be applied at the TCP
     * level as well as at HTTP level.
     * For example, the following rule sets a limit of 100 connections to redis
     * service called myredissrv with a connect timeout of 30ms
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1alpha3
     * kind: DestinationRule
     * metadata:
     *   name: bookinfo-redis
     * spec:
     *   host: myredissrv.prod.svc.cluster.local
     *   trafficPolicy:
     *     connectionPool:
     *       tcp:
     *         maxConnections: 100
     *         connectTimeout: 30ms
     *         tcpKeepalive:
     *           time: 7200s
     *           interval: 75s
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1beta1
     * kind: DestinationRule
     * metadata:
     *   name: bookinfo-redis
     * spec:
     *   host: myredissrv.prod.svc.cluster.local
     *   trafficPolicy:
     *     connectionPool:
     *       tcp:
     *         maxConnections: 100
     *         connectTimeout: 30ms
     *         tcpKeepalive:
     *           time: 7200s
     *           interval: 75s
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.ConnectionPoolSettings)
        istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.class, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tcp_ = null;
        if (tcpBuilder_ != null) {
          tcpBuilder_.dispose();
          tcpBuilder_ = null;
        }
        http_ = null;
        if (httpBuilder_ != null) {
          httpBuilder_.dispose();
          httpBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings getDefaultInstanceForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings build() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings buildPartial() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings result = new istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tcp_ = tcpBuilder_ == null
              ? tcp_
              : tcpBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.http_ = httpBuilder_ == null
              ? http_
              : httpBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings) {
          return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings other) {
        if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.getDefaultInstance()) return this;
        if (other.hasTcp()) {
          mergeTcp(other.getTcp());
        }
        if (other.hasHttp()) {
          mergeHttp(other.getHttp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTcpFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getHttpFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings tcp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettingsOrBuilder> tcpBuilder_;
      /**
       * <pre>
       * Settings common to both HTTP and TCP upstream connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
       * @return Whether the tcp field is set.
       */
      public boolean hasTcp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Settings common to both HTTP and TCP upstream connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
       * @return The tcp.
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings getTcp() {
        if (tcpBuilder_ == null) {
          return tcp_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.getDefaultInstance() : tcp_;
        } else {
          return tcpBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Settings common to both HTTP and TCP upstream connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
       */
      public Builder setTcp(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings value) {
        if (tcpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tcp_ = value;
        } else {
          tcpBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings common to both HTTP and TCP upstream connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
       */
      public Builder setTcp(
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.Builder builderForValue) {
        if (tcpBuilder_ == null) {
          tcp_ = builderForValue.build();
        } else {
          tcpBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings common to both HTTP and TCP upstream connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
       */
      public Builder mergeTcp(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings value) {
        if (tcpBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            tcp_ != null &&
            tcp_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.getDefaultInstance()) {
            getTcpBuilder().mergeFrom(value);
          } else {
            tcp_ = value;
          }
        } else {
          tcpBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings common to both HTTP and TCP upstream connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
       */
      public Builder clearTcp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tcp_ = null;
        if (tcpBuilder_ != null) {
          tcpBuilder_.dispose();
          tcpBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Settings common to both HTTP and TCP upstream connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.Builder getTcpBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTcpFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Settings common to both HTTP and TCP upstream connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettingsOrBuilder getTcpOrBuilder() {
        if (tcpBuilder_ != null) {
          return tcpBuilder_.getMessageOrBuilder();
        } else {
          return tcp_ == null ?
              istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.getDefaultInstance() : tcp_;
        }
      }
      /**
       * <pre>
       * Settings common to both HTTP and TCP upstream connections.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettingsOrBuilder> 
          getTcpFieldBuilder() {
        if (tcpBuilder_ == null) {
          tcpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.TCPSettingsOrBuilder>(
                  getTcp(),
                  getParentForChildren(),
                  isClean());
          tcp_ = null;
        }
        return tcpBuilder_;
      }

      private istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings http_;
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettingsOrBuilder> httpBuilder_;
      /**
       * <pre>
       * HTTP connection pool settings.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
       * @return Whether the http field is set.
       */
      public boolean hasHttp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * HTTP connection pool settings.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
       * @return The http.
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings getHttp() {
        if (httpBuilder_ == null) {
          return http_ == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.getDefaultInstance() : http_;
        } else {
          return httpBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * HTTP connection pool settings.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
       */
      public Builder setHttp(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings value) {
        if (httpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          http_ = value;
        } else {
          httpBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * HTTP connection pool settings.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
       */
      public Builder setHttp(
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.Builder builderForValue) {
        if (httpBuilder_ == null) {
          http_ = builderForValue.build();
        } else {
          httpBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * HTTP connection pool settings.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
       */
      public Builder mergeHttp(istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings value) {
        if (httpBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            http_ != null &&
            http_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.getDefaultInstance()) {
            getHttpBuilder().mergeFrom(value);
          } else {
            http_ = value;
          }
        } else {
          httpBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * HTTP connection pool settings.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
       */
      public Builder clearHttp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        http_ = null;
        if (httpBuilder_ != null) {
          httpBuilder_.dispose();
          httpBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * HTTP connection pool settings.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.Builder getHttpBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getHttpFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * HTTP connection pool settings.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettingsOrBuilder getHttpOrBuilder() {
        if (httpBuilder_ != null) {
          return httpBuilder_.getMessageOrBuilder();
        } else {
          return http_ == null ?
              istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.getDefaultInstance() : http_;
        }
      }
      /**
       * <pre>
       * HTTP connection pool settings.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettingsOrBuilder> 
          getHttpFieldBuilder() {
        if (httpBuilder_ == null) {
          httpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettings.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings.HTTPSettingsOrBuilder>(
                  getHttp(),
                  getParentForChildren(),
                  isClean());
          http_ = null;
        }
        return httpBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.ConnectionPoolSettings)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.ConnectionPoolSettings)
    private static final istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings();
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConnectionPoolSettings>
        PARSER = new com.google.protobuf.AbstractParser<ConnectionPoolSettings>() {
      @java.lang.Override
      public ConnectionPoolSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ConnectionPoolSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConnectionPoolSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.ConnectionPoolSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutlierDetectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.OutlierDetection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of errors before a host is ejected from the connection
     * pool. Defaults to 5. When the upstream host is accessed over HTTP, a
     * 502, 503, or 504 return code qualifies as an error. When the upstream host
     * is accessed over an opaque TCP connection, connect timeouts and
     * connection error/failure events qualify as an error.
     * $hide_from_docs
     * </pre>
     *
     * <code>int32 consecutive_errors = 1 [deprecated = true];</code>
     * @deprecated istio.networking.v1alpha3.OutlierDetection.consecutive_errors is deprecated.
     *     See networking/v1alpha3/destination_rule.proto;l=724
     * @return The consecutiveErrors.
     */
    @java.lang.Deprecated int getConsecutiveErrors();

    /**
     * <pre>
     * Number of gateway errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
     * code qualifies as a gateway error. When the upstream host is accessed over
     * an opaque TCP connection, connect timeouts and connection error/failure
     * events qualify as a gateway error.
     * This feature is disabled by default or when set to the value 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
     * @return Whether the consecutiveGatewayErrors field is set.
     */
    boolean hasConsecutiveGatewayErrors();
    /**
     * <pre>
     * Number of gateway errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
     * code qualifies as a gateway error. When the upstream host is accessed over
     * an opaque TCP connection, connect timeouts and connection error/failure
     * events qualify as a gateway error.
     * This feature is disabled by default or when set to the value 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
     * @return The consecutiveGatewayErrors.
     */
    com.google.protobuf.UInt32Value getConsecutiveGatewayErrors();
    /**
     * <pre>
     * Number of gateway errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
     * code qualifies as a gateway error. When the upstream host is accessed over
     * an opaque TCP connection, connect timeouts and connection error/failure
     * events qualify as a gateway error.
     * This feature is disabled by default or when set to the value 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getConsecutiveGatewayErrorsOrBuilder();

    /**
     * <pre>
     * Number of 5xx errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over an opaque TCP connection, connect
     * timeouts, connection error/failure and request failure events qualify as a
     * 5xx error.
     * This feature defaults to 5 but can be disabled by setting the value to 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
     * @return Whether the consecutive5xxErrors field is set.
     */
    boolean hasConsecutive5XxErrors();
    /**
     * <pre>
     * Number of 5xx errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over an opaque TCP connection, connect
     * timeouts, connection error/failure and request failure events qualify as a
     * 5xx error.
     * This feature defaults to 5 but can be disabled by setting the value to 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
     * @return The consecutive5xxErrors.
     */
    com.google.protobuf.UInt32Value getConsecutive5XxErrors();
    /**
     * <pre>
     * Number of 5xx errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over an opaque TCP connection, connect
     * timeouts, connection error/failure and request failure events qualify as a
     * 5xx error.
     * This feature defaults to 5 but can be disabled by setting the value to 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getConsecutive5XxErrorsOrBuilder();

    /**
     * <pre>
     * Time interval between ejection sweep analysis. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2;</code>
     * @return Whether the interval field is set.
     */
    boolean hasInterval();
    /**
     * <pre>
     * Time interval between ejection sweep analysis. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2;</code>
     * @return The interval.
     */
    com.google.protobuf.Duration getInterval();
    /**
     * <pre>
     * Time interval between ejection sweep analysis. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2;</code>
     */
    com.google.protobuf.DurationOrBuilder getIntervalOrBuilder();

    /**
     * <pre>
     * Minimum ejection duration. A host will remain ejected for a period
     * equal to the product of minimum ejection duration and the number of
     * times the host has been ejected. This technique allows the system to
     * automatically increase the ejection period for unhealthy upstream
     * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
     * @return Whether the baseEjectionTime field is set.
     */
    boolean hasBaseEjectionTime();
    /**
     * <pre>
     * Minimum ejection duration. A host will remain ejected for a period
     * equal to the product of minimum ejection duration and the number of
     * times the host has been ejected. This technique allows the system to
     * automatically increase the ejection period for unhealthy upstream
     * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
     * @return The baseEjectionTime.
     */
    com.google.protobuf.Duration getBaseEjectionTime();
    /**
     * <pre>
     * Minimum ejection duration. A host will remain ejected for a period
     * equal to the product of minimum ejection duration and the number of
     * times the host has been ejected. This technique allows the system to
     * automatically increase the ejection period for unhealthy upstream
     * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
     */
    com.google.protobuf.DurationOrBuilder getBaseEjectionTimeOrBuilder();

    /**
     * <pre>
     * Maximum % of hosts in the load balancing pool for the upstream
     * service that can be ejected. Defaults to 10%.
     * </pre>
     *
     * <code>int32 max_ejection_percent = 4;</code>
     * @return The maxEjectionPercent.
     */
    int getMaxEjectionPercent();

    /**
     * <pre>
     * Outlier detection will be enabled as long as the associated load balancing
     * pool has at least min_health_percent hosts in healthy mode. When the
     * percentage of healthy hosts in the load balancing pool drops below this
     * threshold, outlier detection will be disabled and the proxy will load balance
     * across all hosts in the pool (healthy and unhealthy). The threshold can be
     * disabled by setting it to 0%. The default is 0% as it's not typically
     * applicable in k8s environments with few pods per service.
     * </pre>
     *
     * <code>int32 min_health_percent = 5;</code>
     * @return The minHealthPercent.
     */
    int getMinHealthPercent();
  }
  /**
   * <pre>
   * A Circuit breaker implementation that tracks the status of each
   * individual host in the upstream service.  Applicable to both HTTP and
   * TCP services.  For HTTP services, hosts that continually return 5xx
   * errors for API calls are ejected from the pool for a pre-defined period
   * of time. For TCP services, connection timeouts or connection
   * failures to a given host counts as an error when measuring the
   * consecutive errors metric. See Envoy's [outlier
   * detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier)
   * for more details.
   * The following rule sets a connection pool size of 100 HTTP1 connections
   * with no more than 10 req/connection to the "reviews" service. In addition,
   * it sets a limit of 1000 concurrent HTTP2 requests and configures upstream
   * hosts to be scanned every 5 mins so that any host that fails 7 consecutive
   * times with a 502, 503, or 504 error code will be ejected for 15 minutes.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: DestinationRule
   * metadata:
   *   name: reviews-cb-policy
   * spec:
   *   host: reviews.prod.svc.cluster.local
   *   trafficPolicy:
   *     connectionPool:
   *       tcp:
   *         maxConnections: 100
   *       http:
   *         http2MaxRequests: 1000
   *         maxRequestsPerConnection: 10
   *     outlierDetection:
   *       consecutiveErrors: 7
   *       interval: 5m
   *       baseEjectionTime: 15m
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: DestinationRule
   * metadata:
   *   name: reviews-cb-policy
   * spec:
   *   host: reviews.prod.svc.cluster.local
   *   trafficPolicy:
   *     connectionPool:
   *       tcp:
   *         maxConnections: 100
   *       http:
   *         http2MaxRequests: 1000
   *         maxRequestsPerConnection: 10
   *     outlierDetection:
   *       consecutiveErrors: 7
   *       interval: 5m
   *       baseEjectionTime: 15m
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.OutlierDetection}
   */
  public static final class OutlierDetection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.OutlierDetection)
      OutlierDetectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutlierDetection.newBuilder() to construct.
    private OutlierDetection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutlierDetection() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OutlierDetection();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_OutlierDetection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_OutlierDetection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.class, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder.class);
    }

    public static final int CONSECUTIVE_ERRORS_FIELD_NUMBER = 1;
    private int consecutiveErrors_ = 0;
    /**
     * <pre>
     * Number of errors before a host is ejected from the connection
     * pool. Defaults to 5. When the upstream host is accessed over HTTP, a
     * 502, 503, or 504 return code qualifies as an error. When the upstream host
     * is accessed over an opaque TCP connection, connect timeouts and
     * connection error/failure events qualify as an error.
     * $hide_from_docs
     * </pre>
     *
     * <code>int32 consecutive_errors = 1 [deprecated = true];</code>
     * @deprecated istio.networking.v1alpha3.OutlierDetection.consecutive_errors is deprecated.
     *     See networking/v1alpha3/destination_rule.proto;l=724
     * @return The consecutiveErrors.
     */
    @java.lang.Override
    @java.lang.Deprecated public int getConsecutiveErrors() {
      return consecutiveErrors_;
    }

    public static final int CONSECUTIVE_GATEWAY_ERRORS_FIELD_NUMBER = 6;
    private com.google.protobuf.UInt32Value consecutiveGatewayErrors_;
    /**
     * <pre>
     * Number of gateway errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
     * code qualifies as a gateway error. When the upstream host is accessed over
     * an opaque TCP connection, connect timeouts and connection error/failure
     * events qualify as a gateway error.
     * This feature is disabled by default or when set to the value 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
     * @return Whether the consecutiveGatewayErrors field is set.
     */
    @java.lang.Override
    public boolean hasConsecutiveGatewayErrors() {
      return consecutiveGatewayErrors_ != null;
    }
    /**
     * <pre>
     * Number of gateway errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
     * code qualifies as a gateway error. When the upstream host is accessed over
     * an opaque TCP connection, connect timeouts and connection error/failure
     * events qualify as a gateway error.
     * This feature is disabled by default or when set to the value 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
     * @return The consecutiveGatewayErrors.
     */
    @java.lang.Override
    public com.google.protobuf.UInt32Value getConsecutiveGatewayErrors() {
      return consecutiveGatewayErrors_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveGatewayErrors_;
    }
    /**
     * <pre>
     * Number of gateway errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
     * code qualifies as a gateway error. When the upstream host is accessed over
     * an opaque TCP connection, connect timeouts and connection error/failure
     * events qualify as a gateway error.
     * This feature is disabled by default or when set to the value 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt32ValueOrBuilder getConsecutiveGatewayErrorsOrBuilder() {
      return consecutiveGatewayErrors_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveGatewayErrors_;
    }

    public static final int CONSECUTIVE_5XX_ERRORS_FIELD_NUMBER = 7;
    private com.google.protobuf.UInt32Value consecutive5XxErrors_;
    /**
     * <pre>
     * Number of 5xx errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over an opaque TCP connection, connect
     * timeouts, connection error/failure and request failure events qualify as a
     * 5xx error.
     * This feature defaults to 5 but can be disabled by setting the value to 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
     * @return Whether the consecutive5xxErrors field is set.
     */
    @java.lang.Override
    public boolean hasConsecutive5XxErrors() {
      return consecutive5XxErrors_ != null;
    }
    /**
     * <pre>
     * Number of 5xx errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over an opaque TCP connection, connect
     * timeouts, connection error/failure and request failure events qualify as a
     * 5xx error.
     * This feature defaults to 5 but can be disabled by setting the value to 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
     * @return The consecutive5xxErrors.
     */
    @java.lang.Override
    public com.google.protobuf.UInt32Value getConsecutive5XxErrors() {
      return consecutive5XxErrors_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutive5XxErrors_;
    }
    /**
     * <pre>
     * Number of 5xx errors before a host is ejected from the connection pool.
     * When the upstream host is accessed over an opaque TCP connection, connect
     * timeouts, connection error/failure and request failure events qualify as a
     * 5xx error.
     * This feature defaults to 5 but can be disabled by setting the value to 0.
     * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
     * used separately or together. Because the errors counted by
     * consecutive_gateway_errors are also included in consecutive_5xx_errors,
     * if the value of consecutive_gateway_errors is greater than or equal to
     * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
     * no effect.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt32ValueOrBuilder getConsecutive5XxErrorsOrBuilder() {
      return consecutive5XxErrors_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutive5XxErrors_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 2;
    private com.google.protobuf.Duration interval_;
    /**
     * <pre>
     * Time interval between ejection sweep analysis. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2;</code>
     * @return Whether the interval field is set.
     */
    @java.lang.Override
    public boolean hasInterval() {
      return interval_ != null;
    }
    /**
     * <pre>
     * Time interval between ejection sweep analysis. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2;</code>
     * @return The interval.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getInterval() {
      return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
    }
    /**
     * <pre>
     * Time interval between ejection sweep analysis. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
      return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
    }

    public static final int BASE_EJECTION_TIME_FIELD_NUMBER = 3;
    private com.google.protobuf.Duration baseEjectionTime_;
    /**
     * <pre>
     * Minimum ejection duration. A host will remain ejected for a period
     * equal to the product of minimum ejection duration and the number of
     * times the host has been ejected. This technique allows the system to
     * automatically increase the ejection period for unhealthy upstream
     * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
     * @return Whether the baseEjectionTime field is set.
     */
    @java.lang.Override
    public boolean hasBaseEjectionTime() {
      return baseEjectionTime_ != null;
    }
    /**
     * <pre>
     * Minimum ejection duration. A host will remain ejected for a period
     * equal to the product of minimum ejection duration and the number of
     * times the host has been ejected. This technique allows the system to
     * automatically increase the ejection period for unhealthy upstream
     * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
     * @return The baseEjectionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getBaseEjectionTime() {
      return baseEjectionTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : baseEjectionTime_;
    }
    /**
     * <pre>
     * Minimum ejection duration. A host will remain ejected for a period
     * equal to the product of minimum ejection duration and the number of
     * times the host has been ejected. This technique allows the system to
     * automatically increase the ejection period for unhealthy upstream
     * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getBaseEjectionTimeOrBuilder() {
      return baseEjectionTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : baseEjectionTime_;
    }

    public static final int MAX_EJECTION_PERCENT_FIELD_NUMBER = 4;
    private int maxEjectionPercent_ = 0;
    /**
     * <pre>
     * Maximum % of hosts in the load balancing pool for the upstream
     * service that can be ejected. Defaults to 10%.
     * </pre>
     *
     * <code>int32 max_ejection_percent = 4;</code>
     * @return The maxEjectionPercent.
     */
    @java.lang.Override
    public int getMaxEjectionPercent() {
      return maxEjectionPercent_;
    }

    public static final int MIN_HEALTH_PERCENT_FIELD_NUMBER = 5;
    private int minHealthPercent_ = 0;
    /**
     * <pre>
     * Outlier detection will be enabled as long as the associated load balancing
     * pool has at least min_health_percent hosts in healthy mode. When the
     * percentage of healthy hosts in the load balancing pool drops below this
     * threshold, outlier detection will be disabled and the proxy will load balance
     * across all hosts in the pool (healthy and unhealthy). The threshold can be
     * disabled by setting it to 0%. The default is 0% as it's not typically
     * applicable in k8s environments with few pods per service.
     * </pre>
     *
     * <code>int32 min_health_percent = 5;</code>
     * @return The minHealthPercent.
     */
    @java.lang.Override
    public int getMinHealthPercent() {
      return minHealthPercent_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (consecutiveErrors_ != 0) {
        output.writeInt32(1, consecutiveErrors_);
      }
      if (interval_ != null) {
        output.writeMessage(2, getInterval());
      }
      if (baseEjectionTime_ != null) {
        output.writeMessage(3, getBaseEjectionTime());
      }
      if (maxEjectionPercent_ != 0) {
        output.writeInt32(4, maxEjectionPercent_);
      }
      if (minHealthPercent_ != 0) {
        output.writeInt32(5, minHealthPercent_);
      }
      if (consecutiveGatewayErrors_ != null) {
        output.writeMessage(6, getConsecutiveGatewayErrors());
      }
      if (consecutive5XxErrors_ != null) {
        output.writeMessage(7, getConsecutive5XxErrors());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (consecutiveErrors_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, consecutiveErrors_);
      }
      if (interval_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getInterval());
      }
      if (baseEjectionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBaseEjectionTime());
      }
      if (maxEjectionPercent_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxEjectionPercent_);
      }
      if (minHealthPercent_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, minHealthPercent_);
      }
      if (consecutiveGatewayErrors_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getConsecutiveGatewayErrors());
      }
      if (consecutive5XxErrors_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getConsecutive5XxErrors());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection other = (istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection) obj;

      if (getConsecutiveErrors()
          != other.getConsecutiveErrors()) return false;
      if (hasConsecutiveGatewayErrors() != other.hasConsecutiveGatewayErrors()) return false;
      if (hasConsecutiveGatewayErrors()) {
        if (!getConsecutiveGatewayErrors()
            .equals(other.getConsecutiveGatewayErrors())) return false;
      }
      if (hasConsecutive5XxErrors() != other.hasConsecutive5XxErrors()) return false;
      if (hasConsecutive5XxErrors()) {
        if (!getConsecutive5XxErrors()
            .equals(other.getConsecutive5XxErrors())) return false;
      }
      if (hasInterval() != other.hasInterval()) return false;
      if (hasInterval()) {
        if (!getInterval()
            .equals(other.getInterval())) return false;
      }
      if (hasBaseEjectionTime() != other.hasBaseEjectionTime()) return false;
      if (hasBaseEjectionTime()) {
        if (!getBaseEjectionTime()
            .equals(other.getBaseEjectionTime())) return false;
      }
      if (getMaxEjectionPercent()
          != other.getMaxEjectionPercent()) return false;
      if (getMinHealthPercent()
          != other.getMinHealthPercent()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONSECUTIVE_ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + getConsecutiveErrors();
      if (hasConsecutiveGatewayErrors()) {
        hash = (37 * hash) + CONSECUTIVE_GATEWAY_ERRORS_FIELD_NUMBER;
        hash = (53 * hash) + getConsecutiveGatewayErrors().hashCode();
      }
      if (hasConsecutive5XxErrors()) {
        hash = (37 * hash) + CONSECUTIVE_5XX_ERRORS_FIELD_NUMBER;
        hash = (53 * hash) + getConsecutive5XxErrors().hashCode();
      }
      if (hasInterval()) {
        hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getInterval().hashCode();
      }
      if (hasBaseEjectionTime()) {
        hash = (37 * hash) + BASE_EJECTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getBaseEjectionTime().hashCode();
      }
      hash = (37 * hash) + MAX_EJECTION_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxEjectionPercent();
      hash = (37 * hash) + MIN_HEALTH_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + getMinHealthPercent();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Circuit breaker implementation that tracks the status of each
     * individual host in the upstream service.  Applicable to both HTTP and
     * TCP services.  For HTTP services, hosts that continually return 5xx
     * errors for API calls are ejected from the pool for a pre-defined period
     * of time. For TCP services, connection timeouts or connection
     * failures to a given host counts as an error when measuring the
     * consecutive errors metric. See Envoy's [outlier
     * detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier)
     * for more details.
     * The following rule sets a connection pool size of 100 HTTP1 connections
     * with no more than 10 req/connection to the "reviews" service. In addition,
     * it sets a limit of 1000 concurrent HTTP2 requests and configures upstream
     * hosts to be scanned every 5 mins so that any host that fails 7 consecutive
     * times with a 502, 503, or 504 error code will be ejected for 15 minutes.
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1alpha3
     * kind: DestinationRule
     * metadata:
     *   name: reviews-cb-policy
     * spec:
     *   host: reviews.prod.svc.cluster.local
     *   trafficPolicy:
     *     connectionPool:
     *       tcp:
     *         maxConnections: 100
     *       http:
     *         http2MaxRequests: 1000
     *         maxRequestsPerConnection: 10
     *     outlierDetection:
     *       consecutiveErrors: 7
     *       interval: 5m
     *       baseEjectionTime: 15m
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1beta1
     * kind: DestinationRule
     * metadata:
     *   name: reviews-cb-policy
     * spec:
     *   host: reviews.prod.svc.cluster.local
     *   trafficPolicy:
     *     connectionPool:
     *       tcp:
     *         maxConnections: 100
     *       http:
     *         http2MaxRequests: 1000
     *         maxRequestsPerConnection: 10
     *     outlierDetection:
     *       consecutiveErrors: 7
     *       interval: 5m
     *       baseEjectionTime: 15m
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.OutlierDetection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.OutlierDetection)
        istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_OutlierDetection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_OutlierDetection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.class, istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        consecutiveErrors_ = 0;
        consecutiveGatewayErrors_ = null;
        if (consecutiveGatewayErrorsBuilder_ != null) {
          consecutiveGatewayErrorsBuilder_.dispose();
          consecutiveGatewayErrorsBuilder_ = null;
        }
        consecutive5XxErrors_ = null;
        if (consecutive5XxErrorsBuilder_ != null) {
          consecutive5XxErrorsBuilder_.dispose();
          consecutive5XxErrorsBuilder_ = null;
        }
        interval_ = null;
        if (intervalBuilder_ != null) {
          intervalBuilder_.dispose();
          intervalBuilder_ = null;
        }
        baseEjectionTime_ = null;
        if (baseEjectionTimeBuilder_ != null) {
          baseEjectionTimeBuilder_.dispose();
          baseEjectionTimeBuilder_ = null;
        }
        maxEjectionPercent_ = 0;
        minHealthPercent_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_OutlierDetection_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection getDefaultInstanceForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection build() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection buildPartial() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection result = new istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.consecutiveErrors_ = consecutiveErrors_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.consecutiveGatewayErrors_ = consecutiveGatewayErrorsBuilder_ == null
              ? consecutiveGatewayErrors_
              : consecutiveGatewayErrorsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.consecutive5XxErrors_ = consecutive5XxErrorsBuilder_ == null
              ? consecutive5XxErrors_
              : consecutive5XxErrorsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.interval_ = intervalBuilder_ == null
              ? interval_
              : intervalBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.baseEjectionTime_ = baseEjectionTimeBuilder_ == null
              ? baseEjectionTime_
              : baseEjectionTimeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.maxEjectionPercent_ = maxEjectionPercent_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.minHealthPercent_ = minHealthPercent_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection) {
          return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection other) {
        if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection.getDefaultInstance()) return this;
        if (other.getConsecutiveErrors() != 0) {
          setConsecutiveErrors(other.getConsecutiveErrors());
        }
        if (other.hasConsecutiveGatewayErrors()) {
          mergeConsecutiveGatewayErrors(other.getConsecutiveGatewayErrors());
        }
        if (other.hasConsecutive5XxErrors()) {
          mergeConsecutive5XxErrors(other.getConsecutive5XxErrors());
        }
        if (other.hasInterval()) {
          mergeInterval(other.getInterval());
        }
        if (other.hasBaseEjectionTime()) {
          mergeBaseEjectionTime(other.getBaseEjectionTime());
        }
        if (other.getMaxEjectionPercent() != 0) {
          setMaxEjectionPercent(other.getMaxEjectionPercent());
        }
        if (other.getMinHealthPercent() != 0) {
          setMinHealthPercent(other.getMinHealthPercent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                consecutiveErrors_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getIntervalFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getBaseEjectionTimeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 26
              case 32: {
                maxEjectionPercent_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 32
              case 40: {
                minHealthPercent_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 40
              case 50: {
                input.readMessage(
                    getConsecutiveGatewayErrorsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getConsecutive5XxErrorsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int consecutiveErrors_ ;
      /**
       * <pre>
       * Number of errors before a host is ejected from the connection
       * pool. Defaults to 5. When the upstream host is accessed over HTTP, a
       * 502, 503, or 504 return code qualifies as an error. When the upstream host
       * is accessed over an opaque TCP connection, connect timeouts and
       * connection error/failure events qualify as an error.
       * $hide_from_docs
       * </pre>
       *
       * <code>int32 consecutive_errors = 1 [deprecated = true];</code>
       * @deprecated istio.networking.v1alpha3.OutlierDetection.consecutive_errors is deprecated.
       *     See networking/v1alpha3/destination_rule.proto;l=724
       * @return The consecutiveErrors.
       */
      @java.lang.Override
      @java.lang.Deprecated public int getConsecutiveErrors() {
        return consecutiveErrors_;
      }
      /**
       * <pre>
       * Number of errors before a host is ejected from the connection
       * pool. Defaults to 5. When the upstream host is accessed over HTTP, a
       * 502, 503, or 504 return code qualifies as an error. When the upstream host
       * is accessed over an opaque TCP connection, connect timeouts and
       * connection error/failure events qualify as an error.
       * $hide_from_docs
       * </pre>
       *
       * <code>int32 consecutive_errors = 1 [deprecated = true];</code>
       * @deprecated istio.networking.v1alpha3.OutlierDetection.consecutive_errors is deprecated.
       *     See networking/v1alpha3/destination_rule.proto;l=724
       * @param value The consecutiveErrors to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setConsecutiveErrors(int value) {
        
        consecutiveErrors_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of errors before a host is ejected from the connection
       * pool. Defaults to 5. When the upstream host is accessed over HTTP, a
       * 502, 503, or 504 return code qualifies as an error. When the upstream host
       * is accessed over an opaque TCP connection, connect timeouts and
       * connection error/failure events qualify as an error.
       * $hide_from_docs
       * </pre>
       *
       * <code>int32 consecutive_errors = 1 [deprecated = true];</code>
       * @deprecated istio.networking.v1alpha3.OutlierDetection.consecutive_errors is deprecated.
       *     See networking/v1alpha3/destination_rule.proto;l=724
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearConsecutiveErrors() {
        bitField0_ = (bitField0_ & ~0x00000001);
        consecutiveErrors_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.UInt32Value consecutiveGatewayErrors_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> consecutiveGatewayErrorsBuilder_;
      /**
       * <pre>
       * Number of gateway errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
       * code qualifies as a gateway error. When the upstream host is accessed over
       * an opaque TCP connection, connect timeouts and connection error/failure
       * events qualify as a gateway error.
       * This feature is disabled by default or when set to the value 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
       * @return Whether the consecutiveGatewayErrors field is set.
       */
      public boolean hasConsecutiveGatewayErrors() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Number of gateway errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
       * code qualifies as a gateway error. When the upstream host is accessed over
       * an opaque TCP connection, connect timeouts and connection error/failure
       * events qualify as a gateway error.
       * This feature is disabled by default or when set to the value 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
       * @return The consecutiveGatewayErrors.
       */
      public com.google.protobuf.UInt32Value getConsecutiveGatewayErrors() {
        if (consecutiveGatewayErrorsBuilder_ == null) {
          return consecutiveGatewayErrors_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveGatewayErrors_;
        } else {
          return consecutiveGatewayErrorsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Number of gateway errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
       * code qualifies as a gateway error. When the upstream host is accessed over
       * an opaque TCP connection, connect timeouts and connection error/failure
       * events qualify as a gateway error.
       * This feature is disabled by default or when set to the value 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
       */
      public Builder setConsecutiveGatewayErrors(com.google.protobuf.UInt32Value value) {
        if (consecutiveGatewayErrorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          consecutiveGatewayErrors_ = value;
        } else {
          consecutiveGatewayErrorsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of gateway errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
       * code qualifies as a gateway error. When the upstream host is accessed over
       * an opaque TCP connection, connect timeouts and connection error/failure
       * events qualify as a gateway error.
       * This feature is disabled by default or when set to the value 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
       */
      public Builder setConsecutiveGatewayErrors(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (consecutiveGatewayErrorsBuilder_ == null) {
          consecutiveGatewayErrors_ = builderForValue.build();
        } else {
          consecutiveGatewayErrorsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of gateway errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
       * code qualifies as a gateway error. When the upstream host is accessed over
       * an opaque TCP connection, connect timeouts and connection error/failure
       * events qualify as a gateway error.
       * This feature is disabled by default or when set to the value 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
       */
      public Builder mergeConsecutiveGatewayErrors(com.google.protobuf.UInt32Value value) {
        if (consecutiveGatewayErrorsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            consecutiveGatewayErrors_ != null &&
            consecutiveGatewayErrors_ != com.google.protobuf.UInt32Value.getDefaultInstance()) {
            getConsecutiveGatewayErrorsBuilder().mergeFrom(value);
          } else {
            consecutiveGatewayErrors_ = value;
          }
        } else {
          consecutiveGatewayErrorsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of gateway errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
       * code qualifies as a gateway error. When the upstream host is accessed over
       * an opaque TCP connection, connect timeouts and connection error/failure
       * events qualify as a gateway error.
       * This feature is disabled by default or when set to the value 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
       */
      public Builder clearConsecutiveGatewayErrors() {
        bitField0_ = (bitField0_ & ~0x00000002);
        consecutiveGatewayErrors_ = null;
        if (consecutiveGatewayErrorsBuilder_ != null) {
          consecutiveGatewayErrorsBuilder_.dispose();
          consecutiveGatewayErrorsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of gateway errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
       * code qualifies as a gateway error. When the upstream host is accessed over
       * an opaque TCP connection, connect timeouts and connection error/failure
       * events qualify as a gateway error.
       * This feature is disabled by default or when set to the value 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
       */
      public com.google.protobuf.UInt32Value.Builder getConsecutiveGatewayErrorsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getConsecutiveGatewayErrorsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Number of gateway errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
       * code qualifies as a gateway error. When the upstream host is accessed over
       * an opaque TCP connection, connect timeouts and connection error/failure
       * events qualify as a gateway error.
       * This feature is disabled by default or when set to the value 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getConsecutiveGatewayErrorsOrBuilder() {
        if (consecutiveGatewayErrorsBuilder_ != null) {
          return consecutiveGatewayErrorsBuilder_.getMessageOrBuilder();
        } else {
          return consecutiveGatewayErrors_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveGatewayErrors_;
        }
      }
      /**
       * <pre>
       * Number of gateway errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over HTTP, a 502, 503, or 504 return
       * code qualifies as a gateway error. When the upstream host is accessed over
       * an opaque TCP connection, connect timeouts and connection error/failure
       * events qualify as a gateway error.
       * This feature is disabled by default or when set to the value 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_gateway_errors = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getConsecutiveGatewayErrorsFieldBuilder() {
        if (consecutiveGatewayErrorsBuilder_ == null) {
          consecutiveGatewayErrorsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getConsecutiveGatewayErrors(),
                  getParentForChildren(),
                  isClean());
          consecutiveGatewayErrors_ = null;
        }
        return consecutiveGatewayErrorsBuilder_;
      }

      private com.google.protobuf.UInt32Value consecutive5XxErrors_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> consecutive5XxErrorsBuilder_;
      /**
       * <pre>
       * Number of 5xx errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over an opaque TCP connection, connect
       * timeouts, connection error/failure and request failure events qualify as a
       * 5xx error.
       * This feature defaults to 5 but can be disabled by setting the value to 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
       * @return Whether the consecutive5xxErrors field is set.
       */
      public boolean hasConsecutive5XxErrors() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Number of 5xx errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over an opaque TCP connection, connect
       * timeouts, connection error/failure and request failure events qualify as a
       * 5xx error.
       * This feature defaults to 5 but can be disabled by setting the value to 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
       * @return The consecutive5xxErrors.
       */
      public com.google.protobuf.UInt32Value getConsecutive5XxErrors() {
        if (consecutive5XxErrorsBuilder_ == null) {
          return consecutive5XxErrors_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutive5XxErrors_;
        } else {
          return consecutive5XxErrorsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Number of 5xx errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over an opaque TCP connection, connect
       * timeouts, connection error/failure and request failure events qualify as a
       * 5xx error.
       * This feature defaults to 5 but can be disabled by setting the value to 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
       */
      public Builder setConsecutive5XxErrors(com.google.protobuf.UInt32Value value) {
        if (consecutive5XxErrorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          consecutive5XxErrors_ = value;
        } else {
          consecutive5XxErrorsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of 5xx errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over an opaque TCP connection, connect
       * timeouts, connection error/failure and request failure events qualify as a
       * 5xx error.
       * This feature defaults to 5 but can be disabled by setting the value to 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
       */
      public Builder setConsecutive5XxErrors(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (consecutive5XxErrorsBuilder_ == null) {
          consecutive5XxErrors_ = builderForValue.build();
        } else {
          consecutive5XxErrorsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of 5xx errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over an opaque TCP connection, connect
       * timeouts, connection error/failure and request failure events qualify as a
       * 5xx error.
       * This feature defaults to 5 but can be disabled by setting the value to 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
       */
      public Builder mergeConsecutive5XxErrors(com.google.protobuf.UInt32Value value) {
        if (consecutive5XxErrorsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            consecutive5XxErrors_ != null &&
            consecutive5XxErrors_ != com.google.protobuf.UInt32Value.getDefaultInstance()) {
            getConsecutive5XxErrorsBuilder().mergeFrom(value);
          } else {
            consecutive5XxErrors_ = value;
          }
        } else {
          consecutive5XxErrorsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of 5xx errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over an opaque TCP connection, connect
       * timeouts, connection error/failure and request failure events qualify as a
       * 5xx error.
       * This feature defaults to 5 but can be disabled by setting the value to 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
       */
      public Builder clearConsecutive5XxErrors() {
        bitField0_ = (bitField0_ & ~0x00000004);
        consecutive5XxErrors_ = null;
        if (consecutive5XxErrorsBuilder_ != null) {
          consecutive5XxErrorsBuilder_.dispose();
          consecutive5XxErrorsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of 5xx errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over an opaque TCP connection, connect
       * timeouts, connection error/failure and request failure events qualify as a
       * 5xx error.
       * This feature defaults to 5 but can be disabled by setting the value to 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
       */
      public com.google.protobuf.UInt32Value.Builder getConsecutive5XxErrorsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getConsecutive5XxErrorsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Number of 5xx errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over an opaque TCP connection, connect
       * timeouts, connection error/failure and request failure events qualify as a
       * 5xx error.
       * This feature defaults to 5 but can be disabled by setting the value to 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getConsecutive5XxErrorsOrBuilder() {
        if (consecutive5XxErrorsBuilder_ != null) {
          return consecutive5XxErrorsBuilder_.getMessageOrBuilder();
        } else {
          return consecutive5XxErrors_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : consecutive5XxErrors_;
        }
      }
      /**
       * <pre>
       * Number of 5xx errors before a host is ejected from the connection pool.
       * When the upstream host is accessed over an opaque TCP connection, connect
       * timeouts, connection error/failure and request failure events qualify as a
       * 5xx error.
       * This feature defaults to 5 but can be disabled by setting the value to 0.
       * Note that consecutive_gateway_errors and consecutive_5xx_errors can be
       * used separately or together. Because the errors counted by
       * consecutive_gateway_errors are also included in consecutive_5xx_errors,
       * if the value of consecutive_gateway_errors is greater than or equal to
       * the value of consecutive_5xx_errors, consecutive_gateway_errors will have
       * no effect.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value consecutive_5xx_errors = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getConsecutive5XxErrorsFieldBuilder() {
        if (consecutive5XxErrorsBuilder_ == null) {
          consecutive5XxErrorsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getConsecutive5XxErrors(),
                  getParentForChildren(),
                  isClean());
          consecutive5XxErrors_ = null;
        }
        return consecutive5XxErrorsBuilder_;
      }

      private com.google.protobuf.Duration interval_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> intervalBuilder_;
      /**
       * <pre>
       * Time interval between ejection sweep analysis. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 2;</code>
       * @return Whether the interval field is set.
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Time interval between ejection sweep analysis. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 2;</code>
       * @return The interval.
       */
      public com.google.protobuf.Duration getInterval() {
        if (intervalBuilder_ == null) {
          return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
        } else {
          return intervalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Time interval between ejection sweep analysis. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 2;</code>
       */
      public Builder setInterval(com.google.protobuf.Duration value) {
        if (intervalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          interval_ = value;
        } else {
          intervalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time interval between ejection sweep analysis. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 2;</code>
       */
      public Builder setInterval(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (intervalBuilder_ == null) {
          interval_ = builderForValue.build();
        } else {
          intervalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time interval between ejection sweep analysis. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 2;</code>
       */
      public Builder mergeInterval(com.google.protobuf.Duration value) {
        if (intervalBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            interval_ != null &&
            interval_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getIntervalBuilder().mergeFrom(value);
          } else {
            interval_ = value;
          }
        } else {
          intervalBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time interval between ejection sweep analysis. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 2;</code>
       */
      public Builder clearInterval() {
        bitField0_ = (bitField0_ & ~0x00000008);
        interval_ = null;
        if (intervalBuilder_ != null) {
          intervalBuilder_.dispose();
          intervalBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time interval between ejection sweep analysis. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 2;</code>
       */
      public com.google.protobuf.Duration.Builder getIntervalBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getIntervalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Time interval between ejection sweep analysis. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 2;</code>
       */
      public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
        if (intervalBuilder_ != null) {
          return intervalBuilder_.getMessageOrBuilder();
        } else {
          return interval_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : interval_;
        }
      }
      /**
       * <pre>
       * Time interval between ejection sweep analysis. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getIntervalFieldBuilder() {
        if (intervalBuilder_ == null) {
          intervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getInterval(),
                  getParentForChildren(),
                  isClean());
          interval_ = null;
        }
        return intervalBuilder_;
      }

      private com.google.protobuf.Duration baseEjectionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> baseEjectionTimeBuilder_;
      /**
       * <pre>
       * Minimum ejection duration. A host will remain ejected for a period
       * equal to the product of minimum ejection duration and the number of
       * times the host has been ejected. This technique allows the system to
       * automatically increase the ejection period for unhealthy upstream
       * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
       * </pre>
       *
       * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
       * @return Whether the baseEjectionTime field is set.
       */
      public boolean hasBaseEjectionTime() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Minimum ejection duration. A host will remain ejected for a period
       * equal to the product of minimum ejection duration and the number of
       * times the host has been ejected. This technique allows the system to
       * automatically increase the ejection period for unhealthy upstream
       * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
       * </pre>
       *
       * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
       * @return The baseEjectionTime.
       */
      public com.google.protobuf.Duration getBaseEjectionTime() {
        if (baseEjectionTimeBuilder_ == null) {
          return baseEjectionTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : baseEjectionTime_;
        } else {
          return baseEjectionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Minimum ejection duration. A host will remain ejected for a period
       * equal to the product of minimum ejection duration and the number of
       * times the host has been ejected. This technique allows the system to
       * automatically increase the ejection period for unhealthy upstream
       * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
       * </pre>
       *
       * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
       */
      public Builder setBaseEjectionTime(com.google.protobuf.Duration value) {
        if (baseEjectionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseEjectionTime_ = value;
        } else {
          baseEjectionTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum ejection duration. A host will remain ejected for a period
       * equal to the product of minimum ejection duration and the number of
       * times the host has been ejected. This technique allows the system to
       * automatically increase the ejection period for unhealthy upstream
       * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
       * </pre>
       *
       * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
       */
      public Builder setBaseEjectionTime(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (baseEjectionTimeBuilder_ == null) {
          baseEjectionTime_ = builderForValue.build();
        } else {
          baseEjectionTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum ejection duration. A host will remain ejected for a period
       * equal to the product of minimum ejection duration and the number of
       * times the host has been ejected. This technique allows the system to
       * automatically increase the ejection period for unhealthy upstream
       * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
       * </pre>
       *
       * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
       */
      public Builder mergeBaseEjectionTime(com.google.protobuf.Duration value) {
        if (baseEjectionTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            baseEjectionTime_ != null &&
            baseEjectionTime_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getBaseEjectionTimeBuilder().mergeFrom(value);
          } else {
            baseEjectionTime_ = value;
          }
        } else {
          baseEjectionTimeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum ejection duration. A host will remain ejected for a period
       * equal to the product of minimum ejection duration and the number of
       * times the host has been ejected. This technique allows the system to
       * automatically increase the ejection period for unhealthy upstream
       * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
       * </pre>
       *
       * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
       */
      public Builder clearBaseEjectionTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        baseEjectionTime_ = null;
        if (baseEjectionTimeBuilder_ != null) {
          baseEjectionTimeBuilder_.dispose();
          baseEjectionTimeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum ejection duration. A host will remain ejected for a period
       * equal to the product of minimum ejection duration and the number of
       * times the host has been ejected. This technique allows the system to
       * automatically increase the ejection period for unhealthy upstream
       * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
       * </pre>
       *
       * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
       */
      public com.google.protobuf.Duration.Builder getBaseEjectionTimeBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBaseEjectionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Minimum ejection duration. A host will remain ejected for a period
       * equal to the product of minimum ejection duration and the number of
       * times the host has been ejected. This technique allows the system to
       * automatically increase the ejection period for unhealthy upstream
       * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
       * </pre>
       *
       * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
       */
      public com.google.protobuf.DurationOrBuilder getBaseEjectionTimeOrBuilder() {
        if (baseEjectionTimeBuilder_ != null) {
          return baseEjectionTimeBuilder_.getMessageOrBuilder();
        } else {
          return baseEjectionTime_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : baseEjectionTime_;
        }
      }
      /**
       * <pre>
       * Minimum ejection duration. A host will remain ejected for a period
       * equal to the product of minimum ejection duration and the number of
       * times the host has been ejected. This technique allows the system to
       * automatically increase the ejection period for unhealthy upstream
       * servers. format: 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 30s.
       * </pre>
       *
       * <code>.google.protobuf.Duration base_ejection_time = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getBaseEjectionTimeFieldBuilder() {
        if (baseEjectionTimeBuilder_ == null) {
          baseEjectionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getBaseEjectionTime(),
                  getParentForChildren(),
                  isClean());
          baseEjectionTime_ = null;
        }
        return baseEjectionTimeBuilder_;
      }

      private int maxEjectionPercent_ ;
      /**
       * <pre>
       * Maximum % of hosts in the load balancing pool for the upstream
       * service that can be ejected. Defaults to 10%.
       * </pre>
       *
       * <code>int32 max_ejection_percent = 4;</code>
       * @return The maxEjectionPercent.
       */
      @java.lang.Override
      public int getMaxEjectionPercent() {
        return maxEjectionPercent_;
      }
      /**
       * <pre>
       * Maximum % of hosts in the load balancing pool for the upstream
       * service that can be ejected. Defaults to 10%.
       * </pre>
       *
       * <code>int32 max_ejection_percent = 4;</code>
       * @param value The maxEjectionPercent to set.
       * @return This builder for chaining.
       */
      public Builder setMaxEjectionPercent(int value) {
        
        maxEjectionPercent_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum % of hosts in the load balancing pool for the upstream
       * service that can be ejected. Defaults to 10%.
       * </pre>
       *
       * <code>int32 max_ejection_percent = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxEjectionPercent() {
        bitField0_ = (bitField0_ & ~0x00000020);
        maxEjectionPercent_ = 0;
        onChanged();
        return this;
      }

      private int minHealthPercent_ ;
      /**
       * <pre>
       * Outlier detection will be enabled as long as the associated load balancing
       * pool has at least min_health_percent hosts in healthy mode. When the
       * percentage of healthy hosts in the load balancing pool drops below this
       * threshold, outlier detection will be disabled and the proxy will load balance
       * across all hosts in the pool (healthy and unhealthy). The threshold can be
       * disabled by setting it to 0%. The default is 0% as it's not typically
       * applicable in k8s environments with few pods per service.
       * </pre>
       *
       * <code>int32 min_health_percent = 5;</code>
       * @return The minHealthPercent.
       */
      @java.lang.Override
      public int getMinHealthPercent() {
        return minHealthPercent_;
      }
      /**
       * <pre>
       * Outlier detection will be enabled as long as the associated load balancing
       * pool has at least min_health_percent hosts in healthy mode. When the
       * percentage of healthy hosts in the load balancing pool drops below this
       * threshold, outlier detection will be disabled and the proxy will load balance
       * across all hosts in the pool (healthy and unhealthy). The threshold can be
       * disabled by setting it to 0%. The default is 0% as it's not typically
       * applicable in k8s environments with few pods per service.
       * </pre>
       *
       * <code>int32 min_health_percent = 5;</code>
       * @param value The minHealthPercent to set.
       * @return This builder for chaining.
       */
      public Builder setMinHealthPercent(int value) {
        
        minHealthPercent_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Outlier detection will be enabled as long as the associated load balancing
       * pool has at least min_health_percent hosts in healthy mode. When the
       * percentage of healthy hosts in the load balancing pool drops below this
       * threshold, outlier detection will be disabled and the proxy will load balance
       * across all hosts in the pool (healthy and unhealthy). The threshold can be
       * disabled by setting it to 0%. The default is 0% as it's not typically
       * applicable in k8s environments with few pods per service.
       * </pre>
       *
       * <code>int32 min_health_percent = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinHealthPercent() {
        bitField0_ = (bitField0_ & ~0x00000040);
        minHealthPercent_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.OutlierDetection)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.OutlierDetection)
    private static final istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection();
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OutlierDetection>
        PARSER = new com.google.protobuf.AbstractParser<OutlierDetection>() {
      @java.lang.Override
      public OutlierDetection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OutlierDetection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutlierDetection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.OutlierDetection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClientTLSSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.ClientTLSSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Indicates whether connections to this port should be secured
     * using TLS. The value of this field determines how TLS is enforced.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for mode.
     */
    int getModeValue();
    /**
     * <pre>
     * Indicates whether connections to this port should be secured
     * using TLS. The value of this field determines how TLS is enforced.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The mode.
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode getMode();

    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to the file holding the
     * client-side TLS certificate to use.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string client_certificate = 2;</code>
     * @return The clientCertificate.
     */
    java.lang.String getClientCertificate();
    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to the file holding the
     * client-side TLS certificate to use.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string client_certificate = 2;</code>
     * @return The bytes for clientCertificate.
     */
    com.google.protobuf.ByteString
        getClientCertificateBytes();

    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to the file holding the
     * client's private key.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string private_key = 3;</code>
     * @return The privateKey.
     */
    java.lang.String getPrivateKey();
    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to the file holding the
     * client's private key.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string private_key = 3;</code>
     * @return The bytes for privateKey.
     */
    com.google.protobuf.ByteString
        getPrivateKeyBytes();

    /**
     * <pre>
     * OPTIONAL: The path to the file containing certificate authority
     * certificates to use in verifying a presented server certificate. If
     * omitted, the proxy will not verify the server's certificate.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string ca_certificates = 4;</code>
     * @return The caCertificates.
     */
    java.lang.String getCaCertificates();
    /**
     * <pre>
     * OPTIONAL: The path to the file containing certificate authority
     * certificates to use in verifying a presented server certificate. If
     * omitted, the proxy will not verify the server's certificate.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string ca_certificates = 4;</code>
     * @return The bytes for caCertificates.
     */
    com.google.protobuf.ByteString
        getCaCertificatesBytes();

    /**
     * <pre>
     * The name of the secret that holds the TLS certs for the
     * client including the CA certificates. Secret must exist in the
     * same namespace with the proxy using the certificates.
     * The secret (of type `generic`)should contain the
     * following keys and values: `key: &lt;privateKey&gt;`,
     * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
     * Secret of type tls for client certificates along with
     * ca.crt key for CA certificates is also supported.
     * Only one of client certificates and CA certificate
     * or credentialName can be specified.
     * **NOTE:** This field is currently applicable only at gateways.
     * Sidecars will continue to use the certificate paths.
     * </pre>
     *
     * <code>string credential_name = 7;</code>
     * @return The credentialName.
     */
    java.lang.String getCredentialName();
    /**
     * <pre>
     * The name of the secret that holds the TLS certs for the
     * client including the CA certificates. Secret must exist in the
     * same namespace with the proxy using the certificates.
     * The secret (of type `generic`)should contain the
     * following keys and values: `key: &lt;privateKey&gt;`,
     * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
     * Secret of type tls for client certificates along with
     * ca.crt key for CA certificates is also supported.
     * Only one of client certificates and CA certificate
     * or credentialName can be specified.
     * **NOTE:** This field is currently applicable only at gateways.
     * Sidecars will continue to use the certificate paths.
     * </pre>
     *
     * <code>string credential_name = 7;</code>
     * @return The bytes for credentialName.
     */
    com.google.protobuf.ByteString
        getCredentialNameBytes();

    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate. If specified, the proxy will verify that the server
     * certificate's subject alt name matches one of the specified values.
     * If specified, this list overrides the value of subject_alt_names
     * from the ServiceEntry.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 5;</code>
     * @return A list containing the subjectAltNames.
     */
    java.util.List<java.lang.String>
        getSubjectAltNamesList();
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate. If specified, the proxy will verify that the server
     * certificate's subject alt name matches one of the specified values.
     * If specified, this list overrides the value of subject_alt_names
     * from the ServiceEntry.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 5;</code>
     * @return The count of subjectAltNames.
     */
    int getSubjectAltNamesCount();
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate. If specified, the proxy will verify that the server
     * certificate's subject alt name matches one of the specified values.
     * If specified, this list overrides the value of subject_alt_names
     * from the ServiceEntry.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 5;</code>
     * @param index The index of the element to return.
     * @return The subjectAltNames at the given index.
     */
    java.lang.String getSubjectAltNames(int index);
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate. If specified, the proxy will verify that the server
     * certificate's subject alt name matches one of the specified values.
     * If specified, this list overrides the value of subject_alt_names
     * from the ServiceEntry.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the subjectAltNames at the given index.
     */
    com.google.protobuf.ByteString
        getSubjectAltNamesBytes(int index);

    /**
     * <pre>
     * SNI string to present to the server during TLS handshake.
     * </pre>
     *
     * <code>string sni = 6;</code>
     * @return The sni.
     */
    java.lang.String getSni();
    /**
     * <pre>
     * SNI string to present to the server during TLS handshake.
     * </pre>
     *
     * <code>string sni = 6;</code>
     * @return The bytes for sni.
     */
    com.google.protobuf.ByteString
        getSniBytes();
  }
  /**
   * <pre>
   * SSL/TLS related settings for upstream connections. See Envoy's [TLS
   * context](https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/auth/cert.proto.html)
   * for more details. These settings are common to both HTTP and TCP upstreams.
   * For example, the following rule configures a client to use mutual TLS
   * for connections to upstream database cluster.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: DestinationRule
   * metadata:
   *   name: db-mtls
   * spec:
   *   host: mydbserver.prod.svc.cluster.local
   *   trafficPolicy:
   *     tls:
   *       mode: MUTUAL
   *       clientCertificate: /etc/certs/myclientcert.pem
   *       privateKey: /etc/certs/client_private_key.pem
   *       caCertificates: /etc/certs/rootcacerts.pem
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: DestinationRule
   * metadata:
   *   name: db-mtls
   * spec:
   *   host: mydbserver.prod.svc.cluster.local
   *   trafficPolicy:
   *     tls:
   *       mode: MUTUAL
   *       clientCertificate: /etc/certs/myclientcert.pem
   *       privateKey: /etc/certs/client_private_key.pem
   *       caCertificates: /etc/certs/rootcacerts.pem
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * The following rule configures a client to use TLS when talking to a
   * foreign service whose domain matches *.foo.com.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: DestinationRule
   * metadata:
   *   name: tls-foo
   * spec:
   *   host: "*.foo.com"
   *   trafficPolicy:
   *     tls:
   *       mode: SIMPLE
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: DestinationRule
   * metadata:
   *   name: tls-foo
   * spec:
   *   host: "*.foo.com"
   *   trafficPolicy:
   *     tls:
   *       mode: SIMPLE
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * The following rule configures a client to use Istio mutual TLS when talking
   * to rating services.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: DestinationRule
   * metadata:
   *   name: ratings-istio-mtls
   * spec:
   *   host: ratings.prod.svc.cluster.local
   *   trafficPolicy:
   *     tls:
   *       mode: ISTIO_MUTUAL
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: DestinationRule
   * metadata:
   *   name: ratings-istio-mtls
   * spec:
   *   host: ratings.prod.svc.cluster.local
   *   trafficPolicy:
   *     tls:
   *       mode: ISTIO_MUTUAL
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.ClientTLSSettings}
   */
  public static final class ClientTLSSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.ClientTLSSettings)
      ClientTLSSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClientTLSSettings.newBuilder() to construct.
    private ClientTLSSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClientTLSSettings() {
      mode_ = 0;
      clientCertificate_ = "";
      privateKey_ = "";
      caCertificates_ = "";
      credentialName_ = "";
      subjectAltNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      sni_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClientTLSSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ClientTLSSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ClientTLSSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.class, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder.class);
    }

    /**
     * <pre>
     * TLS connection mode
     * </pre>
     *
     * Protobuf enum {@code istio.networking.v1alpha3.ClientTLSSettings.TLSmode}
     */
    public enum TLSmode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Do not setup a TLS connection to the upstream endpoint.
       * </pre>
       *
       * <code>DISABLE = 0;</code>
       */
      DISABLE(0),
      /**
       * <pre>
       * Originate a TLS connection to the upstream endpoint.
       * </pre>
       *
       * <code>SIMPLE = 1;</code>
       */
      SIMPLE(1),
      /**
       * <pre>
       * Secure connections to the upstream using mutual TLS by presenting
       * client certificates for authentication.
       * </pre>
       *
       * <code>MUTUAL = 2;</code>
       */
      MUTUAL(2),
      /**
       * <pre>
       * Secure connections to the upstream using mutual TLS by presenting
       * client certificates for authentication.
       * Compared to Mutual mode, this mode uses certificates generated
       * automatically by Istio for mTLS authentication. When this mode is
       * used, all other fields in `ClientTLSSettings` should be empty.
       * </pre>
       *
       * <code>ISTIO_MUTUAL = 3;</code>
       */
      ISTIO_MUTUAL(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Do not setup a TLS connection to the upstream endpoint.
       * </pre>
       *
       * <code>DISABLE = 0;</code>
       */
      public static final int DISABLE_VALUE = 0;
      /**
       * <pre>
       * Originate a TLS connection to the upstream endpoint.
       * </pre>
       *
       * <code>SIMPLE = 1;</code>
       */
      public static final int SIMPLE_VALUE = 1;
      /**
       * <pre>
       * Secure connections to the upstream using mutual TLS by presenting
       * client certificates for authentication.
       * </pre>
       *
       * <code>MUTUAL = 2;</code>
       */
      public static final int MUTUAL_VALUE = 2;
      /**
       * <pre>
       * Secure connections to the upstream using mutual TLS by presenting
       * client certificates for authentication.
       * Compared to Mutual mode, this mode uses certificates generated
       * automatically by Istio for mTLS authentication. When this mode is
       * used, all other fields in `ClientTLSSettings` should be empty.
       * </pre>
       *
       * <code>ISTIO_MUTUAL = 3;</code>
       */
      public static final int ISTIO_MUTUAL_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TLSmode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TLSmode forNumber(int value) {
        switch (value) {
          case 0: return DISABLE;
          case 1: return SIMPLE;
          case 2: return MUTUAL;
          case 3: return ISTIO_MUTUAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TLSmode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TLSmode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TLSmode>() {
              public TLSmode findValueByNumber(int number) {
                return TLSmode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDescriptor().getEnumTypes().get(0);
      }

      private static final TLSmode[] VALUES = values();

      public static TLSmode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TLSmode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:istio.networking.v1alpha3.ClientTLSSettings.TLSmode)
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_ = 0;
    /**
     * <pre>
     * Indicates whether connections to this port should be secured
     * using TLS. The value of this field determines how TLS is enforced.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override public int getModeValue() {
      return mode_;
    }
    /**
     * <pre>
     * Indicates whether connections to this port should be secured
     * using TLS. The value of this field determines how TLS is enforced.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The mode.
     */
    @java.lang.Override public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode getMode() {
      istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode result = istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode.forNumber(mode_);
      return result == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode.UNRECOGNIZED : result;
    }

    public static final int CLIENT_CERTIFICATE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object clientCertificate_ = "";
    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to the file holding the
     * client-side TLS certificate to use.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string client_certificate = 2;</code>
     * @return The clientCertificate.
     */
    @java.lang.Override
    public java.lang.String getClientCertificate() {
      java.lang.Object ref = clientCertificate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientCertificate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to the file holding the
     * client-side TLS certificate to use.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string client_certificate = 2;</code>
     * @return The bytes for clientCertificate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientCertificateBytes() {
      java.lang.Object ref = clientCertificate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientCertificate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object privateKey_ = "";
    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to the file holding the
     * client's private key.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string private_key = 3;</code>
     * @return The privateKey.
     */
    @java.lang.Override
    public java.lang.String getPrivateKey() {
      java.lang.Object ref = privateKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        privateKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * REQUIRED if mode is `MUTUAL`. The path to the file holding the
     * client's private key.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string private_key = 3;</code>
     * @return The bytes for privateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrivateKeyBytes() {
      java.lang.Object ref = privateKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        privateKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CA_CERTIFICATES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object caCertificates_ = "";
    /**
     * <pre>
     * OPTIONAL: The path to the file containing certificate authority
     * certificates to use in verifying a presented server certificate. If
     * omitted, the proxy will not verify the server's certificate.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string ca_certificates = 4;</code>
     * @return The caCertificates.
     */
    @java.lang.Override
    public java.lang.String getCaCertificates() {
      java.lang.Object ref = caCertificates_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        caCertificates_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * OPTIONAL: The path to the file containing certificate authority
     * certificates to use in verifying a presented server certificate. If
     * omitted, the proxy will not verify the server's certificate.
     * Should be empty if mode is `ISTIO_MUTUAL`.
     * </pre>
     *
     * <code>string ca_certificates = 4;</code>
     * @return The bytes for caCertificates.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCaCertificatesBytes() {
      java.lang.Object ref = caCertificates_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        caCertificates_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREDENTIAL_NAME_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object credentialName_ = "";
    /**
     * <pre>
     * The name of the secret that holds the TLS certs for the
     * client including the CA certificates. Secret must exist in the
     * same namespace with the proxy using the certificates.
     * The secret (of type `generic`)should contain the
     * following keys and values: `key: &lt;privateKey&gt;`,
     * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
     * Secret of type tls for client certificates along with
     * ca.crt key for CA certificates is also supported.
     * Only one of client certificates and CA certificate
     * or credentialName can be specified.
     * **NOTE:** This field is currently applicable only at gateways.
     * Sidecars will continue to use the certificate paths.
     * </pre>
     *
     * <code>string credential_name = 7;</code>
     * @return The credentialName.
     */
    @java.lang.Override
    public java.lang.String getCredentialName() {
      java.lang.Object ref = credentialName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        credentialName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the secret that holds the TLS certs for the
     * client including the CA certificates. Secret must exist in the
     * same namespace with the proxy using the certificates.
     * The secret (of type `generic`)should contain the
     * following keys and values: `key: &lt;privateKey&gt;`,
     * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
     * Secret of type tls for client certificates along with
     * ca.crt key for CA certificates is also supported.
     * Only one of client certificates and CA certificate
     * or credentialName can be specified.
     * **NOTE:** This field is currently applicable only at gateways.
     * Sidecars will continue to use the certificate paths.
     * </pre>
     *
     * <code>string credential_name = 7;</code>
     * @return The bytes for credentialName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCredentialNameBytes() {
      java.lang.Object ref = credentialName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        credentialName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBJECT_ALT_NAMES_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList subjectAltNames_;
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate. If specified, the proxy will verify that the server
     * certificate's subject alt name matches one of the specified values.
     * If specified, this list overrides the value of subject_alt_names
     * from the ServiceEntry.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 5;</code>
     * @return A list containing the subjectAltNames.
     */
    public com.google.protobuf.ProtocolStringList
        getSubjectAltNamesList() {
      return subjectAltNames_;
    }
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate. If specified, the proxy will verify that the server
     * certificate's subject alt name matches one of the specified values.
     * If specified, this list overrides the value of subject_alt_names
     * from the ServiceEntry.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 5;</code>
     * @return The count of subjectAltNames.
     */
    public int getSubjectAltNamesCount() {
      return subjectAltNames_.size();
    }
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate. If specified, the proxy will verify that the server
     * certificate's subject alt name matches one of the specified values.
     * If specified, this list overrides the value of subject_alt_names
     * from the ServiceEntry.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 5;</code>
     * @param index The index of the element to return.
     * @return The subjectAltNames at the given index.
     */
    public java.lang.String getSubjectAltNames(int index) {
      return subjectAltNames_.get(index);
    }
    /**
     * <pre>
     * A list of alternate names to verify the subject identity in the
     * certificate. If specified, the proxy will verify that the server
     * certificate's subject alt name matches one of the specified values.
     * If specified, this list overrides the value of subject_alt_names
     * from the ServiceEntry.
     * </pre>
     *
     * <code>repeated string subject_alt_names = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the subjectAltNames at the given index.
     */
    public com.google.protobuf.ByteString
        getSubjectAltNamesBytes(int index) {
      return subjectAltNames_.getByteString(index);
    }

    public static final int SNI_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object sni_ = "";
    /**
     * <pre>
     * SNI string to present to the server during TLS handshake.
     * </pre>
     *
     * <code>string sni = 6;</code>
     * @return The sni.
     */
    @java.lang.Override
    public java.lang.String getSni() {
      java.lang.Object ref = sni_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sni_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * SNI string to present to the server during TLS handshake.
     * </pre>
     *
     * <code>string sni = 6;</code>
     * @return The bytes for sni.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSniBytes() {
      java.lang.Object ref = sni_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sni_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mode_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode.DISABLE.getNumber()) {
        output.writeEnum(1, mode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientCertificate_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, clientCertificate_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(privateKey_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, privateKey_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(caCertificates_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, caCertificates_);
      }
      for (int i = 0; i < subjectAltNames_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, subjectAltNames_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sni_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, sni_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(credentialName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, credentialName_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mode_ != istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode.DISABLE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientCertificate_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, clientCertificate_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(privateKey_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, privateKey_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(caCertificates_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, caCertificates_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < subjectAltNames_.size(); i++) {
          dataSize += computeStringSizeNoTag(subjectAltNames_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSubjectAltNamesList().size();
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sni_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, sni_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(credentialName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, credentialName_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings other = (istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings) obj;

      if (mode_ != other.mode_) return false;
      if (!getClientCertificate()
          .equals(other.getClientCertificate())) return false;
      if (!getPrivateKey()
          .equals(other.getPrivateKey())) return false;
      if (!getCaCertificates()
          .equals(other.getCaCertificates())) return false;
      if (!getCredentialName()
          .equals(other.getCredentialName())) return false;
      if (!getSubjectAltNamesList()
          .equals(other.getSubjectAltNamesList())) return false;
      if (!getSni()
          .equals(other.getSni())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
      hash = (37 * hash) + CLIENT_CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getClientCertificate().hashCode();
      hash = (37 * hash) + PRIVATE_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPrivateKey().hashCode();
      hash = (37 * hash) + CA_CERTIFICATES_FIELD_NUMBER;
      hash = (53 * hash) + getCaCertificates().hashCode();
      hash = (37 * hash) + CREDENTIAL_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getCredentialName().hashCode();
      if (getSubjectAltNamesCount() > 0) {
        hash = (37 * hash) + SUBJECT_ALT_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getSubjectAltNamesList().hashCode();
      }
      hash = (37 * hash) + SNI_FIELD_NUMBER;
      hash = (53 * hash) + getSni().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SSL/TLS related settings for upstream connections. See Envoy's [TLS
     * context](https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/auth/cert.proto.html)
     * for more details. These settings are common to both HTTP and TCP upstreams.
     * For example, the following rule configures a client to use mutual TLS
     * for connections to upstream database cluster.
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1alpha3
     * kind: DestinationRule
     * metadata:
     *   name: db-mtls
     * spec:
     *   host: mydbserver.prod.svc.cluster.local
     *   trafficPolicy:
     *     tls:
     *       mode: MUTUAL
     *       clientCertificate: /etc/certs/myclientcert.pem
     *       privateKey: /etc/certs/client_private_key.pem
     *       caCertificates: /etc/certs/rootcacerts.pem
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1beta1
     * kind: DestinationRule
     * metadata:
     *   name: db-mtls
     * spec:
     *   host: mydbserver.prod.svc.cluster.local
     *   trafficPolicy:
     *     tls:
     *       mode: MUTUAL
     *       clientCertificate: /etc/certs/myclientcert.pem
     *       privateKey: /etc/certs/client_private_key.pem
     *       caCertificates: /etc/certs/rootcacerts.pem
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * The following rule configures a client to use TLS when talking to a
     * foreign service whose domain matches *.foo.com.
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1alpha3
     * kind: DestinationRule
     * metadata:
     *   name: tls-foo
     * spec:
     *   host: "*.foo.com"
     *   trafficPolicy:
     *     tls:
     *       mode: SIMPLE
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1beta1
     * kind: DestinationRule
     * metadata:
     *   name: tls-foo
     * spec:
     *   host: "*.foo.com"
     *   trafficPolicy:
     *     tls:
     *       mode: SIMPLE
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * The following rule configures a client to use Istio mutual TLS when talking
     * to rating services.
     * {{&lt;tabset category-name="example"&gt;}}
     * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1alpha3
     * kind: DestinationRule
     * metadata:
     *   name: ratings-istio-mtls
     * spec:
     *   host: ratings.prod.svc.cluster.local
     *   trafficPolicy:
     *     tls:
     *       mode: ISTIO_MUTUAL
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
     * ```yaml
     * apiVersion: networking.istio.io/v1beta1
     * kind: DestinationRule
     * metadata:
     *   name: ratings-istio-mtls
     * spec:
     *   host: ratings.prod.svc.cluster.local
     *   trafficPolicy:
     *     tls:
     *       mode: ISTIO_MUTUAL
     * ```
     * {{&lt;/tab&gt;}}
     * {{&lt;/tabset&gt;}}
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.ClientTLSSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.ClientTLSSettings)
        istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ClientTLSSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ClientTLSSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.class, istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        mode_ = 0;
        clientCertificate_ = "";
        privateKey_ = "";
        caCertificates_ = "";
        credentialName_ = "";
        subjectAltNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        sni_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ClientTLSSettings_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings getDefaultInstanceForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings build() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings buildPartial() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings result = new istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings result) {
        if (((bitField0_ & 0x00000020) != 0)) {
          subjectAltNames_ = subjectAltNames_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.subjectAltNames_ = subjectAltNames_;
      }

      private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.mode_ = mode_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.clientCertificate_ = clientCertificate_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.privateKey_ = privateKey_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.caCertificates_ = caCertificates_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.credentialName_ = credentialName_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.sni_ = sni_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings) {
          return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings other) {
        if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.getDefaultInstance()) return this;
        if (other.mode_ != 0) {
          setModeValue(other.getModeValue());
        }
        if (!other.getClientCertificate().isEmpty()) {
          clientCertificate_ = other.clientCertificate_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getPrivateKey().isEmpty()) {
          privateKey_ = other.privateKey_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getCaCertificates().isEmpty()) {
          caCertificates_ = other.caCertificates_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getCredentialName().isEmpty()) {
          credentialName_ = other.credentialName_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (!other.subjectAltNames_.isEmpty()) {
          if (subjectAltNames_.isEmpty()) {
            subjectAltNames_ = other.subjectAltNames_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSubjectAltNamesIsMutable();
            subjectAltNames_.addAll(other.subjectAltNames_);
          }
          onChanged();
        }
        if (!other.getSni().isEmpty()) {
          sni_ = other.sni_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                mode_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                clientCertificate_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                privateKey_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                caCertificates_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureSubjectAltNamesIsMutable();
                subjectAltNames_.add(s);
                break;
              } // case 42
              case 50: {
                sni_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 50
              case 58: {
                credentialName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int mode_ = 0;
      /**
       * <pre>
       * Indicates whether connections to this port should be secured
       * using TLS. The value of this field determines how TLS is enforced.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The enum numeric value on the wire for mode.
       */
      @java.lang.Override public int getModeValue() {
        return mode_;
      }
      /**
       * <pre>
       * Indicates whether connections to this port should be secured
       * using TLS. The value of this field determines how TLS is enforced.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The enum numeric value on the wire for mode to set.
       * @return This builder for chaining.
       */
      public Builder setModeValue(int value) {
        mode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether connections to this port should be secured
       * using TLS. The value of this field determines how TLS is enforced.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The mode.
       */
      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode getMode() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode result = istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode.forNumber(mode_);
        return result == null ? istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Indicates whether connections to this port should be secured
       * using TLS. The value of this field determines how TLS is enforced.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings.TLSmode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether connections to this port should be secured
       * using TLS. The value of this field determines how TLS is enforced.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object clientCertificate_ = "";
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to the file holding the
       * client-side TLS certificate to use.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string client_certificate = 2;</code>
       * @return The clientCertificate.
       */
      public java.lang.String getClientCertificate() {
        java.lang.Object ref = clientCertificate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          clientCertificate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to the file holding the
       * client-side TLS certificate to use.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string client_certificate = 2;</code>
       * @return The bytes for clientCertificate.
       */
      public com.google.protobuf.ByteString
          getClientCertificateBytes() {
        java.lang.Object ref = clientCertificate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientCertificate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to the file holding the
       * client-side TLS certificate to use.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string client_certificate = 2;</code>
       * @param value The clientCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setClientCertificate(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        clientCertificate_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to the file holding the
       * client-side TLS certificate to use.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string client_certificate = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearClientCertificate() {
        clientCertificate_ = getDefaultInstance().getClientCertificate();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to the file holding the
       * client-side TLS certificate to use.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string client_certificate = 2;</code>
       * @param value The bytes for clientCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setClientCertificateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        clientCertificate_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object privateKey_ = "";
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to the file holding the
       * client's private key.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string private_key = 3;</code>
       * @return The privateKey.
       */
      public java.lang.String getPrivateKey() {
        java.lang.Object ref = privateKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          privateKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to the file holding the
       * client's private key.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string private_key = 3;</code>
       * @return The bytes for privateKey.
       */
      public com.google.protobuf.ByteString
          getPrivateKeyBytes() {
        java.lang.Object ref = privateKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          privateKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to the file holding the
       * client's private key.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string private_key = 3;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        privateKey_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to the file holding the
       * client's private key.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string private_key = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        privateKey_ = getDefaultInstance().getPrivateKey();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED if mode is `MUTUAL`. The path to the file holding the
       * client's private key.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string private_key = 3;</code>
       * @param value The bytes for privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        privateKey_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object caCertificates_ = "";
      /**
       * <pre>
       * OPTIONAL: The path to the file containing certificate authority
       * certificates to use in verifying a presented server certificate. If
       * omitted, the proxy will not verify the server's certificate.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string ca_certificates = 4;</code>
       * @return The caCertificates.
       */
      public java.lang.String getCaCertificates() {
        java.lang.Object ref = caCertificates_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          caCertificates_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * OPTIONAL: The path to the file containing certificate authority
       * certificates to use in verifying a presented server certificate. If
       * omitted, the proxy will not verify the server's certificate.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string ca_certificates = 4;</code>
       * @return The bytes for caCertificates.
       */
      public com.google.protobuf.ByteString
          getCaCertificatesBytes() {
        java.lang.Object ref = caCertificates_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          caCertificates_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * OPTIONAL: The path to the file containing certificate authority
       * certificates to use in verifying a presented server certificate. If
       * omitted, the proxy will not verify the server's certificate.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string ca_certificates = 4;</code>
       * @param value The caCertificates to set.
       * @return This builder for chaining.
       */
      public Builder setCaCertificates(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        caCertificates_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OPTIONAL: The path to the file containing certificate authority
       * certificates to use in verifying a presented server certificate. If
       * omitted, the proxy will not verify the server's certificate.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string ca_certificates = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCaCertificates() {
        caCertificates_ = getDefaultInstance().getCaCertificates();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OPTIONAL: The path to the file containing certificate authority
       * certificates to use in verifying a presented server certificate. If
       * omitted, the proxy will not verify the server's certificate.
       * Should be empty if mode is `ISTIO_MUTUAL`.
       * </pre>
       *
       * <code>string ca_certificates = 4;</code>
       * @param value The bytes for caCertificates to set.
       * @return This builder for chaining.
       */
      public Builder setCaCertificatesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        caCertificates_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object credentialName_ = "";
      /**
       * <pre>
       * The name of the secret that holds the TLS certs for the
       * client including the CA certificates. Secret must exist in the
       * same namespace with the proxy using the certificates.
       * The secret (of type `generic`)should contain the
       * following keys and values: `key: &lt;privateKey&gt;`,
       * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
       * Secret of type tls for client certificates along with
       * ca.crt key for CA certificates is also supported.
       * Only one of client certificates and CA certificate
       * or credentialName can be specified.
       * **NOTE:** This field is currently applicable only at gateways.
       * Sidecars will continue to use the certificate paths.
       * </pre>
       *
       * <code>string credential_name = 7;</code>
       * @return The credentialName.
       */
      public java.lang.String getCredentialName() {
        java.lang.Object ref = credentialName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          credentialName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the secret that holds the TLS certs for the
       * client including the CA certificates. Secret must exist in the
       * same namespace with the proxy using the certificates.
       * The secret (of type `generic`)should contain the
       * following keys and values: `key: &lt;privateKey&gt;`,
       * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
       * Secret of type tls for client certificates along with
       * ca.crt key for CA certificates is also supported.
       * Only one of client certificates and CA certificate
       * or credentialName can be specified.
       * **NOTE:** This field is currently applicable only at gateways.
       * Sidecars will continue to use the certificate paths.
       * </pre>
       *
       * <code>string credential_name = 7;</code>
       * @return The bytes for credentialName.
       */
      public com.google.protobuf.ByteString
          getCredentialNameBytes() {
        java.lang.Object ref = credentialName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          credentialName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the secret that holds the TLS certs for the
       * client including the CA certificates. Secret must exist in the
       * same namespace with the proxy using the certificates.
       * The secret (of type `generic`)should contain the
       * following keys and values: `key: &lt;privateKey&gt;`,
       * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
       * Secret of type tls for client certificates along with
       * ca.crt key for CA certificates is also supported.
       * Only one of client certificates and CA certificate
       * or credentialName can be specified.
       * **NOTE:** This field is currently applicable only at gateways.
       * Sidecars will continue to use the certificate paths.
       * </pre>
       *
       * <code>string credential_name = 7;</code>
       * @param value The credentialName to set.
       * @return This builder for chaining.
       */
      public Builder setCredentialName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        credentialName_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the secret that holds the TLS certs for the
       * client including the CA certificates. Secret must exist in the
       * same namespace with the proxy using the certificates.
       * The secret (of type `generic`)should contain the
       * following keys and values: `key: &lt;privateKey&gt;`,
       * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
       * Secret of type tls for client certificates along with
       * ca.crt key for CA certificates is also supported.
       * Only one of client certificates and CA certificate
       * or credentialName can be specified.
       * **NOTE:** This field is currently applicable only at gateways.
       * Sidecars will continue to use the certificate paths.
       * </pre>
       *
       * <code>string credential_name = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCredentialName() {
        credentialName_ = getDefaultInstance().getCredentialName();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the secret that holds the TLS certs for the
       * client including the CA certificates. Secret must exist in the
       * same namespace with the proxy using the certificates.
       * The secret (of type `generic`)should contain the
       * following keys and values: `key: &lt;privateKey&gt;`,
       * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
       * Secret of type tls for client certificates along with
       * ca.crt key for CA certificates is also supported.
       * Only one of client certificates and CA certificate
       * or credentialName can be specified.
       * **NOTE:** This field is currently applicable only at gateways.
       * Sidecars will continue to use the certificate paths.
       * </pre>
       *
       * <code>string credential_name = 7;</code>
       * @param value The bytes for credentialName to set.
       * @return This builder for chaining.
       */
      public Builder setCredentialNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        credentialName_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList subjectAltNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSubjectAltNamesIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          subjectAltNames_ = new com.google.protobuf.LazyStringArrayList(subjectAltNames_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate. If specified, the proxy will verify that the server
       * certificate's subject alt name matches one of the specified values.
       * If specified, this list overrides the value of subject_alt_names
       * from the ServiceEntry.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 5;</code>
       * @return A list containing the subjectAltNames.
       */
      public com.google.protobuf.ProtocolStringList
          getSubjectAltNamesList() {
        return subjectAltNames_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate. If specified, the proxy will verify that the server
       * certificate's subject alt name matches one of the specified values.
       * If specified, this list overrides the value of subject_alt_names
       * from the ServiceEntry.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 5;</code>
       * @return The count of subjectAltNames.
       */
      public int getSubjectAltNamesCount() {
        return subjectAltNames_.size();
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate. If specified, the proxy will verify that the server
       * certificate's subject alt name matches one of the specified values.
       * If specified, this list overrides the value of subject_alt_names
       * from the ServiceEntry.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 5;</code>
       * @param index The index of the element to return.
       * @return The subjectAltNames at the given index.
       */
      public java.lang.String getSubjectAltNames(int index) {
        return subjectAltNames_.get(index);
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate. If specified, the proxy will verify that the server
       * certificate's subject alt name matches one of the specified values.
       * If specified, this list overrides the value of subject_alt_names
       * from the ServiceEntry.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the subjectAltNames at the given index.
       */
      public com.google.protobuf.ByteString
          getSubjectAltNamesBytes(int index) {
        return subjectAltNames_.getByteString(index);
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate. If specified, the proxy will verify that the server
       * certificate's subject alt name matches one of the specified values.
       * If specified, this list overrides the value of subject_alt_names
       * from the ServiceEntry.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 5;</code>
       * @param index The index to set the value at.
       * @param value The subjectAltNames to set.
       * @return This builder for chaining.
       */
      public Builder setSubjectAltNames(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSubjectAltNamesIsMutable();
        subjectAltNames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate. If specified, the proxy will verify that the server
       * certificate's subject alt name matches one of the specified values.
       * If specified, this list overrides the value of subject_alt_names
       * from the ServiceEntry.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 5;</code>
       * @param value The subjectAltNames to add.
       * @return This builder for chaining.
       */
      public Builder addSubjectAltNames(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSubjectAltNamesIsMutable();
        subjectAltNames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate. If specified, the proxy will verify that the server
       * certificate's subject alt name matches one of the specified values.
       * If specified, this list overrides the value of subject_alt_names
       * from the ServiceEntry.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 5;</code>
       * @param values The subjectAltNames to add.
       * @return This builder for chaining.
       */
      public Builder addAllSubjectAltNames(
          java.lang.Iterable<java.lang.String> values) {
        ensureSubjectAltNamesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, subjectAltNames_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate. If specified, the proxy will verify that the server
       * certificate's subject alt name matches one of the specified values.
       * If specified, this list overrides the value of subject_alt_names
       * from the ServiceEntry.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubjectAltNames() {
        subjectAltNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of alternate names to verify the subject identity in the
       * certificate. If specified, the proxy will verify that the server
       * certificate's subject alt name matches one of the specified values.
       * If specified, this list overrides the value of subject_alt_names
       * from the ServiceEntry.
       * </pre>
       *
       * <code>repeated string subject_alt_names = 5;</code>
       * @param value The bytes of the subjectAltNames to add.
       * @return This builder for chaining.
       */
      public Builder addSubjectAltNamesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureSubjectAltNamesIsMutable();
        subjectAltNames_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object sni_ = "";
      /**
       * <pre>
       * SNI string to present to the server during TLS handshake.
       * </pre>
       *
       * <code>string sni = 6;</code>
       * @return The sni.
       */
      public java.lang.String getSni() {
        java.lang.Object ref = sni_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sni_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * SNI string to present to the server during TLS handshake.
       * </pre>
       *
       * <code>string sni = 6;</code>
       * @return The bytes for sni.
       */
      public com.google.protobuf.ByteString
          getSniBytes() {
        java.lang.Object ref = sni_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sni_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * SNI string to present to the server during TLS handshake.
       * </pre>
       *
       * <code>string sni = 6;</code>
       * @param value The sni to set.
       * @return This builder for chaining.
       */
      public Builder setSni(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        sni_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SNI string to present to the server during TLS handshake.
       * </pre>
       *
       * <code>string sni = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSni() {
        sni_ = getDefaultInstance().getSni();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SNI string to present to the server during TLS handshake.
       * </pre>
       *
       * <code>string sni = 6;</code>
       * @param value The bytes for sni to set.
       * @return This builder for chaining.
       */
      public Builder setSniBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        sni_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.ClientTLSSettings)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.ClientTLSSettings)
    private static final istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings();
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClientTLSSettings>
        PARSER = new com.google.protobuf.AbstractParser<ClientTLSSettings>() {
      @java.lang.Override
      public ClientTLSSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ClientTLSSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClientTLSSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.ClientTLSSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LocalityLoadBalancerSettingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.LocalityLoadBalancerSetting)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute> 
        getDistributeList();
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute getDistribute(int index);
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    int getDistributeCount();
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.DistributeOrBuilder> 
        getDistributeOrBuilderList();
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.DistributeOrBuilder getDistributeOrBuilder(
        int index);

    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover> 
        getFailoverList();
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover getFailover(int index);
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    int getFailoverCount();
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.FailoverOrBuilder> 
        getFailoverOrBuilderList();
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.FailoverOrBuilder getFailoverOrBuilder(
        int index);

    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     * @return Whether the enabled field is set.
     */
    boolean hasEnabled();
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     * @return The enabled.
     */
    com.google.protobuf.BoolValue getEnabled();
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getEnabledOrBuilder();
  }
  /**
   * <pre>
   * Locality-weighted load balancing allows administrators to control the
   * distribution of traffic to endpoints based on the localities of where the
   * traffic originates and where it will terminate. These localities are
   * specified using arbitrary labels that designate a hierarchy of localities in
   * {region}/{zone}/{sub-zone} form. For additional detail refer to
   * [Locality Weight](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * The following example shows how to setup locality weights mesh-wide.
   * Given a mesh with workloads and their service deployed to "us-west/zone1/&#42;"
   * and "us-west/zone2/&#42;". This example specifies that when traffic accessing a
   * service originates from workloads in "us-west/zone1/&#42;", 80% of the traffic
   * will be sent to endpoints in "us-west/zone1/&#42;", i.e the same zone, and the
   * remaining 20% will go to endpoints in "us-west/zone2/&#42;". This setup is
   * intended to favor routing traffic to endpoints in the same locality.
   * A similar setting is specified for traffic originating in "us-west/zone2/&#42;".
   * ```yaml
   *   distribute:
   *     - from: us-west/zone1/&#42;
   *       to:
   *         "us-west/zone1/&#42;": 80
   *         "us-west/zone2/&#42;": 20
   *     - from: us-west/zone2/&#42;
   *       to:
   *         "us-west/zone1/&#42;": 20
   *         "us-west/zone2/&#42;": 80
   * ```
   * If the goal of the operator is not to distribute load across zones and
   * regions but rather to restrict the regionality of failover to meet other
   * operational requirements an operator can set a 'failover' policy instead of
   * a 'distribute' policy.
   * The following example sets up a locality failover policy for regions.
   * Assume a service resides in zones within us-east, us-west &amp; eu-west
   * this example specifies that when endpoints within us-east become unhealthy
   * traffic should failover to endpoints in any zone or sub-zone within eu-west
   * and similarly us-west should failover to us-east.
   * ```yaml
   *  failover:
   *    - from: us-east
   *      to: eu-west
   *    - from: us-west
   *      to: us-east
   * ```
   * Locality load balancing settings.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting}
   */
  public static final class LocalityLoadBalancerSetting extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting)
      LocalityLoadBalancerSettingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LocalityLoadBalancerSetting.newBuilder() to construct.
    private LocalityLoadBalancerSetting(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LocalityLoadBalancerSetting() {
      distribute_ = java.util.Collections.emptyList();
      failover_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LocalityLoadBalancerSetting();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Builder.class);
    }

    public interface DistributeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The from.
       */
      java.lang.String getFrom();
      /**
       * <pre>
       * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The bytes for from.
       */
      com.google.protobuf.ByteString
          getFromBytes();

      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be 100. Any locality not present will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      int getToCount();
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be 100. Any locality not present will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      boolean containsTo(
          java.lang.String key);
      /**
       * Use {@link #getToMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.Integer>
      getTo();
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be 100. Any locality not present will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      java.util.Map<java.lang.String, java.lang.Integer>
      getToMap();
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be 100. Any locality not present will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      int getToOrDefault(
          java.lang.String key,
          int defaultValue);
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be 100. Any locality not present will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      int getToOrThrow(
          java.lang.String key);
    }
    /**
     * <pre>
     * Describes how traffic originating in the 'from' zone or sub-zone is
     * distributed over a set of 'to' zones. Syntax for specifying a zone is
     * {region}/{zone}/{sub-zone} and terminal wildcards are allowed on any
     * segment of the specification. Examples:
     * `*` - matches all localities
     * `us-west/&#42;` - all zones and sub-zones within the us-west region
     * `us-west/zone-1/&#42;` - all sub-zones within us-west/zone-1
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute}
     */
    public static final class Distribute extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute)
        DistributeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Distribute.newBuilder() to construct.
      private Distribute(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Distribute() {
        from_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Distribute();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetTo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder.class);
      }

      public static final int FROM_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object from_ = "";
      /**
       * <pre>
       * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public java.lang.String getFrom() {
        java.lang.Object ref = from_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          from_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The bytes for from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFromBytes() {
        java.lang.Object ref = from_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          from_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TO_FIELD_NUMBER = 2;
      private static final class ToDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.Integer> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.Integer>newDefaultInstance(
                    istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_ToEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.UINT32,
                    0);
      }
      @SuppressWarnings("serial")
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> to_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetTo() {
        if (to_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ToDefaultEntryHolder.defaultEntry);
        }
        return to_;
      }
      public int getToCount() {
        return internalGetTo().getMap().size();
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be 100. Any locality not present will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      @java.lang.Override
      public boolean containsTo(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetTo().getMap().containsKey(key);
      }
      /**
       * Use {@link #getToMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getTo() {
        return getToMap();
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be 100. Any locality not present will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Integer> getToMap() {
        return internalGetTo().getMap();
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be 100. Any locality not present will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      @java.lang.Override
      public int getToOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetTo().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be 100. Any locality not present will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      @java.lang.Override
      public int getToOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetTo().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(from_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, from_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetTo(),
            ToDefaultEntryHolder.defaultEntry,
            2);
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(from_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, from_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
             : internalGetTo().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
          to__ = ToDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, to__);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute)) {
          return super.equals(obj);
        }
        istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute other = (istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute) obj;

        if (!getFrom()
            .equals(other.getFrom())) return false;
        if (!internalGetTo().equals(
            other.internalGetTo())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + FROM_FIELD_NUMBER;
        hash = (53 * hash) + getFrom().hashCode();
        if (!internalGetTo().getMap().isEmpty()) {
          hash = (37 * hash) + TO_FIELD_NUMBER;
          hash = (53 * hash) + internalGetTo().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Describes how traffic originating in the 'from' zone or sub-zone is
       * distributed over a set of 'to' zones. Syntax for specifying a zone is
       * {region}/{zone}/{sub-zone} and terminal wildcards are allowed on any
       * segment of the specification. Examples:
       * `*` - matches all localities
       * `us-west/&#42;` - all zones and sub-zones within the us-west region
       * `us-west/zone-1/&#42;` - all sub-zones within us-west/zone-1
       * </pre>
       *
       * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute)
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.DistributeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 2:
              return internalGetTo();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 2:
              return internalGetMutableTo();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder.class);
        }

        // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          from_ = "";
          internalGetMutableTo().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_descriptor;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute getDefaultInstanceForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.getDefaultInstance();
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute build() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute buildPartial() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute result = new istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.from_ = from_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.to_ = internalGetTo();
            result.to_.makeImmutable();
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute) {
            return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute other) {
          if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.getDefaultInstance()) return this;
          if (!other.getFrom().isEmpty()) {
            from_ = other.from_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          internalGetMutableTo().mergeFrom(
              other.internalGetTo());
          bitField0_ |= 0x00000002;
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  from_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
                  to__ = input.readMessage(
                      ToDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  internalGetMutableTo().getMutableMap().put(
                      to__.getKey(), to__.getValue());
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object from_ = "";
        /**
         * <pre>
         * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return The from.
         */
        public java.lang.String getFrom() {
          java.lang.Object ref = from_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            from_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return The bytes for from.
         */
        public com.google.protobuf.ByteString
            getFromBytes() {
          java.lang.Object ref = from_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            from_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
         * </pre>
         *
         * <code>string from = 1;</code>
         * @param value The from to set.
         * @return This builder for chaining.
         */
        public Builder setFrom(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          from_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearFrom() {
          from_ = getDefaultInstance().getFrom();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
         * </pre>
         *
         * <code>string from = 1;</code>
         * @param value The bytes for from to set.
         * @return This builder for chaining.
         */
        public Builder setFromBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          from_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.Integer> to_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
            internalGetTo() {
          if (to_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                ToDefaultEntryHolder.defaultEntry);
          }
          return to_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
            internalGetMutableTo() {
          if (to_ == null) {
            to_ = com.google.protobuf.MapField.newMapField(
                ToDefaultEntryHolder.defaultEntry);
          }
          if (!to_.isMutable()) {
            to_ = to_.copy();
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return to_;
        }
        public int getToCount() {
          return internalGetTo().getMap().size();
        }
        /**
         * <pre>
         * Map of upstream localities to traffic distribution weights. The sum of
         * all weights should be 100. Any locality not present will
         * receive no traffic.
         * </pre>
         *
         * <code>map&lt;string, uint32&gt; to = 2;</code>
         */
        @java.lang.Override
        public boolean containsTo(
            java.lang.String key) {
          if (key == null) { throw new NullPointerException("map key"); }
          return internalGetTo().getMap().containsKey(key);
        }
        /**
         * Use {@link #getToMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Integer> getTo() {
          return getToMap();
        }
        /**
         * <pre>
         * Map of upstream localities to traffic distribution weights. The sum of
         * all weights should be 100. Any locality not present will
         * receive no traffic.
         * </pre>
         *
         * <code>map&lt;string, uint32&gt; to = 2;</code>
         */
        @java.lang.Override
        public java.util.Map<java.lang.String, java.lang.Integer> getToMap() {
          return internalGetTo().getMap();
        }
        /**
         * <pre>
         * Map of upstream localities to traffic distribution weights. The sum of
         * all weights should be 100. Any locality not present will
         * receive no traffic.
         * </pre>
         *
         * <code>map&lt;string, uint32&gt; to = 2;</code>
         */
        @java.lang.Override
        public int getToOrDefault(
            java.lang.String key,
            int defaultValue) {
          if (key == null) { throw new NullPointerException("map key"); }
          java.util.Map<java.lang.String, java.lang.Integer> map =
              internalGetTo().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * Map of upstream localities to traffic distribution weights. The sum of
         * all weights should be 100. Any locality not present will
         * receive no traffic.
         * </pre>
         *
         * <code>map&lt;string, uint32&gt; to = 2;</code>
         */
        @java.lang.Override
        public int getToOrThrow(
            java.lang.String key) {
          if (key == null) { throw new NullPointerException("map key"); }
          java.util.Map<java.lang.String, java.lang.Integer> map =
              internalGetTo().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }
        public Builder clearTo() {
          bitField0_ = (bitField0_ & ~0x00000002);
          internalGetMutableTo().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * Map of upstream localities to traffic distribution weights. The sum of
         * all weights should be 100. Any locality not present will
         * receive no traffic.
         * </pre>
         *
         * <code>map&lt;string, uint32&gt; to = 2;</code>
         */
        public Builder removeTo(
            java.lang.String key) {
          if (key == null) { throw new NullPointerException("map key"); }
          internalGetMutableTo().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Integer>
            getMutableTo() {
          bitField0_ |= 0x00000002;
          return internalGetMutableTo().getMutableMap();
        }
        /**
         * <pre>
         * Map of upstream localities to traffic distribution weights. The sum of
         * all weights should be 100. Any locality not present will
         * receive no traffic.
         * </pre>
         *
         * <code>map&lt;string, uint32&gt; to = 2;</code>
         */
        public Builder putTo(
            java.lang.String key,
            int value) {
          if (key == null) { throw new NullPointerException("map key"); }
          
          internalGetMutableTo().getMutableMap()
              .put(key, value);
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Map of upstream localities to traffic distribution weights. The sum of
         * all weights should be 100. Any locality not present will
         * receive no traffic.
         * </pre>
         *
         * <code>map&lt;string, uint32&gt; to = 2;</code>
         */
        public Builder putAllTo(
            java.util.Map<java.lang.String, java.lang.Integer> values) {
          internalGetMutableTo().getMutableMap()
              .putAll(values);
          bitField0_ |= 0x00000002;
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute)
      }

      // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute)
      private static final istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute();
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Distribute>
          PARSER = new com.google.protobuf.AbstractParser<Distribute>() {
        @java.lang.Override
        public Distribute parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Distribute> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Distribute> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FailoverOrBuilder extends
        // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Originating region.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The from.
       */
      java.lang.String getFrom();
      /**
       * <pre>
       * Originating region.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The bytes for from.
       */
      com.google.protobuf.ByteString
          getFromBytes();

      /**
       * <pre>
       * Destination region the traffic will fail over to when endpoints in
       * the 'from' region becomes unhealthy.
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The to.
       */
      java.lang.String getTo();
      /**
       * <pre>
       * Destination region the traffic will fail over to when endpoints in
       * the 'from' region becomes unhealthy.
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The bytes for to.
       */
      com.google.protobuf.ByteString
          getToBytes();
    }
    /**
     * <pre>
     * Specify the traffic failover policy across regions. Since zone and sub-zone
     * failover is supported by default this only needs to be specified for
     * regions when the operator needs to constrain traffic failover so that
     * the default behavior of failing over to any endpoint globally does not
     * apply. This is useful when failing over traffic across regions would not
     * improve service health or may need to be restricted for other reasons
     * like regulatory controls.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover}
     */
    public static final class Failover extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover)
        FailoverOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Failover.newBuilder() to construct.
      private Failover(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Failover() {
        from_ = "";
        to_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Failover();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder.class);
      }

      public static final int FROM_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object from_ = "";
      /**
       * <pre>
       * Originating region.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public java.lang.String getFrom() {
        java.lang.Object ref = from_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          from_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Originating region.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The bytes for from.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFromBytes() {
        java.lang.Object ref = from_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          from_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TO_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object to_ = "";
      /**
       * <pre>
       * Destination region the traffic will fail over to when endpoints in
       * the 'from' region becomes unhealthy.
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The to.
       */
      @java.lang.Override
      public java.lang.String getTo() {
        java.lang.Object ref = to_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          to_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Destination region the traffic will fail over to when endpoints in
       * the 'from' region becomes unhealthy.
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The bytes for to.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getToBytes() {
        java.lang.Object ref = to_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          to_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(from_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, from_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(to_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, to_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(from_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, from_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(to_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, to_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover)) {
          return super.equals(obj);
        }
        istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover other = (istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover) obj;

        if (!getFrom()
            .equals(other.getFrom())) return false;
        if (!getTo()
            .equals(other.getTo())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + FROM_FIELD_NUMBER;
        hash = (53 * hash) + getFrom().hashCode();
        hash = (37 * hash) + TO_FIELD_NUMBER;
        hash = (53 * hash) + getTo().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Specify the traffic failover policy across regions. Since zone and sub-zone
       * failover is supported by default this only needs to be specified for
       * regions when the operator needs to constrain traffic failover so that
       * the default behavior of failing over to any endpoint globally does not
       * apply. This is useful when failing over traffic across regions would not
       * improve service health or may need to be restricted for other reasons
       * like regulatory controls.
       * </pre>
       *
       * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover)
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.FailoverOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder.class);
        }

        // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          from_ = "";
          to_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_descriptor;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover getDefaultInstanceForType() {
          return istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.getDefaultInstance();
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover build() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover buildPartial() {
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover result = new istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.from_ = from_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.to_ = to_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover) {
            return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover other) {
          if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.getDefaultInstance()) return this;
          if (!other.getFrom().isEmpty()) {
            from_ = other.from_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (!other.getTo().isEmpty()) {
            to_ = other.to_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  from_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  to_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object from_ = "";
        /**
         * <pre>
         * Originating region.
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return The from.
         */
        public java.lang.String getFrom() {
          java.lang.Object ref = from_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            from_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Originating region.
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return The bytes for from.
         */
        public com.google.protobuf.ByteString
            getFromBytes() {
          java.lang.Object ref = from_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            from_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Originating region.
         * </pre>
         *
         * <code>string from = 1;</code>
         * @param value The from to set.
         * @return This builder for chaining.
         */
        public Builder setFrom(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          from_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Originating region.
         * </pre>
         *
         * <code>string from = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearFrom() {
          from_ = getDefaultInstance().getFrom();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Originating region.
         * </pre>
         *
         * <code>string from = 1;</code>
         * @param value The bytes for from to set.
         * @return This builder for chaining.
         */
        public Builder setFromBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          from_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private java.lang.Object to_ = "";
        /**
         * <pre>
         * Destination region the traffic will fail over to when endpoints in
         * the 'from' region becomes unhealthy.
         * </pre>
         *
         * <code>string to = 2;</code>
         * @return The to.
         */
        public java.lang.String getTo() {
          java.lang.Object ref = to_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            to_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Destination region the traffic will fail over to when endpoints in
         * the 'from' region becomes unhealthy.
         * </pre>
         *
         * <code>string to = 2;</code>
         * @return The bytes for to.
         */
        public com.google.protobuf.ByteString
            getToBytes() {
          java.lang.Object ref = to_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            to_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Destination region the traffic will fail over to when endpoints in
         * the 'from' region becomes unhealthy.
         * </pre>
         *
         * <code>string to = 2;</code>
         * @param value The to to set.
         * @return This builder for chaining.
         */
        public Builder setTo(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          to_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Destination region the traffic will fail over to when endpoints in
         * the 'from' region becomes unhealthy.
         * </pre>
         *
         * <code>string to = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTo() {
          to_ = getDefaultInstance().getTo();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Destination region the traffic will fail over to when endpoints in
         * the 'from' region becomes unhealthy.
         * </pre>
         *
         * <code>string to = 2;</code>
         * @param value The bytes for to to set.
         * @return This builder for chaining.
         */
        public Builder setToBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          to_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover)
      }

      // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover)
      private static final istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover();
      }

      public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Failover>
          PARSER = new com.google.protobuf.AbstractParser<Failover>() {
        @java.lang.Override
        public Failover parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Failover> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Failover> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DISTRIBUTE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute> distribute_;
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    @java.lang.Override
    public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute> getDistributeList() {
      return distribute_;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.DistributeOrBuilder> 
        getDistributeOrBuilderList() {
      return distribute_;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    @java.lang.Override
    public int getDistributeCount() {
      return distribute_.size();
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute getDistribute(int index) {
      return distribute_.get(index);
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.DistributeOrBuilder getDistributeOrBuilder(
        int index) {
      return distribute_.get(index);
    }

    public static final int FAILOVER_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover> failover_;
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    @java.lang.Override
    public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover> getFailoverList() {
      return failover_;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.FailoverOrBuilder> 
        getFailoverOrBuilderList() {
      return failover_;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    @java.lang.Override
    public int getFailoverCount() {
      return failover_.size();
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover getFailover(int index) {
      return failover_.get(index);
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.FailoverOrBuilder getFailoverOrBuilder(
        int index) {
      return failover_.get(index);
    }

    public static final int ENABLED_FIELD_NUMBER = 3;
    private com.google.protobuf.BoolValue enabled_;
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     * @return Whether the enabled field is set.
     */
    @java.lang.Override
    public boolean hasEnabled() {
      return enabled_ != null;
    }
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     * @return The enabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getEnabled() {
      return enabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
    }
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getEnabledOrBuilder() {
      return enabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < distribute_.size(); i++) {
        output.writeMessage(1, distribute_.get(i));
      }
      for (int i = 0; i < failover_.size(); i++) {
        output.writeMessage(2, failover_.get(i));
      }
      if (enabled_ != null) {
        output.writeMessage(3, getEnabled());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < distribute_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, distribute_.get(i));
      }
      for (int i = 0; i < failover_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, failover_.get(i));
      }
      if (enabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEnabled());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting)) {
        return super.equals(obj);
      }
      istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting other = (istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting) obj;

      if (!getDistributeList()
          .equals(other.getDistributeList())) return false;
      if (!getFailoverList()
          .equals(other.getFailoverList())) return false;
      if (hasEnabled() != other.hasEnabled()) return false;
      if (hasEnabled()) {
        if (!getEnabled()
            .equals(other.getEnabled())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDistributeCount() > 0) {
        hash = (37 * hash) + DISTRIBUTE_FIELD_NUMBER;
        hash = (53 * hash) + getDistributeList().hashCode();
      }
      if (getFailoverCount() > 0) {
        hash = (37 * hash) + FAILOVER_FIELD_NUMBER;
        hash = (53 * hash) + getFailoverList().hashCode();
      }
      if (hasEnabled()) {
        hash = (37 * hash) + ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getEnabled().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Locality-weighted load balancing allows administrators to control the
     * distribution of traffic to endpoints based on the localities of where the
     * traffic originates and where it will terminate. These localities are
     * specified using arbitrary labels that designate a hierarchy of localities in
     * {region}/{zone}/{sub-zone} form. For additional detail refer to
     * [Locality Weight](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * The following example shows how to setup locality weights mesh-wide.
     * Given a mesh with workloads and their service deployed to "us-west/zone1/&#42;"
     * and "us-west/zone2/&#42;". This example specifies that when traffic accessing a
     * service originates from workloads in "us-west/zone1/&#42;", 80% of the traffic
     * will be sent to endpoints in "us-west/zone1/&#42;", i.e the same zone, and the
     * remaining 20% will go to endpoints in "us-west/zone2/&#42;". This setup is
     * intended to favor routing traffic to endpoints in the same locality.
     * A similar setting is specified for traffic originating in "us-west/zone2/&#42;".
     * ```yaml
     *   distribute:
     *     - from: us-west/zone1/&#42;
     *       to:
     *         "us-west/zone1/&#42;": 80
     *         "us-west/zone2/&#42;": 20
     *     - from: us-west/zone2/&#42;
     *       to:
     *         "us-west/zone1/&#42;": 20
     *         "us-west/zone2/&#42;": 80
     * ```
     * If the goal of the operator is not to distribute load across zones and
     * regions but rather to restrict the regionality of failover to meet other
     * operational requirements an operator can set a 'failover' policy instead of
     * a 'distribute' policy.
     * The following example sets up a locality failover policy for regions.
     * Assume a service resides in zones within us-east, us-west &amp; eu-west
     * this example specifies that when endpoints within us-east become unhealthy
     * traffic should failover to endpoints in any zone or sub-zone within eu-west
     * and similarly us-west should failover to us-east.
     * ```yaml
     *  failover:
     *    - from: us-east
     *      to: eu-west
     *    - from: us-west
     *      to: us-east
     * ```
     * Locality load balancing settings.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting)
        istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.class, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Builder.class);
      }

      // Construct using istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (distributeBuilder_ == null) {
          distribute_ = java.util.Collections.emptyList();
        } else {
          distribute_ = null;
          distributeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (failoverBuilder_ == null) {
          failover_ = java.util.Collections.emptyList();
        } else {
          failover_ = null;
          failoverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        enabled_ = null;
        if (enabledBuilder_ != null) {
          enabledBuilder_.dispose();
          enabledBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting getDefaultInstanceForType() {
        return istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.getDefaultInstance();
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting build() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting buildPartial() {
        istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting result = new istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting result) {
        if (distributeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            distribute_ = java.util.Collections.unmodifiableList(distribute_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.distribute_ = distribute_;
        } else {
          result.distribute_ = distributeBuilder_.build();
        }
        if (failoverBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            failover_ = java.util.Collections.unmodifiableList(failover_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.failover_ = failover_;
        } else {
          result.failover_ = failoverBuilder_.build();
        }
      }

      private void buildPartial0(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.enabled_ = enabledBuilder_ == null
              ? enabled_
              : enabledBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting) {
          return mergeFrom((istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting other) {
        if (other == istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.getDefaultInstance()) return this;
        if (distributeBuilder_ == null) {
          if (!other.distribute_.isEmpty()) {
            if (distribute_.isEmpty()) {
              distribute_ = other.distribute_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDistributeIsMutable();
              distribute_.addAll(other.distribute_);
            }
            onChanged();
          }
        } else {
          if (!other.distribute_.isEmpty()) {
            if (distributeBuilder_.isEmpty()) {
              distributeBuilder_.dispose();
              distributeBuilder_ = null;
              distribute_ = other.distribute_;
              bitField0_ = (bitField0_ & ~0x00000001);
              distributeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDistributeFieldBuilder() : null;
            } else {
              distributeBuilder_.addAllMessages(other.distribute_);
            }
          }
        }
        if (failoverBuilder_ == null) {
          if (!other.failover_.isEmpty()) {
            if (failover_.isEmpty()) {
              failover_ = other.failover_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFailoverIsMutable();
              failover_.addAll(other.failover_);
            }
            onChanged();
          }
        } else {
          if (!other.failover_.isEmpty()) {
            if (failoverBuilder_.isEmpty()) {
              failoverBuilder_.dispose();
              failoverBuilder_ = null;
              failover_ = other.failover_;
              bitField0_ = (bitField0_ & ~0x00000002);
              failoverBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFailoverFieldBuilder() : null;
            } else {
              failoverBuilder_.addAllMessages(other.failover_);
            }
          }
        }
        if (other.hasEnabled()) {
          mergeEnabled(other.getEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute m =
                    input.readMessage(
                        istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.parser(),
                        extensionRegistry);
                if (distributeBuilder_ == null) {
                  ensureDistributeIsMutable();
                  distribute_.add(m);
                } else {
                  distributeBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover m =
                    input.readMessage(
                        istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.parser(),
                        extensionRegistry);
                if (failoverBuilder_ == null) {
                  ensureFailoverIsMutable();
                  failover_.add(m);
                } else {
                  failoverBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getEnabledFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute> distribute_ =
        java.util.Collections.emptyList();
      private void ensureDistributeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          distribute_ = new java.util.ArrayList<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute>(distribute_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.DistributeOrBuilder> distributeBuilder_;

      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute> getDistributeList() {
        if (distributeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(distribute_);
        } else {
          return distributeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public int getDistributeCount() {
        if (distributeBuilder_ == null) {
          return distribute_.size();
        } else {
          return distributeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute getDistribute(int index) {
        if (distributeBuilder_ == null) {
          return distribute_.get(index);
        } else {
          return distributeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public Builder setDistribute(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute value) {
        if (distributeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDistributeIsMutable();
          distribute_.set(index, value);
          onChanged();
        } else {
          distributeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public Builder setDistribute(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder builderForValue) {
        if (distributeBuilder_ == null) {
          ensureDistributeIsMutable();
          distribute_.set(index, builderForValue.build());
          onChanged();
        } else {
          distributeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public Builder addDistribute(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute value) {
        if (distributeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDistributeIsMutable();
          distribute_.add(value);
          onChanged();
        } else {
          distributeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public Builder addDistribute(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute value) {
        if (distributeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDistributeIsMutable();
          distribute_.add(index, value);
          onChanged();
        } else {
          distributeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public Builder addDistribute(
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder builderForValue) {
        if (distributeBuilder_ == null) {
          ensureDistributeIsMutable();
          distribute_.add(builderForValue.build());
          onChanged();
        } else {
          distributeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public Builder addDistribute(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder builderForValue) {
        if (distributeBuilder_ == null) {
          ensureDistributeIsMutable();
          distribute_.add(index, builderForValue.build());
          onChanged();
        } else {
          distributeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public Builder addAllDistribute(
          java.lang.Iterable<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute> values) {
        if (distributeBuilder_ == null) {
          ensureDistributeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, distribute_);
          onChanged();
        } else {
          distributeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public Builder clearDistribute() {
        if (distributeBuilder_ == null) {
          distribute_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          distributeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public Builder removeDistribute(int index) {
        if (distributeBuilder_ == null) {
          ensureDistributeIsMutable();
          distribute_.remove(index);
          onChanged();
        } else {
          distributeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder getDistributeBuilder(
          int index) {
        return getDistributeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.DistributeOrBuilder getDistributeOrBuilder(
          int index) {
        if (distributeBuilder_ == null) {
          return distribute_.get(index);  } else {
          return distributeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.DistributeOrBuilder> 
           getDistributeOrBuilderList() {
        if (distributeBuilder_ != null) {
          return distributeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(distribute_);
        }
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder addDistributeBuilder() {
        return getDistributeFieldBuilder().addBuilder(
            istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.getDefaultInstance());
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder addDistributeBuilder(
          int index) {
        return getDistributeFieldBuilder().addBuilder(
            index, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.getDefaultInstance());
      }
      /**
       * <pre>
       * Optional: only one of distribute or failover can be set.
       * Explicitly specify loadbalancing weight across different zones and geographical locations.
       * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
       * If empty, the locality weight is set according to the endpoints number within it.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
       */
      public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder> 
           getDistributeBuilderList() {
        return getDistributeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.DistributeOrBuilder> 
          getDistributeFieldBuilder() {
        if (distributeBuilder_ == null) {
          distributeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Distribute.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.DistributeOrBuilder>(
                  distribute_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          distribute_ = null;
        }
        return distributeBuilder_;
      }

      private java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover> failover_ =
        java.util.Collections.emptyList();
      private void ensureFailoverIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          failover_ = new java.util.ArrayList<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover>(failover_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.FailoverOrBuilder> failoverBuilder_;

      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover> getFailoverList() {
        if (failoverBuilder_ == null) {
          return java.util.Collections.unmodifiableList(failover_);
        } else {
          return failoverBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public int getFailoverCount() {
        if (failoverBuilder_ == null) {
          return failover_.size();
        } else {
          return failoverBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover getFailover(int index) {
        if (failoverBuilder_ == null) {
          return failover_.get(index);
        } else {
          return failoverBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public Builder setFailover(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover value) {
        if (failoverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFailoverIsMutable();
          failover_.set(index, value);
          onChanged();
        } else {
          failoverBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public Builder setFailover(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder builderForValue) {
        if (failoverBuilder_ == null) {
          ensureFailoverIsMutable();
          failover_.set(index, builderForValue.build());
          onChanged();
        } else {
          failoverBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public Builder addFailover(istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover value) {
        if (failoverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFailoverIsMutable();
          failover_.add(value);
          onChanged();
        } else {
          failoverBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public Builder addFailover(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover value) {
        if (failoverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFailoverIsMutable();
          failover_.add(index, value);
          onChanged();
        } else {
          failoverBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public Builder addFailover(
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder builderForValue) {
        if (failoverBuilder_ == null) {
          ensureFailoverIsMutable();
          failover_.add(builderForValue.build());
          onChanged();
        } else {
          failoverBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public Builder addFailover(
          int index, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder builderForValue) {
        if (failoverBuilder_ == null) {
          ensureFailoverIsMutable();
          failover_.add(index, builderForValue.build());
          onChanged();
        } else {
          failoverBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public Builder addAllFailover(
          java.lang.Iterable<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover> values) {
        if (failoverBuilder_ == null) {
          ensureFailoverIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, failover_);
          onChanged();
        } else {
          failoverBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public Builder clearFailover() {
        if (failoverBuilder_ == null) {
          failover_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          failoverBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public Builder removeFailover(int index) {
        if (failoverBuilder_ == null) {
          ensureFailoverIsMutable();
          failover_.remove(index);
          onChanged();
        } else {
          failoverBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder getFailoverBuilder(
          int index) {
        return getFailoverFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.FailoverOrBuilder getFailoverOrBuilder(
          int index) {
        if (failoverBuilder_ == null) {
          return failover_.get(index);  } else {
          return failoverBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public java.util.List<? extends istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.FailoverOrBuilder> 
           getFailoverOrBuilderList() {
        if (failoverBuilder_ != null) {
          return failoverBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(failover_);
        }
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder addFailoverBuilder() {
        return getFailoverFieldBuilder().addBuilder(
            istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.getDefaultInstance());
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder addFailoverBuilder(
          int index) {
        return getFailoverFieldBuilder().addBuilder(
            index, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.getDefaultInstance());
      }
      /**
       * <pre>
       * Optional: only failover or distribute can be set.
       * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
       * Should be used together with OutlierDetection to detect unhealthy endpoints.
       * Note: if no OutlierDetection specified, this will not take effect.
       * </pre>
       *
       * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
       */
      public java.util.List<istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder> 
           getFailoverBuilderList() {
        return getFailoverFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.FailoverOrBuilder> 
          getFailoverFieldBuilder() {
        if (failoverBuilder_ == null) {
          failoverBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.Failover.Builder, istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting.FailoverOrBuilder>(
                  failover_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          failover_ = null;
        }
        return failoverBuilder_;
      }

      private com.google.protobuf.BoolValue enabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> enabledBuilder_;
      /**
       * <pre>
       * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
       * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 3;</code>
       * @return Whether the enabled field is set.
       */
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
       * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 3;</code>
       * @return The enabled.
       */
      public com.google.protobuf.BoolValue getEnabled() {
        if (enabledBuilder_ == null) {
          return enabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
        } else {
          return enabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
       * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 3;</code>
       */
      public Builder setEnabled(com.google.protobuf.BoolValue value) {
        if (enabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          enabled_ = value;
        } else {
          enabledBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
       * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 3;</code>
       */
      public Builder setEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (enabledBuilder_ == null) {
          enabled_ = builderForValue.build();
        } else {
          enabledBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
       * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 3;</code>
       */
      public Builder mergeEnabled(com.google.protobuf.BoolValue value) {
        if (enabledBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            enabled_ != null &&
            enabled_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
            getEnabledBuilder().mergeFrom(value);
          } else {
            enabled_ = value;
          }
        } else {
          enabledBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
       * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 3;</code>
       */
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000004);
        enabled_ = null;
        if (enabledBuilder_ != null) {
          enabledBuilder_.dispose();
          enabledBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
       * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 3;</code>
       */
      public com.google.protobuf.BoolValue.Builder getEnabledBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
       * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 3;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getEnabledOrBuilder() {
        if (enabledBuilder_ != null) {
          return enabledBuilder_.getMessageOrBuilder();
        } else {
          return enabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
        }
      }
      /**
       * <pre>
       * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
       * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getEnabledFieldBuilder() {
        if (enabledBuilder_ == null) {
          enabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getEnabled(),
                  getParentForChildren(),
                  isClean());
          enabled_ = null;
        }
        return enabledBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting)
    private static final istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting();
    }

    public static istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LocalityLoadBalancerSetting>
        PARSER = new com.google.protobuf.AbstractParser<LocalityLoadBalancerSetting>() {
      @java.lang.Override
      public LocalityLoadBalancerSetting parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LocalityLoadBalancerSetting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LocalityLoadBalancerSetting> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public istio.networking.v1alpha3.DestinationRuleOuterClass.LocalityLoadBalancerSetting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_DestinationRule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_DestinationRule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_TrafficPolicy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_TrafficPolicy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_Subset_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_Subset_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_Subset_LabelsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_Subset_LabelsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_LoadBalancerSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_LoadBalancerSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_HTTPCookie_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_HTTPCookie_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_OutlierDetection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_OutlierDetection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_ClientTLSSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_ClientTLSSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_ToEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_ToEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*networking/v1alpha3/destination_rule.p" +
      "roto\022\031istio.networking.v1alpha3\032\037google/" +
      "api/field_behavior.proto\032\036google/protobu" +
      "f/duration.proto\032\036google/protobuf/wrappe" +
      "rs.proto\032)networking/v1alpha3/virtual_se" +
      "rvice.proto\032\024gogoproto/gogo.proto\"\255\001\n\017De" +
      "stinationRule\022\021\n\004host\030\001 \001(\tB\003\340A\002\022@\n\016traf" +
      "fic_policy\030\002 \001(\0132(.istio.networking.v1al" +
      "pha3.TrafficPolicy\0222\n\007subsets\030\003 \003(\0132!.is" +
      "tio.networking.v1alpha3.Subset\022\021\n\texport" +
      "_to\030\004 \003(\t\"\343\005\n\rTrafficPolicy\022F\n\rload_bala" +
      "ncer\030\001 \001(\0132/.istio.networking.v1alpha3.L" +
      "oadBalancerSettings\022J\n\017connection_pool\030\002" +
      " \001(\01321.istio.networking.v1alpha3.Connect" +
      "ionPoolSettings\022F\n\021outlier_detection\030\003 \001" +
      "(\0132+.istio.networking.v1alpha3.OutlierDe" +
      "tection\0229\n\003tls\030\004 \001(\0132,.istio.networking." +
      "v1alpha3.ClientTLSSettings\022W\n\023port_level" +
      "_settings\030\005 \003(\0132:.istio.networking.v1alp" +
      "ha3.TrafficPolicy.PortTrafficPolicy\032\341\002\n\021" +
      "PortTrafficPolicy\0225\n\004port\030\001 \001(\0132\'.istio." +
      "networking.v1alpha3.PortSelector\022F\n\rload" +
      "_balancer\030\002 \001(\0132/.istio.networking.v1alp" +
      "ha3.LoadBalancerSettings\022J\n\017connection_p" +
      "ool\030\003 \001(\01321.istio.networking.v1alpha3.Co" +
      "nnectionPoolSettings\022F\n\021outlier_detectio" +
      "n\030\004 \001(\0132+.istio.networking.v1alpha3.Outl" +
      "ierDetection\0229\n\003tls\030\005 \001(\0132,.istio.networ" +
      "king.v1alpha3.ClientTLSSettings\"\313\001\n\006Subs" +
      "et\022\021\n\004name\030\001 \001(\tB\003\340A\002\022=\n\006labels\030\002 \003(\0132-." +
      "istio.networking.v1alpha3.Subset.LabelsE" +
      "ntry\022@\n\016traffic_policy\030\003 \001(\0132(.istio.net" +
      "working.v1alpha3.TrafficPolicy\032-\n\013Labels" +
      "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\301\005" +
      "\n\024LoadBalancerSettings\022J\n\006simple\030\001 \001(\01628" +
      ".istio.networking.v1alpha3.LoadBalancerS" +
      "ettings.SimpleLBH\000\022[\n\017consistent_hash\030\002 " +
      "\001(\0132@.istio.networking.v1alpha3.LoadBala" +
      "ncerSettings.ConsistentHashLBH\000\022S\n\023local" +
      "ity_lb_setting\030\003 \001(\01326.istio.networking." +
      "v1alpha3.LocalityLoadBalancerSetting\032\323\002\n" +
      "\020ConsistentHashLB\022\032\n\020http_header_name\030\001 " +
      "\001(\tH\000\022b\n\013http_cookie\030\002 \001(\0132K.istio.netwo" +
      "rking.v1alpha3.LoadBalancerSettings.Cons" +
      "istentHashLB.HTTPCookieH\000\022\027\n\ruse_source_" +
      "ip\030\003 \001(\010H\000\022#\n\031http_query_parameter_name\030" +
      "\005 \001(\tH\000\022\031\n\021minimum_ring_size\030\004 \001(\004\032Z\n\nHT" +
      "TPCookie\022\021\n\004name\030\001 \001(\tB\003\340A\002\022\014\n\004path\030\002 \001(" +
      "\t\022+\n\003ttl\030\003 \001(\0132\031.google.protobuf.Duratio" +
      "nB\003\340A\002B\n\n\010hash_key\"H\n\010SimpleLB\022\017\n\013ROUND_" +
      "ROBIN\020\000\022\016\n\nLEAST_CONN\020\001\022\n\n\006RANDOM\020\002\022\017\n\013P" +
      "ASSTHROUGH\020\003B\013\n\tlb_policy\"\355\006\n\026Connection" +
      "PoolSettings\022J\n\003tcp\030\001 \001(\0132=.istio.networ" +
      "king.v1alpha3.ConnectionPoolSettings.TCP" +
      "Settings\022L\n\004http\030\002 \001(\0132>.istio.networkin" +
      "g.v1alpha3.ConnectionPoolSettings.HTTPSe" +
      "ttings\032\263\002\n\013TCPSettings\022\027\n\017max_connection" +
      "s\030\001 \001(\005\0222\n\017connect_timeout\030\002 \001(\0132\031.googl" +
      "e.protobuf.Duration\022a\n\rtcp_keepalive\030\003 \001" +
      "(\0132J.istio.networking.v1alpha3.Connectio" +
      "nPoolSettings.TCPSettings.TcpKeepalive\032t" +
      "\n\014TcpKeepalive\022\016\n\006probes\030\001 \001(\r\022\'\n\004time\030\002" +
      " \001(\0132\031.google.protobuf.Duration\022+\n\010inter" +
      "val\030\003 \001(\0132\031.google.protobuf.Duration\032\202\003\n" +
      "\014HTTPSettings\022\"\n\032http1_max_pending_reque" +
      "sts\030\001 \001(\005\022\032\n\022http2_max_requests\030\002 \001(\005\022#\n" +
      "\033max_requests_per_connection\030\003 \001(\005\022\023\n\013ma" +
      "x_retries\030\004 \001(\005\022/\n\014idle_timeout\030\005 \001(\0132\031." +
      "google.protobuf.Duration\022i\n\021h2_upgrade_p" +
      "olicy\030\006 \001(\0162N.istio.networking.v1alpha3." +
      "ConnectionPoolSettings.HTTPSettings.H2Up" +
      "gradePolicy\022\033\n\023use_client_protocol\030\007 \001(\010" +
      "\"?\n\017H2UpgradePolicy\022\013\n\007DEFAULT\020\000\022\022\n\016DO_N" +
      "OT_UPGRADE\020\001\022\013\n\007UPGRADE\020\002\"\320\002\n\020OutlierDet" +
      "ection\022\036\n\022consecutive_errors\030\001 \001(\005B\002\030\001\022@" +
      "\n\032consecutive_gateway_errors\030\006 \001(\0132\034.goo" +
      "gle.protobuf.UInt32Value\022<\n\026consecutive_" +
      "5xx_errors\030\007 \001(\0132\034.google.protobuf.UInt3" +
      "2Value\022+\n\010interval\030\002 \001(\0132\031.google.protob" +
      "uf.Duration\0225\n\022base_ejection_time\030\003 \001(\0132" +
      "\031.google.protobuf.Duration\022\034\n\024max_ejecti" +
      "on_percent\030\004 \001(\005\022\032\n\022min_health_percent\030\005" +
      " \001(\005\"\251\002\n\021ClientTLSSettings\022G\n\004mode\030\001 \001(\016" +
      "24.istio.networking.v1alpha3.ClientTLSSe" +
      "ttings.TLSmodeB\003\340A\002\022\032\n\022client_certificat" +
      "e\030\002 \001(\t\022\023\n\013private_key\030\003 \001(\t\022\027\n\017ca_certi" +
      "ficates\030\004 \001(\t\022\027\n\017credential_name\030\007 \001(\t\022\031" +
      "\n\021subject_alt_names\030\005 \003(\t\022\013\n\003sni\030\006 \001(\t\"@" +
      "\n\007TLSmode\022\013\n\007DISABLE\020\000\022\n\n\006SIMPLE\020\001\022\n\n\006MU" +
      "TUAL\020\002\022\020\n\014ISTIO_MUTUAL\020\003\"\271\003\n\033LocalityLoa" +
      "dBalancerSetting\022U\n\ndistribute\030\001 \003(\0132A.i" +
      "stio.networking.v1alpha3.LocalityLoadBal" +
      "ancerSetting.Distribute\022Q\n\010failover\030\002 \003(" +
      "\0132?.istio.networking.v1alpha3.LocalityLo" +
      "adBalancerSetting.Failover\022+\n\007enabled\030\003 " +
      "\001(\0132\032.google.protobuf.BoolValue\032\234\001\n\nDist" +
      "ribute\022\014\n\004from\030\001 \001(\t\022U\n\002to\030\002 \003(\0132I.istio" +
      ".networking.v1alpha3.LocalityLoadBalance" +
      "rSetting.Distribute.ToEntry\032)\n\007ToEntry\022\013" +
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\032$\n\010Failov" +
      "er\022\014\n\004from\030\001 \001(\t\022\n\n\002to\030\002 \001(\tB\"Z istio.io" +
      "/api/networking/v1alpha3b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.FieldBehaviorProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          istio.networking.v1alpha3.VirtualServiceOuterClass.getDescriptor(),
          com.google.protobuf.GoGoProtos.getDescriptor(),
        });
    internal_static_istio_networking_v1alpha3_DestinationRule_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_istio_networking_v1alpha3_DestinationRule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_DestinationRule_descriptor,
        new java.lang.String[] { "Host", "TrafficPolicy", "Subsets", "ExportTo", });
    internal_static_istio_networking_v1alpha3_TrafficPolicy_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_istio_networking_v1alpha3_TrafficPolicy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_TrafficPolicy_descriptor,
        new java.lang.String[] { "LoadBalancer", "ConnectionPool", "OutlierDetection", "Tls", "PortLevelSettings", });
    internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_descriptor =
      internal_static_istio_networking_v1alpha3_TrafficPolicy_descriptor.getNestedTypes().get(0);
    internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_descriptor,
        new java.lang.String[] { "Port", "LoadBalancer", "ConnectionPool", "OutlierDetection", "Tls", });
    internal_static_istio_networking_v1alpha3_Subset_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_istio_networking_v1alpha3_Subset_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_Subset_descriptor,
        new java.lang.String[] { "Name", "Labels", "TrafficPolicy", });
    internal_static_istio_networking_v1alpha3_Subset_LabelsEntry_descriptor =
      internal_static_istio_networking_v1alpha3_Subset_descriptor.getNestedTypes().get(0);
    internal_static_istio_networking_v1alpha3_Subset_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_Subset_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_istio_networking_v1alpha3_LoadBalancerSettings_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_istio_networking_v1alpha3_LoadBalancerSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_LoadBalancerSettings_descriptor,
        new java.lang.String[] { "Simple", "ConsistentHash", "LocalityLbSetting", "LbPolicy", });
    internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_descriptor =
      internal_static_istio_networking_v1alpha3_LoadBalancerSettings_descriptor.getNestedTypes().get(0);
    internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_descriptor,
        new java.lang.String[] { "HttpHeaderName", "HttpCookie", "UseSourceIp", "HttpQueryParameterName", "MinimumRingSize", "HashKey", });
    internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_HTTPCookie_descriptor =
      internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_descriptor.getNestedTypes().get(0);
    internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_HTTPCookie_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_LoadBalancerSettings_ConsistentHashLB_HTTPCookie_descriptor,
        new java.lang.String[] { "Name", "Path", "Ttl", });
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor,
        new java.lang.String[] { "Tcp", "Http", });
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_descriptor =
      internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor.getNestedTypes().get(0);
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_descriptor,
        new java.lang.String[] { "MaxConnections", "ConnectTimeout", "TcpKeepalive", });
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_descriptor =
      internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_descriptor.getNestedTypes().get(0);
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_descriptor,
        new java.lang.String[] { "Probes", "Time", "Interval", });
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_descriptor =
      internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor.getNestedTypes().get(1);
    internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_descriptor,
        new java.lang.String[] { "Http1MaxPendingRequests", "Http2MaxRequests", "MaxRequestsPerConnection", "MaxRetries", "IdleTimeout", "H2UpgradePolicy", "UseClientProtocol", });
    internal_static_istio_networking_v1alpha3_OutlierDetection_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_istio_networking_v1alpha3_OutlierDetection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_OutlierDetection_descriptor,
        new java.lang.String[] { "ConsecutiveErrors", "ConsecutiveGatewayErrors", "Consecutive5XxErrors", "Interval", "BaseEjectionTime", "MaxEjectionPercent", "MinHealthPercent", });
    internal_static_istio_networking_v1alpha3_ClientTLSSettings_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_istio_networking_v1alpha3_ClientTLSSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_ClientTLSSettings_descriptor,
        new java.lang.String[] { "Mode", "ClientCertificate", "PrivateKey", "CaCertificates", "CredentialName", "SubjectAltNames", "Sni", });
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor,
        new java.lang.String[] { "Distribute", "Failover", "Enabled", });
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_descriptor =
      internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor.getNestedTypes().get(0);
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_descriptor,
        new java.lang.String[] { "From", "To", });
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_ToEntry_descriptor =
      internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_descriptor.getNestedTypes().get(0);
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_ToEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_ToEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_descriptor =
      internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor.getNestedTypes().get(1);
    internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_descriptor,
        new java.lang.String[] { "From", "To", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.FieldBehaviorProto.fieldBehavior);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.FieldBehaviorProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    istio.networking.v1alpha3.VirtualServiceOuterClass.getDescriptor();
    com.google.protobuf.GoGoProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
